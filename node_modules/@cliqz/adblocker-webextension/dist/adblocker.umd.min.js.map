{"version":3,"file":"adblocker.umd.min.js","sources":["../../../node_modules/tldts-core/src/extract-hostname.ts","../../../node_modules/tldts-core/src/is-valid.ts","../../../node_modules/tldts-core/src/options.ts","../../../node_modules/tldts-core/src/factory.ts","../../../node_modules/tldts-core/src/is-ip.ts","../../../node_modules/tldts-core/src/domain.ts","../../../node_modules/tldts-core/src/subdomain.ts","../../../node_modules/tldts-core/src/domain-without-suffix.ts","../../../node_modules/tldts-experimental/src/data/hashes.ts","../../../node_modules/tldts-experimental/src/packed-hashes.ts","../../../node_modules/tldts-core/src/lookup/fast-path.ts","../../../node_modules/tldts-experimental/index.ts","../../../node_modules/@remusao/trie/index.ts","../../../node_modules/@remusao/smaz-compress/index.ts","../../../node_modules/@remusao/smaz-decompress/index.ts","../../../node_modules/@remusao/smaz/index.ts","../../adblocker/src/codebooks/cosmetic-selector.ts","../../adblocker/src/codebooks/network-csp.ts","../../adblocker/src/codebooks/network-filter.ts","../../adblocker/src/codebooks/network-hostname.ts","../../adblocker/src/codebooks/network-redirect.ts","../../adblocker/src/codebooks/raw-network.ts","../../adblocker/src/codebooks/raw-cosmetic.ts","../../adblocker/src/compression.ts","../../adblocker/src/crc32.ts","../../adblocker/src/punycode.ts","../../adblocker/src/data-view.ts","../../adblocker/src/queue-microtask.ts","../../adblocker/src/config.ts","../../adblocker/src/events.ts","../../adblocker/src/fetch.ts","../../adblocker/src/filters/dsl.ts","../../adblocker-extended-selectors/src/parse.ts","../../adblocker-extended-selectors/src/types.ts","../../adblocker-extended-selectors/src/extended.ts","../../../node_modules/@remusao/guess-url-type/src/extensions/documents.ts","../../../node_modules/@remusao/guess-url-type/src/extensions/fonts.ts","../../../node_modules/@remusao/guess-url-type/src/extensions/images.ts","../../../node_modules/@remusao/guess-url-type/src/extensions/medias.ts","../../../node_modules/@remusao/guess-url-type/src/extensions/scripts.ts","../../../node_modules/@remusao/guess-url-type/src/extensions/stylesheets.ts","../../adblocker/src/tokens-buffer.ts","../../adblocker/src/utils.ts","../../adblocker/src/request.ts","../../../node_modules/@remusao/guess-url-type/index.ts","../../../node_modules/@remusao/guess-url-type/src/extname.ts","../../adblocker/src/engine/domains.ts","../../adblocker/src/html-filtering.ts","../../adblocker/src/filters/cosmetic.ts","../../adblocker/src/filters/network.ts","../../adblocker/src/lists.ts","../../../node_modules/@remusao/small/src/flv.ts","../../../node_modules/@remusao/small/src/gif.ts","../../../node_modules/@remusao/small/src/html.ts","../../../node_modules/@remusao/small/src/ico.ts","../../../node_modules/@remusao/small/src/jpeg.ts","../../../node_modules/@remusao/small/src/javascript.ts","../../../node_modules/@remusao/small/src/json.ts","../../../node_modules/@remusao/small/src/mp3.ts","../../../node_modules/@remusao/small/src/mp4.ts","../../../node_modules/@remusao/small/src/pdf.ts","../../../node_modules/@remusao/small/src/png.ts","../../../node_modules/@remusao/small/src/svg.ts","../../../node_modules/@remusao/small/src/txt.ts","../../../node_modules/@remusao/small/src/wav.ts","../../../node_modules/@remusao/small/src/webm.ts","../../../node_modules/@remusao/small/src/webp.ts","../../../node_modules/@remusao/small/src/wmv.ts","../../../node_modules/@remusao/small/index.ts","../../adblocker/src/resources.ts","../../adblocker/src/compact-set.ts","../../adblocker/src/engine/optimizer.ts","../../adblocker/src/engine/reverse-index.ts","../../adblocker/src/engine/bucket/filters.ts","../../adblocker/src/engine/bucket/cosmetic.ts","../../adblocker/src/engine/bucket/network.ts","../../adblocker/src/engine/engine.ts","../../adblocker/src/encoding.ts","../adblocker.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \"div[style=\\\"position: absolute; inset: 0px; overflow: hidden; z-index: 160; background: transparent none repeat scroll 0% 0%; display: block;\\\"]\",\n  \"div[style=\\\"position: fixed; display: block; width: 100%; height: 100%; inset: 0px; background-color: rgba(0, 0, 0, 0); z-index: 300000;\\\"]\",\n  \":not([style^=\\\"position: absolute; left: -5000px\\\"])\",\n  \"acis, document.querySelectorAll, popMagic\",\n  \"aost, String.prototype.charCodeAt, ai_\",\n  \"aopr, app_vars.force_disable_adblock\",\n  \"aost, Math.random, /\\\\st\\\\.[a-zA-Z]*\\\\s\",\n  \"addEventListener, google_ad_client\",\n  \"paid.outbrain.com/network/redir?\\\"]\",\n  \"acis, document.addEventListener, \",\n  \"acis, disableSelection, reEnable\",\n  \"^script:has-text(break;case $.)\",\n  \"acis, document.getElementById, \",\n  \"acis, JSON.parse, break;case $.\",\n  \"acis, document.createElement, \",\n  \"aopr, document.dispatchEvent\",\n  \"acis, String.fromCharCode, \",\n  \"acis, Math, break;case $.\",\n  \"nosiif, visibility, 1000\",\n  \"document.onselectstart\",\n  \"set, blurred, false\",\n  \"decodeURIComponent\",\n  \"[target=\\\"_blank\\\"]\",\n  \"[href^=\\\"https://\",\n  \"disableSelection\",\n  \"[href^=\\\"http://\",\n  \"#custom_html-\",\n  \"BlockDetected\",\n  \"eval, replace\",\n  \"no-fetch-if, \",\n  \"div[class^=\\\"\",\n  \"dvertisement\",\n  \"nextFunction\",\n  \"contextmenu\",\n  \"Math, zfglo\",\n  \"otification\",\n  \", noopFunc\",\n  \":has-text(\",\n  \"AaDetector\",\n  \"aopw, _pop\",\n  \"background\",\n  \"container\",\n  \"Container\",\n  \"decodeURI\",\n  \"div[id^=\\\"\",\n  \"div[style\",\n  \"placehold\",\n  \"rectangle\",\n  \"[href*=\\\"\",\n  \"disclaim\",\n  \"https://\",\n  \"nano-sib\",\n  \"nostif, \",\n  \"nowebrtc\",\n  \"skyscrap\",\n  \".com/\\\"]\",\n  \"#ctl00_\",\n  \"300x250\",\n  \"article\",\n  \"consent\",\n  \"content\",\n  \"message\",\n  \"Message\",\n  \"privacy\",\n  \"sidebar\",\n  \"sponsor\",\n  \"wrapper\",\n  \"[class\",\n  \"[data-\",\n  \"728x90\",\n  \"accept\",\n  \"Accept\",\n  \"acis, \",\n  \"aeld, \",\n  \"aopr, \",\n  \"aopw, \",\n  \"banner\",\n  \"bottom\",\n  \"Bottom\",\n  \"cookie\",\n  \"Cookie\",\n  \"google\",\n  \"notice\",\n  \"nowoif\",\n  \"policy\",\n  \"Policy\",\n  \"widget\",\n  \":has(\",\n  \":not(\",\n  \"block\",\n  \"Block\",\n  \"board\",\n  \"click\",\n  \"cript\",\n  \"docum\",\n  \"frame\",\n  \"popup\",\n  \"promo\",\n  \"sense\",\n  \"set, \",\n  \"width\",\n  \"Wrapp\",\n  \".com\",\n  \"0px;\",\n  \"body\",\n  \"dfp-\",\n  \"down\",\n  \"foot\",\n  \"gdpr\",\n  \"home\",\n  \"html\",\n  \"icky\",\n  \"ight\",\n  \"page\",\n  \"show\",\n  \"text\",\n  \"tion\",\n  \"true\",\n  \"view\",\n  \"wrap\",\n  \"www.\",\n  \" > \",\n  \"250\",\n  \"box\",\n  \"Box\",\n  \"div\",\n  \"ent\",\n  \"ide\",\n  \"lay\",\n  \"mod\",\n  \"out\",\n  \"sby\",\n  \"top\",\n  \"__\",\n  \", \",\n  \".a\",\n  \".t\",\n  \"\\\"]\",\n  \"=\\\"\",\n  \"00\",\n  \"ab\",\n  \"ac\",\n  \"ad\",\n  \"Ad\",\n  \"ag\",\n  \"al\",\n  \"an\",\n  \"ar\",\n  \"at\",\n  \"ct\",\n  \"de\",\n  \"e-\",\n  \"ed\",\n  \"el\",\n  \"en\",\n  \"er\",\n  \"fi\",\n  \"fo\",\n  \"g-\",\n  \"he\",\n  \"ic\",\n  \"id\",\n  \"il\",\n  \"in\",\n  \"is\",\n  \"it\",\n  \"la\",\n  \"le\",\n  \"lo\",\n  \"ma\",\n  \"mp\",\n  \"ol\",\n  \"on\",\n  \"op\",\n  \"or\",\n  \"ov\",\n  \"ra\",\n  \"re\",\n  \"ro\",\n  \"s_\",\n  \"s-\",\n  \"se\",\n  \"sp\",\n  \"st\",\n  \"t_\",\n  \"t-\",\n  \"te\",\n  \"un\",\n  \" \",\n  \"_\",\n  \"-\",\n  \";\",\n  \":\",\n  \".\",\n  \")\",\n  \"[\",\n  \"]\",\n  \"*\",\n  \"/\",\n  \"#\",\n  \"^\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"a\",\n  \"A\",\n  \"b\",\n  \"B\",\n  \"c\",\n  \"C\",\n  \"d\",\n  \"D\",\n  \"e\",\n  \"E\",\n  \"f\",\n  \"F\",\n  \"g\",\n  \"h\",\n  \"H\",\n  \"i\",\n  \"I\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"L\",\n  \"m\",\n  \"M\",\n  \"n\",\n  \"N\",\n  \"o\",\n  \"O\",\n  \"p\",\n  \"P\",\n  \"q\",\n  \"r\",\n  \"R\",\n  \"s\",\n  \"S\",\n  \"t\",\n  \"T\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"W\",\n  \"x\",\n  \"y\",\n  \"z\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \"sandbox allow-forms allow-same-origin allow-scripts allow-modals allow-orientation-lock allow-pointer-lock allow-presentation allow-top-navigation\",\n  \"script-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:\",\n  \"script-src 'self' 'unsafe-inline' 'unsafe-eval' data:\",\n  \"script-src 'self' '*' 'unsafe-inline'\",\n  \"default-src 'unsafe-inline' 'self'\",\n  \"script-src 'self' 'unsafe-inline' \",\n  \"script-src * 'unsafe-inline'\",\n  \" *.google.com *.gstatic.com\",\n  \".com *.googletagmanager.com\",\n  \".com *.googleapis.com *.\",\n  \" *.google-analytics.com\",\n  \"*.gstatic.com *.google\",\n  \" *.cloudflare.com *.\",\n  \" *.bootstrapcdn.com\",\n  \"frame-src 'self' *\",\n  \" *.googleapis.com\",\n  \"child-src 'none';\",\n  \"worker-src 'none'\",\n  \" *.facebook.com\",\n  \"'unsafe-inline'\",\n  \"'unsafe-eval' \",\n  \"facebook.net\",\n  \"-src 'self'\",\n  \"connect-src\",\n  \"script-src \",\n  \"style-src *\",\n  \".googletag\",\n  \"cloudflare\",\n  \"jquery.com\",\n  \"child-src\",\n  \"frame-src\",\n  \"https://\",\n  \".com *.\",\n  \"'self' \",\n  \"addthis\",\n  \"captcha\",\n  \"connect\",\n  \"default\",\n  \"gstatic\",\n  \" blob:\",\n  \" data:\",\n  \"disqus\",\n  \"google\",\n  \".com\",\n  \".net\",\n  \" *.\",\n  \"age\",\n  \"cdn\",\n  \"dia\",\n  \"tra\",\n  \"yti\",\n  \" *\",\n  \"*.\",\n  \"an\",\n  \"at\",\n  \"el\",\n  \"er\",\n  \"ic\",\n  \"im\",\n  \"in\",\n  \"le\",\n  \"me\",\n  \"rc\",\n  \"re\",\n  \"st\",\n  \"tt\",\n  \"tu\",\n  \"wi\",\n  \"wp\",\n  \"ww\",\n  \" \",\n  \"-\",\n  \";\",\n  \":\",\n  \".\",\n  \"'\",\n  \"*\",\n  \"/\",\n  \"5\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \":style(width:1px!important;height:1px!important;min-width:1px!important;min-height:1px!important;margin:0!important;padding:0!important;overflow:hidden!important;opacity:0!important)\",\n  \"\\\\/[ac][-\\\\.\\\\/_A-Za-z][DHW][-\\\\.\\\\/_A-Za-z][9VZ][\\\\.\\\\/_A-Za-z][6yz][-\\\\.\\\\/_A-Za-z][-\\\\/_0-9a-zA-Z][-\\\\.\\\\/_A-Za-z][-\\\\/_0-9a-zA-Z]{22,162}$/\",\n  \"/homad-global-configs.schneevonmorgen.com/global_config\",\n  \"[\\\\/][\\\\/a-zA-Z0-9]{3,}\\\\/[a-zA-Z0-9]{6,}\\\\/.*/\",\n  \"\\\\?aHR0c[\\\\/0-9a-zA-Z]{41,}=?=?$/\",\n  \"/pagead/js/adsbygoogle.js\",\n  \"/^\\\\w+://[\\\\w.\\\\-]+\\\\.www\\\\.\",\n  \"/^https?:\\\\/\\\\/(.+?\\\\.)?\",\n  \"/js/sdkloader/ima3.js\",\n  \"/wp-content/uploads/*\",\n  \"/wp-content/plugins/\",\n  \"/detroitchicago/\",\n  \"/appmeasurement\",\n  \"/(https?:\\\\/\\\\/)\",\n  \"/cdn-cgi/trace\",\n  \"/^https?:\\\\/\\\\/\",\n  \"[a-zA-Z0-9]{\",\n  \"/wp-content/\",\n  \"[\\\\/]{1,}.*\",\n  \"\\\\..{100,}/\",\n  \"impression\",\n  \"[0-9a-f]{\",\n  \"affiliate\",\n  \"analytics\",\n  \"/images/\",\n  \"/nh24.de\",\n  \"template\",\n  \"tisement\",\n  \"tracking\",\n  \"300x250\",\n  \"collect\",\n  \"consent\",\n  \"content\",\n  \"counter\",\n  \"default\",\n  \"sponsor\",\n  \"visitor\",\n  \".aspx?\",\n  \"/asset\",\n  \"468x60\",\n  \"728x90\",\n  \"banner\",\n  \"cookie\",\n  \"google\",\n  \"metric\",\n  \"rivacy\",\n  \"script\",\n  \"source\",\n  \"widget\",\n  \".cgi?\",\n  \"/api/\",\n  \"/file\",\n  \"/img/\",\n  \"/stat\",\n  \"/uplo\",\n  \"0x600\",\n  \"a-z]{\",\n  \"block\",\n  \"click\",\n  \"clude\",\n  \"embed\",\n  \"event\",\n  \"frame\",\n  \"image\",\n  \"media\",\n  \"paign\",\n  \"pixel\",\n  \"right\",\n  \"theme\",\n  \"track\",\n  \"type=\",\n  \"video\",\n  \".gif\",\n  \".jpg\",\n  \".php\",\n  \".png\",\n  \"/web\",\n  \"eoip\",\n  \"gi-b\",\n  \"hird\",\n  \"html\",\n  \"http\",\n  \"nfig\",\n  \"page\",\n  \"stat\",\n  \"tegr\",\n  \"tion\",\n  \"view\",\n  \".js\",\n  \"/ad\",\n  \"^*/\",\n  \"=*&\",\n  \"468\",\n  \"728\",\n  \"aff\",\n  \"box\",\n  \"dpr\",\n  \"ext\",\n  \"gpt\",\n  \"how\",\n  \"jax\",\n  \"key\",\n  \"lay\",\n  \"log\",\n  \"lug\",\n  \"sdk\",\n  \"tag\",\n  \"web\",\n  \"ync\",\n  \"-m\",\n  \"-p\",\n  \".m\",\n  \"*/\",\n  \"*^\",\n  \"/?\",\n  \"/*\",\n  \"/d\",\n  \"/f\",\n  \"/g\",\n  \"/h\",\n  \"/j\",\n  \"/m\",\n  \"/n\",\n  \"/o\",\n  \"/p\",\n  \"/r\",\n  \"/w\",\n  \"\\\\.\",\n  \"\\\\/\",\n  \"a-\",\n  \"ac\",\n  \"ad\",\n  \"ag\",\n  \"al\",\n  \"am\",\n  \"an\",\n  \"ap\",\n  \"ar\",\n  \"at\",\n  \"av\",\n  \"be\",\n  \"bo\",\n  \"ch\",\n  \"co\",\n  \"de\",\n  \"di\",\n  \"e_\",\n  \"e-\",\n  \"e/\",\n  \"ec\",\n  \"ed\",\n  \"el\",\n  \"em\",\n  \"en\",\n  \"er\",\n  \"es\",\n  \"et\",\n  \"ew\",\n  \"fo\",\n  \"g/\",\n  \"he\",\n  \"ic\",\n  \"id\",\n  \"il\",\n  \"im\",\n  \"in\",\n  \"is\",\n  \"it\",\n  \"iv\",\n  \"la\",\n  \"le\",\n  \"li\",\n  \"lo\",\n  \"m/\",\n  \"mo\",\n  \"mp\",\n  \"ol\",\n  \"om\",\n  \"on\",\n  \"op\",\n  \"or\",\n  \"ot\",\n  \"qu\",\n  \"re\",\n  \"ro\",\n  \"s_\",\n  \"s-\",\n  \"s?\",\n  \"s/\",\n  \"si\",\n  \"sp\",\n  \"st\",\n  \"t_\",\n  \"t/\",\n  \"tm\",\n  \"tn\",\n  \"tr\",\n  \"ub\",\n  \"um\",\n  \"un\",\n  \"up\",\n  \"ur\",\n  \"us\",\n  \"ut\",\n  \"_\",\n  \"-\",\n  \",\",\n  \":\",\n  \"?\",\n  \".\",\n  \"[\",\n  \"}\",\n  \"*\",\n  \"/\",\n  \"&\",\n  \"^\",\n  \"=\",\n  \"|\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \"securepubads.g.doubleclick.net\",\n  \".carte-gr.total.fr\",\n  \"googlesyndication\",\n  \"imasdk.googleapis\",\n  \"googletagmanager\",\n  \".cloudfront.net\",\n  \".actonservice\",\n  \"marketing.\",\n  \"analytics\",\n  \"smetrics.\",\n  \"tracking.\",\n  \"metrics.\",\n  \".zooplu\",\n  \"traffic\",\n  \".co.uk\",\n  \"google\",\n  \"stats.\",\n  \".club\",\n  \"click\",\n  \"media\",\n  \"track\",\n  \".com\",\n  \".net\",\n  \".xyz\",\n  \"ight\",\n  \"www.\",\n  \".de\",\n  \".io\",\n  \".jp\",\n  \".ru\",\n  \"cdn\",\n  \"mdw\",\n  \"new\",\n  \"pro\",\n  \"web\",\n  \".b\",\n  \".c\",\n  \".d\",\n  \".f\",\n  \".h\",\n  \".k\",\n  \".l\",\n  \".m\",\n  \".n\",\n  \".p\",\n  \".s\",\n  \".t\",\n  \".v\",\n  \".w\",\n  \"24\",\n  \"ab\",\n  \"ac\",\n  \"ad\",\n  \"af\",\n  \"ag\",\n  \"ai\",\n  \"ak\",\n  \"al\",\n  \"am\",\n  \"an\",\n  \"ap\",\n  \"ar\",\n  \"as\",\n  \"at\",\n  \"au\",\n  \"av\",\n  \"aw\",\n  \"ay\",\n  \"az\",\n  \"be\",\n  \"bl\",\n  \"bo\",\n  \"br\",\n  \"bu\",\n  \"ca\",\n  \"ce\",\n  \"ch\",\n  \"ci\",\n  \"ck\",\n  \"cl\",\n  \"cr\",\n  \"ct\",\n  \"cu\",\n  \"de\",\n  \"di\",\n  \"dn\",\n  \"do\",\n  \"dr\",\n  \"ds\",\n  \"du\",\n  \"e-\",\n  \"eb\",\n  \"ec\",\n  \"ed\",\n  \"ef\",\n  \"eg\",\n  \"ek\",\n  \"el\",\n  \"em\",\n  \"en\",\n  \"eo\",\n  \"ep\",\n  \"er\",\n  \"es\",\n  \"et\",\n  \"eu\",\n  \"ev\",\n  \"ew\",\n  \"ex\",\n  \"ey\",\n  \"fa\",\n  \"fe\",\n  \"fi\",\n  \"fl\",\n  \"fo\",\n  \"fr\",\n  \"ge\",\n  \"gh\",\n  \"gl\",\n  \"go\",\n  \"gr\",\n  \"gu\",\n  \"he\",\n  \"ho\",\n  \"ia\",\n  \"ib\",\n  \"ic\",\n  \"id\",\n  \"ie\",\n  \"if\",\n  \"ig\",\n  \"ik\",\n  \"il\",\n  \"im\",\n  \"in\",\n  \"ip\",\n  \"ir\",\n  \"is\",\n  \"it\",\n  \"iv\",\n  \"ix\",\n  \"iz\",\n  \"ks\",\n  \"ld\",\n  \"le\",\n  \"li\",\n  \"lo\",\n  \"ly\",\n  \"ma\",\n  \"me\",\n  \"mo\",\n  \"mp\",\n  \"my\",\n  \"no\",\n  \"ob\",\n  \"od\",\n  \"of\",\n  \"ok\",\n  \"ol\",\n  \"om\",\n  \"on\",\n  \"op\",\n  \"or\",\n  \"os\",\n  \"ot\",\n  \"ov\",\n  \"ow\",\n  \"ph\",\n  \"pl\",\n  \"po\",\n  \"pr\",\n  \"qu\",\n  \"ra\",\n  \"re\",\n  \"ro\",\n  \"ru\",\n  \"s-\",\n  \"sc\",\n  \"se\",\n  \"sh\",\n  \"si\",\n  \"sk\",\n  \"sl\",\n  \"sm\",\n  \"sn\",\n  \"so\",\n  \"sp\",\n  \"ss\",\n  \"st\",\n  \"su\",\n  \"sy\",\n  \"t-\",\n  \"ta\",\n  \"te\",\n  \"th\",\n  \"ti\",\n  \"tn\",\n  \"to\",\n  \"tr\",\n  \"ts\",\n  \"tu\",\n  \"tv\",\n  \"tw\",\n  \"ty\",\n  \"ub\",\n  \"ud\",\n  \"ul\",\n  \"um\",\n  \"un\",\n  \"up\",\n  \"ur\",\n  \"us\",\n  \"ut\",\n  \"ve\",\n  \"we\",\n  \"yp\",\n  \"-\",\n  \".\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \"google-analytics.com/analytics.js\",\n  \"googlesyndication_adsbygoogle.js\",\n  \"googletagmanager.com/gtm.js\",\n  \"googletagservices_gpt.js\",\n  \"googletagmanager_gtm.js\",\n  \"fuckadblock.js-3.2.0\",\n  \"google-analytics\",\n  \"fingerprint2.js\",\n  \"-transparent.\",\n  \"noop-0.1s.mp3\",\n  \"prebid-ads.js\",\n  \"nobab2.js:10\",\n  \"noopmp3-0.1s\",\n  \"noop-1s.mp4\",\n  \"hd-main.js\",\n  \"noopmp4-1s\",\n  \"32x32.png\",\n  \"noopframe\",\n  \"noop.txt\",\n  \"nooptext\",\n  \"1x1.gif\",\n  \"2x2.png\",\n  \"noop.js\",\n  \"amazon\",\n  \"noopjs\",\n  \"tag.js\",\n  \".com/\",\n  \"empty\",\n  \"noop\",\n  \":10\",\n  \".js\",\n  \"ads\",\n  \"_a\",\n  \"/a\",\n  \"ar\",\n  \"et\",\n  \"ga\",\n  \"in\",\n  \"ng\",\n  \"_\",\n  \"-\",\n  \":\",\n  \".\",\n  \"*\",\n  \"/\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"a\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \"||imasdk.googleapis.com/js/sdk\",\n  \",redirect-rule=noopjs,domain=\",\n  \"$media,redirect=noopmp3-0.1s,\",\n  \"googlesyndication.com/pagead/\",\n  \"*$script,3p,denyallow=\",\n  \"/wp-content/uploads/*\",\n  \"/wp-content/plugins/\",\n  \".com^$third-party\",\n  \".cloudfront.net^\",\n  \",redirect-rule=\",\n  \"$script,domain=\",\n  \",redirect=noop\",\n  \"|downdetector.\",\n  \"xmlhttprequest\",\n  \".actonservice\",\n  \"/^https?:\\\\/\\\\/\",\n  \"^$third-party\",\n  \"a-zA-Z0-9]{\",\n  \"doubleclick\",\n  \"subdocument\",\n  \"third-party\",\n  \"cloudflare\",\n  \"marketing.\",\n  \"affiliate\",\n  \"analytics\",\n  \"facebook\",\n  \"metrics.\",\n  \"tracking\",\n  \"$script\",\n  \"captcha\",\n  \"domain=\",\n  \".club^\",\n  \".co.uk\",\n  \"$ghide\",\n  \"cookie\",\n  \"Cookie\",\n  \"google\",\n  \"script\",\n  \".com^\",\n  \".xyz^\",\n  \"count\",\n  \"frame\",\n  \"image\",\n  \"media\",\n  \"track\",\n  \"video\",\n  \".com\",\n  \".fr^\",\n  \".gif\",\n  \".net\",\n  \".php\",\n  \"$doc\",\n  \"$xhr\",\n  \"html\",\n  \"ight\",\n  \"stat\",\n  \"view\",\n  \"www.\",\n  \",1p\",\n  \".de\",\n  \".io\",\n  \".jp\",\n  \".js\",\n  \".ru\",\n  \"$3p\",\n  \"cdn\",\n  \"new\",\n  \"pro\",\n  \"web\",\n  \".b\",\n  \".c\",\n  \".m\",\n  \".n\",\n  \".p\",\n  \".s\",\n  \".t\",\n  \"@@\",\n  \"*/\",\n  \"/*\",\n  \"/b\",\n  \"/j\",\n  \"/p\",\n  \"||\",\n  \"|~\",\n  \"00\",\n  \"ab\",\n  \"ac\",\n  \"ad\",\n  \"af\",\n  \"ag\",\n  \"ak\",\n  \"al\",\n  \"am\",\n  \"an\",\n  \"ap\",\n  \"ar\",\n  \"as\",\n  \"at\",\n  \"au\",\n  \"av\",\n  \"aw\",\n  \"ay\",\n  \"az\",\n  \"be\",\n  \"bo\",\n  \"br\",\n  \"ce\",\n  \"ch\",\n  \"ck\",\n  \"cl\",\n  \"cr\",\n  \"ct\",\n  \"cu\",\n  \"de\",\n  \"di\",\n  \"do\",\n  \"e-\",\n  \"e^\",\n  \"eb\",\n  \"ec\",\n  \"ed\",\n  \"el\",\n  \"em\",\n  \"en\",\n  \"ep\",\n  \"er\",\n  \"es\",\n  \"et\",\n  \"ev\",\n  \"ex\",\n  \"fi\",\n  \"fl\",\n  \"fo\",\n  \"fr\",\n  \"ge\",\n  \"go\",\n  \"gr\",\n  \"he\",\n  \"ho\",\n  \"ib\",\n  \"ic\",\n  \"id\",\n  \"ie\",\n  \"if\",\n  \"ig\",\n  \"ik\",\n  \"il\",\n  \"im\",\n  \"in\",\n  \"ip\",\n  \"ir\",\n  \"is\",\n  \"it\",\n  \"iv\",\n  \"ix\",\n  \"iz\",\n  \"le\",\n  \"lo\",\n  \"ly\",\n  \"ma\",\n  \"mo\",\n  \"mp\",\n  \"my\",\n  \"no\",\n  \"ob\",\n  \"od\",\n  \"ok\",\n  \"ol\",\n  \"om\",\n  \"on\",\n  \"op\",\n  \"or\",\n  \"ot\",\n  \"ow\",\n  \"pl\",\n  \"po\",\n  \"pr\",\n  \"qu\",\n  \"re\",\n  \"ro\",\n  \"s-\",\n  \"s/\",\n  \"sc\",\n  \"se\",\n  \"sh\",\n  \"so\",\n  \"sp\",\n  \"ss\",\n  \"st\",\n  \"te\",\n  \"th\",\n  \"to\",\n  \"tr\",\n  \"ts\",\n  \"ub\",\n  \"ud\",\n  \"ug\",\n  \"ul\",\n  \"um\",\n  \"un\",\n  \"up\",\n  \"ur\",\n  \"us\",\n  \"ut\",\n  \"_\",\n  \"-\",\n  \",\",\n  \"?\",\n  \".\",\n  \"*\",\n  \"/\",\n  \"\\\\\",\n  \"^\",\n  \"=\",\n  \"|\",\n  \"~\",\n  \"$\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"a\",\n  \"A\",\n  \"b\",\n  \"c\",\n  \"d\",\n  \"e\",\n  \"f\",\n  \"g\",\n  \"h\",\n  \"i\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"m\",\n  \"n\",\n  \"o\",\n  \"p\",\n  \"q\",\n  \"r\",\n  \"s\",\n  \"t\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"x\",\n  \"y\",\n  \"z\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n/* tslint:disable quotemark */\nexport default [\n  \", String.prototype.charCodeAt,\",\n  \"acis, disableSelection, reEnab\",\n  \"acis, document.createElement, \",\n  \"acis, document.getElementById,\",\n  \"acis, document.querySelectorAl\",\n  \"acis, JSON.parse, break;case $\",\n  \"addEventListener, google_ad_cl\",\n  \"aost, Math.random, /\\\\st\\\\.[a-zA\",\n  \"app_vars.force_disable_adblock\",\n  \"jbiltxjqhye3mhbshg7kx5tfyd.oni\",\n  \"[style^=\\\"position: absolute; \",\n  \"acis, String.fromCharCode, \",\n  \"acis, Math, break;case $.)\",\n  \"nosiif, visibility, 1000)\",\n  \"set, blurred, false)\",\n  \"[href^=\\\"https://\",\n  \"[href^=\\\"http://\",\n  \"+js(aopw, _pop)\",\n  \"BlockDetected)\",\n  \"+js(nostif, \",\n  \"div[class^=\\\"\",\n  \"l, popMagic)\",\n  \", noopFunc)\",\n  \"contextmenu\",\n  \"otification\",\n  \":has-text(\",\n  \".com##+js(\",\n  \"+js(aeld, \",\n  \"+js(aopr, \",\n  \"+js(aopw, \",\n  \"=\\\"https://\",\n  \"background\",\n  \".blogspot\",\n  \"container\",\n  \"decodeURI\",\n  \"div[id^=\\\"\",\n  \"div[style\",\n  \"document.\",\n  \"nowebrtc)\",\n  \"disclaim\",\n  \"skyscrap\",\n  \"300x250\",\n  \"consent\",\n  \"content\",\n  \"nowoif)\",\n  \"privacy\",\n  \"sidebar\",\n  \"sponsor\",\n  \"wrapper\",\n  \".co.uk\",\n  \"728x90\",\n  \"accept\",\n  \"acis, \",\n  \"aopr, \",\n  \"banner\",\n  \"bottom\",\n  \"cookie\",\n  \"Cookie\",\n  \"google\",\n  \"notice\",\n  \"policy\",\n  \"widget\",\n  \"block\",\n  \"cript\",\n  \"movie\",\n  \"o-sib\",\n  \"true)\",\n  \"video\",\n  \".com\",\n  \".net\",\n  \".xyz\",\n  \"#@#.\",\n  \"+js(\",\n  \"down\",\n  \"gdpr\",\n  \"html\",\n  \"ight\",\n  \"news\",\n  \"text\",\n  \"tube\",\n  \"view\",\n  \"www.\",\n  \" > \",\n  \".de\",\n  \"age\",\n  \"box\",\n  \"Box\",\n  \"div\",\n  \"ent\",\n  \"ive\",\n  \"sby\",\n  \"web\",\n  \"xxx\",\n  \"__\",\n  \"-m\",\n  \"-t\",\n  \", \",\n  \",p\",\n  \",t\",\n  \".*\",\n  \".f\",\n  \".m\",\n  \".n\",\n  \".p\",\n  \".t\",\n  \"\\\"]\",\n  \"##\",\n  \"=\\\"\",\n  \"00\",\n  \"ab\",\n  \"ad\",\n  \"Ad\",\n  \"al\",\n  \"am\",\n  \"an\",\n  \"ap\",\n  \"ar\",\n  \"as\",\n  \"at\",\n  \"av\",\n  \"bo\",\n  \"ch\",\n  \"ck\",\n  \"co\",\n  \"ct\",\n  \"de\",\n  \"di\",\n  \"e-\",\n  \"ed\",\n  \"el\",\n  \"em\",\n  \"en\",\n  \"er\",\n  \"es\",\n  \"et\",\n  \"ex\",\n  \"fo\",\n  \"ft\",\n  \"ga\",\n  \"he\",\n  \"ho\",\n  \"ic\",\n  \"id\",\n  \"if\",\n  \"ig\",\n  \"il\",\n  \"im\",\n  \"in\",\n  \"ip\",\n  \"ir\",\n  \"is\",\n  \"it\",\n  \"la\",\n  \"le\",\n  \"li\",\n  \"lo\",\n  \"ma\",\n  \"me\",\n  \"od\",\n  \"ol\",\n  \"om\",\n  \"on\",\n  \"op\",\n  \"or\",\n  \"ot\",\n  \"ov\",\n  \"ow\",\n  \"ra\",\n  \"re\",\n  \"ro\",\n  \"s_\",\n  \"s-\",\n  \"se\",\n  \"sh\",\n  \"sp\",\n  \"ss\",\n  \"st\",\n  \"t-\",\n  \"ta\",\n  \"th\",\n  \"ub\",\n  \"ul\",\n  \"um\",\n  \"un\",\n  \"up\",\n  \"ur\",\n  \"us\",\n  \"ut\",\n  \" \",\n  \"_\",\n  \"-\",\n  \",\",\n  \";\",\n  \":\",\n  \".\",\n  \"(\",\n  \")\",\n  \"[\",\n  \"*\",\n  \"/\",\n  \"#\",\n  \"^\",\n  \"0\",\n  \"1\",\n  \"2\",\n  \"3\",\n  \"4\",\n  \"5\",\n  \"6\",\n  \"7\",\n  \"8\",\n  \"9\",\n  \"a\",\n  \"A\",\n  \"b\",\n  \"B\",\n  \"c\",\n  \"C\",\n  \"d\",\n  \"D\",\n  \"e\",\n  \"E\",\n  \"f\",\n  \"F\",\n  \"g\",\n  \"h\",\n  \"H\",\n  \"i\",\n  \"I\",\n  \"j\",\n  \"k\",\n  \"l\",\n  \"L\",\n  \"m\",\n  \"M\",\n  \"n\",\n  \"N\",\n  \"o\",\n  \"p\",\n  \"P\",\n  \"q\",\n  \"r\",\n  \"R\",\n  \"s\",\n  \"S\",\n  \"t\",\n  \"T\",\n  \"u\",\n  \"v\",\n  \"w\",\n  \"W\",\n  \"x\",\n  \"y\",\n  \"z\"\n];","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { Smaz } from '@remusao/smaz';\n\nimport cosmeticSelectorCodebook from './codebooks/cosmetic-selector';\nimport networkCSPCodebook from './codebooks/network-csp';\nimport networkFilterCodebook from './codebooks/network-filter';\nimport networkHostnameCodebook from './codebooks/network-hostname';\nimport networkRedirectCodebook from './codebooks/network-redirect';\nimport networkRawCodebook from './codebooks/raw-network';\nimport cosmeticRawCodebook from './codebooks/raw-cosmetic';\n\nexport default class Compression {\n  public readonly cosmeticSelector: Smaz = new Smaz(cosmeticSelectorCodebook);\n  public readonly networkCSP: Smaz = new Smaz(networkCSPCodebook);\n  public readonly networkRedirect: Smaz = new Smaz(networkRedirectCodebook);\n  public readonly networkHostname: Smaz = new Smaz(networkHostnameCodebook);\n  public readonly networkFilter: Smaz = new Smaz(networkFilterCodebook);\n  public readonly networkRaw: Smaz = new Smaz(networkRawCodebook);\n  public readonly cosmeticRaw: Smaz = new Smaz(cosmeticRawCodebook);\n}\n","/* crc32.js (C) 2014-present SheetJS -- http://sheetjs.com */\n/* From: https://github.com/SheetJS/js-crc32/ */\n\nconst T: Int32Array = (() => {\n  let c: number = 0;\n  const table: Int32Array = new Int32Array(256);\n\n  for (let n: number = 0; n !== 256; n += 1) {\n    c = n;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    c = c & 1 ? -306674912 ^ (c >>> 1) : c >>> 1;\n    table[n] = c;\n  }\n\n  return table;\n})();\n\nexport default function crc32(buf: Uint8Array, start: number, end: number): number {\n  let C: number = 0 ^ -1;\n  const L: number = end - 7;\n  let i: number = start;\n  while (i < L) {\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n  }\n\n  while (i < L + 7) {\n    C = (C >>> 8) ^ T[(C ^ buf[i++]) & 0xff];\n  }\n\n  return (C ^ -1) >>> 0;\n}\n","/*!\n * Copyright Mathias Bynens <https://mathiasbynens.be/>\n *\n * Permission is hereby granted, free of charge, to any person obtaining\n * a copy of this software and associated documentation files (the\n * \"Software\"), to deal in the Software without restriction, including\n * without limitation the rights to use, copy, modify, merge, publish,\n * distribute, sublicense, and/or sell copies of the Software, and to\n * permit persons to whom the Software is furnished to do so, subject to\n * the following conditions:\n *\n * The above copyright notice and this permission notice shall be\n * included in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n */\n\n/** Highest positive signed 32-bit float value */\nconst maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1\n\n/** Bootstring parameters */\nconst base = 36;\nconst tMin = 1;\nconst tMax = 26;\nconst skew = 38;\nconst damp = 700;\nconst initialBias = 72;\nconst initialN = 128; // 0x80\nconst delimiter = '-'; // '\\x2D'\n\n/** Regular expressions */\nconst regexNonASCII = /[^\\0-\\x7E]/; // non-ASCII chars\nconst regexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g; // RFC 3490 separators\n\n/** Error messages */\ntype errorNames = 'overflow' | 'invalid-input' | 'not-basic';\nconst errors: {\n  [name: string]: string;\n} = {\n  'invalid-input': 'Invalid input',\n  'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n  'overflow': 'Overflow: input needs wider integers to process',\n};\n\n/** Convenience shortcuts */\nconst baseMinusTMin = base - tMin;\n\n/*--------------------------------------------------------------------------*/\n\n/**\n * A generic error utility function.\n * @private\n * @param {String} type The error type.\n * @returns {Error} Throws a `RangeError` with the applicable error message.\n */\nfunction error(type: errorNames): void {\n  throw new RangeError(errors[type]);\n}\n\n/**\n * Creates an array containing the numeric code points of each Unicode\n * character in the string. While JavaScript uses UCS-2 internally,\n * this function will convert a pair of surrogate halves (each of which\n * UCS-2 exposes as separate characters) into a single code point,\n * matching UTF-16.\n * @see `punycode.ucs2.encode`\n * @see <https://mathiasbynens.be/notes/javascript-encoding>\n * @memberOf punycode.ucs2\n * @name decode\n * @param {String} string The Unicode input string (UCS-2).\n * @returns {Array} The new array of code points.\n */\nfunction ucs2decode(str: string): number[] {\n  const output = [];\n  let counter = 0;\n  const length = str.length;\n  while (counter < length) {\n    const value = str.charCodeAt(counter++);\n    if (value >= 0xd800 && value <= 0xdbff && counter < length) {\n      // It's a high surrogate, and there is a next character.\n      const extra = str.charCodeAt(counter++);\n      if ((extra & 0xfc00) === 0xdc00) {\n        // Low surrogate.\n        output.push(((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000);\n      } else {\n        // It's an unmatched surrogate; only append this code unit, in case the\n        // next code unit is the high surrogate of a surrogate pair.\n        output.push(value);\n        counter--;\n      }\n    } else {\n      output.push(value);\n    }\n  }\n  return output;\n}\n\n/**\n * Converts a basic code point into a digit/integer.\n * @see `digitToBasic()`\n * @private\n * @param {Number} codePoint The basic numeric code point value.\n * @returns {Number} The numeric value of a basic code point (for use in\n * representing integers) in the range `0` to `base - 1`, or `base` if\n * the code point does not represent a value.\n */\nfunction basicToDigit(codePoint: number): number {\n  if (codePoint - 0x30 < 0x0a) {\n    return codePoint - 0x16;\n  }\n  if (codePoint - 0x41 < 0x1a) {\n    return codePoint - 0x41;\n  }\n  if (codePoint - 0x61 < 0x1a) {\n    return codePoint - 0x61;\n  }\n  return base;\n}\n\n/**\n * Converts a digit/integer into a basic code point.\n * @see `basicToDigit()`\n * @private\n * @param {Number} digit The numeric value of a basic code point.\n * @returns {Number} The basic code point whose value (when used for\n * representing integers) is `digit`, which needs to be in the range\n * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n * used; else, the lowercase form is used. The behavior is undefined\n * if `flag` is non-zero and `digit` has no uppercase form.\n */\nfunction digitToBasic(digit: number, flag: number): number {\n  //  0..25 map to ASCII a..z or A..Z\n  // 26..35 map to ASCII 0..9\n  return digit + 22 + 75 * (digit < 26 ? 1 : 0) - ((flag !== 0 ? 1 : 0) << 5);\n}\n\n/**\n * Bias adaptation function as per section 3.4 of RFC 3492.\n * https://tools.ietf.org/html/rfc3492#section-3.4\n * @private\n */\nfunction adapt(delta: number, numPoints: number, firstTime: boolean): number {\n  let k = 0;\n  delta = firstTime ? Math.floor(delta / damp) : delta >> 1;\n  delta += Math.floor(delta / numPoints);\n  for (; /* no initialization */ delta > (baseMinusTMin * tMax) >> 1; k += base) {\n    delta = Math.floor(delta / baseMinusTMin);\n  }\n  return Math.floor(k + ((baseMinusTMin + 1) * delta) / (delta + skew));\n}\n\n/**\n * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n * symbols.\n * @memberOf punycode\n * @param {String} input The Punycode string of ASCII-only symbols.\n * @returns {String} The resulting string of Unicode symbols.\n */\nexport function decode(input: string): string {\n  // Don't use UCS-2.\n  const output = [];\n  const inputLength = input.length;\n  let i = 0;\n  let n = initialN;\n  let bias = initialBias;\n\n  // Handle the basic code points: let `basic` be the number of input code\n  // points before the last delimiter, or `0` if there is none, then copy\n  // the first basic code points to the output.\n\n  let basic = input.lastIndexOf(delimiter);\n  if (basic < 0) {\n    basic = 0;\n  }\n\n  for (let j = 0; j < basic; ++j) {\n    // if it's not a basic code point\n    if (input.charCodeAt(j) >= 0x80) {\n      error('not-basic');\n    }\n    output.push(input.charCodeAt(j));\n  }\n\n  // Main decoding loop: start just after the last delimiter if any basic code\n  // points were copied; start at the beginning otherwise.\n\n  for (let index = basic > 0 ? basic + 1 : 0; index < inputLength /* no final expression */; ) {\n    // `index` is the index of the next character to be consumed.\n    // Decode a generalized variable-length integer into `delta`,\n    // which gets added to `i`. The overflow checking is easier\n    // if we increase `i` as we go, then subtract off its starting\n    // value at the end to obtain `delta`.\n    const oldi = i;\n    for (let w = 1, k = base /* no condition */; ; k += base) {\n      if (index >= inputLength) {\n        error('invalid-input');\n      }\n\n      const digit = basicToDigit(input.charCodeAt(index++));\n\n      if (digit >= base || digit > Math.floor((maxInt - i) / w)) {\n        error('overflow');\n      }\n\n      i += digit * w;\n      const t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n\n      if (digit < t) {\n        break;\n      }\n\n      const baseMinusT = base - t;\n      if (w > Math.floor(maxInt / baseMinusT)) {\n        error('overflow');\n      }\n\n      w *= baseMinusT;\n    }\n\n    const out = output.length + 1;\n    bias = adapt(i - oldi, out, oldi === 0);\n\n    // `i` was supposed to wrap around from `out` to `0`,\n    // incrementing `n` each time, so we'll fix that now:\n    if (Math.floor(i / out) > maxInt - n) {\n      error('overflow');\n    }\n\n    n += Math.floor(i / out);\n    i %= out;\n\n    // Insert `n` at position `i` of the output.\n    output.splice(i++, 0, n);\n  }\n\n  return String.fromCodePoint.apply(null, output);\n}\n\n/**\n * Converts a string of Unicode symbols (e.g. a domain name label) to a\n * Punycode string of ASCII-only symbols.\n * @memberOf punycode\n * @param {String} input The string of Unicode symbols.\n * @returns {String} The resulting Punycode string of ASCII-only symbols.\n */\nexport function encode(str: string): string {\n  const output = [];\n\n  // Convert the input in UCS-2 to an array of Unicode code points.\n  const input = ucs2decode(str);\n\n  // Cache the length.\n  const inputLength = input.length;\n\n  // Initialize the state.\n  let n = initialN;\n  let delta = 0;\n  let bias = initialBias;\n\n  // Handle the basic code points.\n  for (let i = 0; i < input.length; i += 1) {\n    const currentValue = input[i];\n    if (currentValue < 0x80) {\n      output.push(String.fromCharCode(currentValue));\n    }\n  }\n\n  const basicLength = output.length;\n  let handledCPCount = basicLength;\n\n  // `handledCPCount` is the number of code points that have been handled;\n  // `basicLength` is the number of basic code points.\n\n  // Finish the basic string with a delimiter unless it's empty.\n  if (basicLength) {\n    output.push(delimiter);\n  }\n\n  // Main encoding loop:\n  while (handledCPCount < inputLength) {\n    // All non-basic code points < n have been handled already. Find the next\n    // larger one:\n    let m = maxInt;\n    for (let i = 0; i < input.length; i += 1) {\n      const currentValue = input[i];\n      if (currentValue >= n && currentValue < m) {\n        m = currentValue;\n      }\n    }\n\n    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n    // but guard against overflow.\n    const handledCPCountPlusOne = handledCPCount + 1;\n    if (m - n > Math.floor((maxInt - delta) / handledCPCountPlusOne)) {\n      error('overflow');\n    }\n\n    delta += (m - n) * handledCPCountPlusOne;\n    n = m;\n\n    for (let i = 0; i < input.length; i += 1) {\n      const currentValue = input[i];\n      if (currentValue < n && ++delta > maxInt) {\n        error('overflow');\n      }\n      if (currentValue === n) {\n        // Represent delta as a generalized variable-length integer.\n        let q = delta;\n        for (let k = base /* no condition */; ; k += base) {\n          const t = k <= bias ? tMin : k >= bias + tMax ? tMax : k - bias;\n          if (q < t) {\n            break;\n          }\n          const qMinusT = q - t;\n          const baseMinusT = base - t;\n          output.push(String.fromCharCode(digitToBasic(t + (qMinusT % baseMinusT), 0)));\n          q = Math.floor(qMinusT / baseMinusT);\n        }\n\n        output.push(String.fromCharCode(digitToBasic(q, 0)));\n        bias = adapt(delta, handledCPCountPlusOne, handledCPCount === basicLength);\n        delta = 0;\n        ++handledCPCount;\n      }\n    }\n\n    ++delta;\n    ++n;\n  }\n  return output.join('');\n}\n\n/**\n * Converts a Punycode string representing a domain name or an email address\n * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n * it doesn't matter if you call it on a string that has already been\n * converted to Unicode.\n * @memberOf punycode\n * @param {String} input The Punycoded domain name or email address to\n * convert to Unicode.\n * @returns {String} The Unicode representation of the given Punycode\n * string.\n */\nexport function toUnicode(input: string): string {\n  const labels = input.replace(regexSeparators, '\\x2E').split('.');\n  const encoded: string[] = [];\n  for (let i = 0; i < labels.length; i += 1) {\n    encoded.push(\n      labels[i].startsWith('xn--') ? decode(labels[i].slice(4).toLowerCase()) : labels[i],\n    );\n  }\n  return encoded.join('.');\n}\n\n/**\n * Converts a Unicode string representing a domain name or an email address to\n * Punycode. Only the non-ASCII parts of the domain name will be converted,\n * i.e. it doesn't matter if you call it with a domain that's already in\n * ASCII.\n * @memberOf punycode\n * @param {String} input The domain name or email address to convert, as a\n * Unicode string.\n * @returns {String} The Punycode representation of the given domain name or\n * email address.\n */\nexport function toASCII(input: string): string {\n  // Avoid `split(regex)` for IE8 compatibility. See #17.\n  const labels = input.replace(regexSeparators, '\\x2E').split('.');\n  const encoded: string[] = [];\n  for (let i = 0; i < labels.length; i += 1) {\n    encoded.push(regexNonASCII.test(labels[i]) ? 'xn--' + encode(labels[i]) : labels[i]);\n  }\n  return encoded.join('.');\n}\n\n/**\n * A string representing the current Punycode.js version number.\n * @memberOf punycode\n * @type String\n */\nexport const version = '2.1.0';\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport Compression from './compression';\nimport crc32 from './crc32';\nimport { decode, encode } from './punycode';\n\ninterface IDataViewOptions {\n  enableCompression: boolean;\n}\n\nexport const EMPTY_UINT8_ARRAY = new Uint8Array(0);\nexport const EMPTY_UINT32_ARRAY = new Uint32Array(0);\n\n// Check if current architecture is little endian\nconst LITTLE_ENDIAN: boolean = new Int8Array(new Int16Array([1]).buffer)[0] === 1;\n\n// Store compression in a lazy, global singleton\nlet getCompressionSingleton: () => Compression = () => {\n  const COMPRESSION = new Compression();\n  getCompressionSingleton = () => COMPRESSION;\n  return COMPRESSION;\n};\n\nfunction align4(pos: number): number {\n  // From: https://stackoverflow.com/a/2022194\n  return (pos + 3) & ~0x03;\n}\n\n/**\n * Return size of of a serialized byte value.\n */\nexport function sizeOfByte(): number {\n  return 1;\n}\n\n/**\n * Return size of of a serialized boolean value.\n */\nexport function sizeOfBool(): number {\n  return 1;\n}\n\n/**\n * Return number of bytes needed to serialize `length`.\n */\nexport function sizeOfLength(length: number): number {\n  return length <= 127 ? 1 : 5;\n}\n\n/**\n * Return number of bytes needed to serialize `array` Uint8Array typed array.\n *\n * WARNING: this only returns the correct size if `align` is `false`.\n */\nexport function sizeOfBytes(array: Uint8Array, align: boolean): number {\n  return sizeOfBytesWithLength(array.length, align);\n}\n\n/**\n * Return number of bytes needed to serialize `array` Uint8Array typed array.\n *\n * WARNING: this only returns the correct size if `align` is `false`.\n */\nexport function sizeOfBytesWithLength(length: number, align: boolean): number {\n  // Alignment is a tricky thing because it depends on the current offset in\n  // the buffer at the time of serialization; which we cannot anticipate\n  // before actually starting serialization. This means that we need to\n  // potentially over-estimate the size (at most by 3 bytes) to make sure the\n  // final size is at least equal or a bit bigger than necessary.\n  return (align ? 3 : 0) + length + sizeOfLength(length);\n}\n\n/**\n * Return number of bytes needed to serialize `str` ASCII string.\n */\nexport function sizeOfASCII(str: string): number {\n  return str.length + sizeOfLength(str.length);\n}\n\n/**\n * Return number of bytes needed to serialize `str` UTF8 string.\n */\nexport function sizeOfUTF8(str: string): number {\n  const encodedLength = encode(str).length;\n  return encodedLength + sizeOfLength(encodedLength);\n}\n\n/**\n * Return number of bytes needed to serialize `array`.\n */\nexport function sizeOfUint32Array(array: Uint32Array): number {\n  return array.byteLength + sizeOfLength(array.length);\n}\n\nexport function sizeOfNetworkRedirect(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().networkRedirect.getCompressedSize(str),\n        false, // align\n      )\n    : sizeOfASCII(str);\n}\n\nexport function sizeOfNetworkHostname(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().networkHostname.getCompressedSize(str),\n        false, // align\n      )\n    : sizeOfASCII(str);\n}\n\nexport function sizeOfNetworkCSP(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().networkCSP.getCompressedSize(str),\n        false, // align\n      )\n    : sizeOfASCII(str);\n}\n\nexport function sizeOfNetworkFilter(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().networkFilter.getCompressedSize(str),\n        false, // align\n      )\n    : sizeOfASCII(str);\n}\n\nexport function sizeOfCosmeticSelector(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().cosmeticSelector.getCompressedSize(str),\n        false, // align\n      )\n    : sizeOfASCII(str);\n}\n\nexport function sizeOfRawNetwork(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().networkRaw.getCompressedSize(encode(str)),\n        false, // align\n      )\n    : sizeOfUTF8(str);\n}\n\nexport function sizeOfRawCosmetic(str: string, compression: boolean): number {\n  return compression === true\n    ? sizeOfBytesWithLength(\n        getCompressionSingleton().cosmeticRaw.getCompressedSize(encode(str)),\n        false, // align\n      )\n    : sizeOfUTF8(str);\n}\n\n/**\n * This abstraction allows to serialize efficiently low-level values of types:\n * string, uint8, uint16, uint32, etc. while hiding the complexity of managing\n * the current offset and growing. It should always be instantiated with a\n * big-enough length because this will not allow for resizing. To allow\n * deciding the required total size, function estimating the size needed to\n * store different primitive values are exposes as static methods.\n *\n * This class is also more efficient than the built-in `DataView`.\n *\n * The way this is used in practice is that you write pairs of function to\n * serialize and deserialize a given structure/class (with code being pretty\n * symetrical). In the serializer you `pushX` values, and in the deserializer\n * you use `getX` functions to get back the values.\n */\nexport class StaticDataView {\n  /**\n   * Create an empty (i.e.: size = 0) StaticDataView.\n   */\n  public static empty(options: IDataViewOptions): StaticDataView {\n    return StaticDataView.fromUint8Array(EMPTY_UINT8_ARRAY, options);\n  }\n\n  /**\n   * Instantiate a StaticDataView instance from `array` of type Uint8Array.\n   */\n  public static fromUint8Array(array: Uint8Array, options: IDataViewOptions): StaticDataView {\n    return new StaticDataView(array, options);\n  }\n\n  /**\n   * Instantiate a StaticDataView with given `capacity` number of bytes.\n   */\n  public static allocate(capacity: number, options: IDataViewOptions): StaticDataView {\n    return new StaticDataView(new Uint8Array(capacity), options);\n  }\n\n  public pos: number;\n  public buffer: Uint8Array;\n  public compression: Compression | undefined;\n\n  constructor(buffer: Uint8Array, { enableCompression }: IDataViewOptions) {\n    if (LITTLE_ENDIAN === false) {\n      // This check makes sure that we will not load the adblocker on a\n      // big-endian system. This would not work since byte ordering is important\n      // at the moment (mainly for performance reasons).\n      throw new Error('Adblocker currently does not support Big-endian systems');\n    }\n\n    if (enableCompression === true) {\n      this.enableCompression();\n    }\n\n    this.buffer = buffer;\n    this.pos = 0;\n  }\n\n  public enableCompression(): void {\n    this.compression = getCompressionSingleton();\n  }\n\n  public checksum(): number {\n    return crc32(this.buffer, 0, this.pos);\n  }\n\n  public dataAvailable(): boolean {\n    return this.pos < this.buffer.byteLength;\n  }\n\n  public setPos(pos: number): void {\n    this.pos = pos;\n  }\n\n  public getPos(): number {\n    return this.pos;\n  }\n\n  public seekZero(): void {\n    this.pos = 0;\n  }\n\n  public slice(): Uint8Array {\n    this.checkSize();\n    return this.buffer.slice(0, this.pos);\n  }\n\n  public subarray(): Uint8Array {\n    if (this.pos === this.buffer.byteLength) {\n      return this.buffer;\n    }\n\n    this.checkSize();\n    return this.buffer.subarray(0, this.pos);\n  }\n\n  /**\n   * Make sure that `this.pos` is aligned on a multiple of 4.\n   */\n  public align4(): void {\n    this.pos = align4(this.pos);\n  }\n\n  public set(buffer: Uint8Array): void {\n    this.buffer = new Uint8Array(buffer);\n    this.seekZero();\n  }\n\n  public pushBool(bool: boolean): void {\n    this.pushByte(Number(bool));\n  }\n\n  public getBool(): boolean {\n    return Boolean(this.getByte());\n  }\n\n  public setByte(pos: number, byte: number): void {\n    this.buffer[pos] = byte;\n  }\n\n  public pushByte(octet: number): void {\n    this.pushUint8(octet);\n  }\n\n  public getByte(): number {\n    return this.getUint8();\n  }\n\n  public pushBytes(bytes: Uint8Array, align: boolean = false): void {\n    this.pushLength(bytes.length);\n\n    if (align === true) {\n      this.align4();\n    }\n\n    this.buffer.set(bytes, this.pos);\n    this.pos += bytes.byteLength;\n  }\n\n  public getBytes(align: boolean = false): Uint8Array {\n    const numberOfBytes = this.getLength();\n\n    if (align === true) {\n      this.align4();\n    }\n\n    const bytes = this.buffer.subarray(this.pos, this.pos + numberOfBytes);\n    this.pos += numberOfBytes;\n\n    return bytes;\n  }\n\n  /**\n   * Allows row access to the internal buffer through a Uint32Array acting like\n   * a view. This is used for super fast writing/reading of large chunks of\n   * Uint32 numbers in the byte array.\n   */\n  public getUint32ArrayView(desiredSize: number): Uint32Array {\n    // Round this.pos to next multiple of 4 for alignement\n    this.align4();\n\n    // Short-cut when empty array\n    if (desiredSize === 0) {\n      return EMPTY_UINT32_ARRAY;\n    }\n\n    // Create non-empty view\n    const view = new Uint32Array(\n      this.buffer.buffer,\n      this.pos + this.buffer.byteOffset,\n      desiredSize,\n    );\n    this.pos += desiredSize * 4;\n    return view;\n  }\n\n  public pushUint8(uint8: number): void {\n    this.buffer[this.pos++] = uint8;\n  }\n\n  public getUint8(): number {\n    return this.buffer[this.pos++];\n  }\n\n  public pushUint16(uint16: number): void {\n    this.buffer[this.pos++] = uint16 >>> 8;\n    this.buffer[this.pos++] = uint16;\n  }\n\n  public getUint16(): number {\n    return ((this.buffer[this.pos++] << 8) | this.buffer[this.pos++]) >>> 0;\n  }\n\n  public pushUint32(uint32: number): void {\n    this.buffer[this.pos++] = uint32 >>> 24;\n    this.buffer[this.pos++] = uint32 >>> 16;\n    this.buffer[this.pos++] = uint32 >>> 8;\n    this.buffer[this.pos++] = uint32;\n  }\n\n  public getUint32(): number {\n    return (\n      (((this.buffer[this.pos++] << 24) >>> 0) +\n        ((this.buffer[this.pos++] << 16) |\n          (this.buffer[this.pos++] << 8) |\n          this.buffer[this.pos++])) >>>\n      0\n    );\n  }\n\n  public pushUint32Array(arr: Uint32Array): void {\n    this.pushLength(arr.length);\n    // TODO - use `set` to push the full buffer at once?\n    for (const n of arr) {\n      this.pushUint32(n);\n    }\n  }\n\n  public getUint32Array(): Uint32Array {\n    const length = this.getLength();\n    const arr = new Uint32Array(length);\n    // TODO - use `subarray`?\n    for (let i = 0; i < length; i += 1) {\n      arr[i] = this.getUint32();\n    }\n    return arr;\n  }\n\n  public pushUTF8(raw: string): void {\n    const str = encode(raw);\n    this.pushLength(str.length);\n\n    for (let i = 0; i < str.length; i += 1) {\n      this.buffer[this.pos++] = str.charCodeAt(i);\n    }\n  }\n\n  public getUTF8(): string {\n    const byteLength = this.getLength();\n    this.pos += byteLength;\n    return decode(\n      String.fromCharCode.apply(\n        null,\n        // @ts-ignore\n        this.buffer.subarray(this.pos - byteLength, this.pos),\n      ),\n    );\n  }\n\n  public pushASCII(str: string): void {\n    this.pushLength(str.length);\n\n    for (let i = 0; i < str.length; i += 1) {\n      this.buffer[this.pos++] = str.charCodeAt(i);\n    }\n  }\n\n  public getASCII(): string {\n    const byteLength = this.getLength();\n    this.pos += byteLength;\n\n    // @ts-ignore\n    return String.fromCharCode.apply(null, this.buffer.subarray(this.pos - byteLength, this.pos));\n  }\n\n  public pushNetworkRedirect(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.networkRedirect.compress(str));\n    } else {\n      this.pushASCII(str);\n    }\n  }\n\n  public getNetworkRedirect(): string {\n    if (this.compression !== undefined) {\n      return this.compression.networkRedirect.decompress(this.getBytes());\n    }\n    return this.getASCII();\n  }\n\n  public pushNetworkHostname(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.networkHostname.compress(str));\n    } else {\n      this.pushASCII(str);\n    }\n  }\n\n  public getNetworkHostname(): string {\n    if (this.compression !== undefined) {\n      return this.compression.networkHostname.decompress(this.getBytes());\n    }\n    return this.getASCII();\n  }\n\n  public pushNetworkCSP(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.networkCSP.compress(str));\n    } else {\n      this.pushASCII(str);\n    }\n  }\n\n  public getNetworkCSP(): string {\n    if (this.compression !== undefined) {\n      return this.compression.networkCSP.decompress(this.getBytes());\n    }\n    return this.getASCII();\n  }\n\n  public pushNetworkFilter(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.networkFilter.compress(str));\n    } else {\n      this.pushASCII(str);\n    }\n  }\n\n  public getNetworkFilter(): string {\n    if (this.compression !== undefined) {\n      return this.compression.networkFilter.decompress(this.getBytes());\n    }\n    return this.getASCII();\n  }\n\n  public pushCosmeticSelector(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.cosmeticSelector.compress(str));\n    } else {\n      this.pushASCII(str);\n    }\n  }\n\n  public getCosmeticSelector(): string {\n    if (this.compression !== undefined) {\n      return this.compression.cosmeticSelector.decompress(this.getBytes());\n    }\n    return this.getASCII();\n  }\n\n  public pushRawCosmetic(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.cosmeticRaw.compress(encode(str)));\n    } else {\n      this.pushUTF8(str);\n    }\n  }\n\n  public getRawCosmetic(): string {\n    if (this.compression !== undefined) {\n      return decode(this.compression.cosmeticRaw.decompress(this.getBytes()));\n    }\n    return this.getUTF8();\n  }\n\n  public pushRawNetwork(str: string): void {\n    if (this.compression !== undefined) {\n      this.pushBytes(this.compression.networkRaw.compress(encode(str)));\n    } else {\n      this.pushUTF8(str);\n    }\n  }\n\n  public getRawNetwork(): string {\n    if (this.compression !== undefined) {\n      return decode(this.compression.networkRaw.decompress(this.getBytes()));\n    }\n    return this.getUTF8();\n  }\n\n  private checkSize() {\n    if (this.pos !== 0 && this.pos > this.buffer.byteLength) {\n      throw new Error(\n        `StaticDataView too small: ${this.buffer.byteLength}, but required ${this.pos} bytes`,\n      );\n    }\n  }\n\n  // Serialiez `length` with variable encoding to save space\n  private pushLength(length: number): void {\n    if (length <= 127) {\n      this.pushUint8(length);\n    } else {\n      this.pushUint8(128);\n      this.pushUint32(length);\n    }\n  }\n\n  private getLength(): number {\n    const lengthShort = this.getUint8();\n    return lengthShort === 128 ? this.getUint32() : lengthShort;\n  }\n}\n","/**\n * The MIT License (MIT)\n *\n * Copyright (c) Feross Aboukhadijeh\n *\n * Originally from: https://github.com/feross/queue-microtask\n */\n\nlet promise: Promise<void> | undefined;\n\ntype Callback = () => void;\n\nexport const queueMicrotask: (cb: Callback) => void =\n  typeof window !== 'undefined' && typeof window.queueMicrotask === 'function'\n    ? (cb: Callback) => window.queueMicrotask(cb)\n    : // reuse resolved promise, and allocate it lazily\n      (cb: Callback) =>\n        (promise || (promise = Promise.resolve())).then(cb).catch((err) =>\n          setTimeout(() => {\n            throw err;\n          }, 0),\n        );\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { StaticDataView, sizeOfBool } from './data-view';\n\nexport default class Config {\n  public static deserialize(buffer: StaticDataView): Config {\n    return new Config({\n      debug: buffer.getBool(),\n      enableCompression: buffer.getBool(),\n      enableHtmlFiltering: buffer.getBool(),\n      enableInMemoryCache: buffer.getBool(),\n      enableMutationObserver: buffer.getBool(),\n      enableOptimizations: buffer.getBool(),\n      guessRequestTypeFromUrl: buffer.getBool(),\n      integrityCheck: buffer.getBool(),\n      loadCSPFilters: buffer.getBool(),\n      loadCosmeticFilters: buffer.getBool(),\n      loadExceptionFilters: buffer.getBool(),\n      loadExtendedSelectors: buffer.getBool(),\n      loadGenericCosmeticsFilters: buffer.getBool(),\n      loadNetworkFilters: buffer.getBool(),\n    });\n  }\n\n  public readonly debug: boolean;\n  public readonly enableCompression: boolean;\n  public readonly enableHtmlFiltering: boolean;\n  public readonly enableInMemoryCache: boolean;\n  public readonly enableMutationObserver: boolean;\n  public readonly enableOptimizations: boolean;\n  public readonly guessRequestTypeFromUrl: boolean;\n  public readonly integrityCheck: boolean;\n  public readonly loadCSPFilters: boolean;\n  public readonly loadCosmeticFilters: boolean;\n  public readonly loadExceptionFilters: boolean;\n  public readonly loadExtendedSelectors: boolean;\n  public readonly loadGenericCosmeticsFilters: boolean;\n  public readonly loadNetworkFilters: boolean;\n\n  constructor({\n    debug = false,\n    enableCompression = false,\n    enableHtmlFiltering = false,\n    enableInMemoryCache = true,\n    enableMutationObserver = true,\n    enableOptimizations = true,\n    guessRequestTypeFromUrl = false,\n    integrityCheck = true,\n    loadCSPFilters = true,\n    loadCosmeticFilters = true,\n    loadExceptionFilters = true,\n    loadExtendedSelectors = false,\n    loadGenericCosmeticsFilters = true,\n    loadNetworkFilters = true,\n  }: Partial<Config> = {}) {\n    this.debug = debug;\n    this.enableCompression = enableCompression;\n    this.enableHtmlFiltering = enableHtmlFiltering;\n    this.enableInMemoryCache = enableInMemoryCache;\n    this.enableMutationObserver = enableMutationObserver;\n    this.enableOptimizations = enableOptimizations;\n    this.guessRequestTypeFromUrl = guessRequestTypeFromUrl;\n    this.integrityCheck = integrityCheck;\n    this.loadCSPFilters = loadCSPFilters;\n    this.loadCosmeticFilters = loadCosmeticFilters;\n    this.loadExceptionFilters = loadExceptionFilters;\n    this.loadExtendedSelectors = loadExtendedSelectors;\n    this.loadGenericCosmeticsFilters = loadGenericCosmeticsFilters;\n    this.loadNetworkFilters = loadNetworkFilters;\n  }\n\n  public getSerializedSize(): number {\n    // NOTE: this should always be the number of attributes and needs to be\n    // updated when `Config` changes.\n    return 14 * sizeOfBool();\n  }\n\n  public serialize(buffer: StaticDataView): void {\n    buffer.pushBool(this.debug);\n    buffer.pushBool(this.enableCompression);\n    buffer.pushBool(this.enableHtmlFiltering);\n    buffer.pushBool(this.enableInMemoryCache);\n    buffer.pushBool(this.enableMutationObserver);\n    buffer.pushBool(this.enableOptimizations);\n    buffer.pushBool(this.guessRequestTypeFromUrl);\n    buffer.pushBool(this.integrityCheck);\n    buffer.pushBool(this.loadCSPFilters);\n    buffer.pushBool(this.loadCosmeticFilters);\n    buffer.pushBool(this.loadExceptionFilters);\n    buffer.pushBool(this.loadExtendedSelectors);\n    buffer.pushBool(this.loadGenericCosmeticsFilters);\n    buffer.pushBool(this.loadNetworkFilters);\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { queueMicrotask } from './queue-microtask';\n\n/**\n * Type of an event listener (i.e.: callback). It accepts arbitrary arguments\n * and is not expected to return any result.\n */\ntype EventListener = (...args: any[]) => void;\n\n/**\n * Type of event listeners for all events. It maps event names (from a set of\n * type-level string literals) to list of event listeners.\n */\ntype EventListeners<EventNames> = Map<EventNames, EventListener[]>;\n\n/**\n * Add `callback` listener for `event` in `listeners` Map.\n */\nfunction registerCallback<EventNames>(\n  event: EventNames,\n  callback: EventListener,\n  listeners: EventListeners<EventNames>,\n): void {\n  let listenersForEvent = listeners.get(event);\n\n  if (listenersForEvent === undefined) {\n    listenersForEvent = [];\n    listeners.set(event, listenersForEvent);\n  }\n\n  listenersForEvent.push(callback);\n}\n\n/**\n * Remove `callback` listener for `event` from `listeners` Map.\n */\nfunction unregisterCallback<EventNames>(\n  event: EventNames,\n  callback: EventListener,\n  listeners: EventListeners<EventNames>,\n): void {\n  const listenersForEvent = listeners.get(event);\n  if (listenersForEvent !== undefined) {\n    const indexOfCallback = listenersForEvent.indexOf(callback);\n    if (indexOfCallback !== -1) {\n      listenersForEvent.splice(indexOfCallback, 1);\n    }\n  }\n}\n\n/**\n * Call all registered listeners for `event` with `args` as arguments. Return\n * `true` if at least one callback was registered and `false` otherwise.\n */\nfunction triggerCallback<EventNames>(\n  event: EventNames,\n  args: any[],\n  listeners: EventListeners<EventNames>,\n): boolean {\n  // Fast-path for cases where no listener is registered\n  if (listeners.size === 0) {\n    return false;\n  }\n\n  const listenersForEvent = listeners.get(event);\n  if (listenersForEvent !== undefined) {\n    queueMicrotask(() => {\n      for (const listener of listenersForEvent) {\n        listener(...args);\n      }\n    });\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Simple and efficient `EventEmitter` abstraction (following conventions from\n * Node.js) allowing partially typed event emitting. The set of event names is\n * specified as a type parameter while instantiating the event emitter.\n */\nexport class EventEmitter<EventNames> {\n  private onceListeners: EventListeners<EventNames> = new Map();\n  private onListeners: EventListeners<EventNames> = new Map();\n\n  /**\n   * Register an event listener for `event`.\n   */\n  public on(event: EventNames, callback: EventListener): void {\n    registerCallback(event, callback, this.onListeners);\n  }\n\n  /**\n   * Register an event listener for `event`; but only listen to first instance\n   * of this event. The listener is automatically deleted afterwards.\n   */\n  public once(event: EventNames, callback: EventListener): void {\n    registerCallback(event, callback, this.onceListeners);\n  }\n\n  /**\n   * Remove `callback` from list of listeners for `event`.\n   */\n  public unsubscribe(event: EventNames, callback: EventListener): void {\n    unregisterCallback(event, callback, this.onListeners);\n    unregisterCallback(event, callback, this.onceListeners);\n  }\n\n  /**\n   * Emit an event. Call all registered listeners to this event.\n   */\n  public emit(event: EventNames, ...args: any[]): void {\n    triggerCallback(event, args, this.onListeners);\n    if (triggerCallback(event, args, this.onceListeners) === true) {\n      this.onceListeners.delete(event);\n    }\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\ninterface FetchResponse {\n  text: () => Promise<string>;\n  arrayBuffer: () => Promise<ArrayBuffer>;\n  json: () => Promise<any>;\n}\n\nexport type Fetch = (url: string) => Promise<FetchResponse>;\n\n/**\n * Built-in fetch helpers can be used to initialize the adblocker from\n * pre-built presets or raw lists (fetched from multiple sources). In case of\n * failure (e.g. timeout), the whole process of initialization fails. Timeouts\n * are not so uncommon, and retrying to fetch usually succeeds.\n */\nexport function fetchWithRetry(fetch: Fetch, url: string): Promise<FetchResponse> {\n  let retry = 3;\n\n  // Wrap `fetch` into a lightweight retry function which makes sure that if\n  // fetching fails, it can be retried up to three times. Failure can happen if\n  // the remote server times-out, but retrying fetching of the same URL will\n  // usually succeed.\n  const fetchWrapper = (): Promise<FetchResponse> => {\n    return fetch(url).catch((ex) => {\n      if (retry > 0) {\n        retry -= 1;\n        return new Promise((resolve, reject) => {\n          setTimeout(() => {\n            fetchWrapper().then(resolve).catch(reject);\n          }, 500);\n        });\n      }\n\n      throw ex;\n    });\n  };\n\n  return fetchWrapper();\n}\n\nfunction fetchResource(fetch: Fetch, url: string): Promise<string> {\n  return fetchWithRetry(fetch, url).then((response) => response.text());\n}\n\nconst PREFIX =\n  'https://raw.githubusercontent.com/cliqz-oss/adblocker/master/packages/adblocker/assets';\n\nexport const adsLists = [\n  `${PREFIX}/easylist/easylist.txt`,\n  `${PREFIX}/easylist/easylistgermany.txt`,\n  `${PREFIX}/peter-lowe/serverlist.txt`,\n  `${PREFIX}/ublock-origin/annoyances.txt`,\n  `${PREFIX}/ublock-origin/badware.txt`,\n  `${PREFIX}/ublock-origin/filters.txt`,\n  `${PREFIX}/ublock-origin/filters-2020.txt`,\n  `${PREFIX}/ublock-origin/filters-2021.txt`,\n  `${PREFIX}/ublock-origin/filters-2022.txt`,\n  `${PREFIX}/ublock-origin/resource-abuse.txt`,\n  `${PREFIX}/ublock-origin/unbreak.txt`,\n];\n\nexport const adsAndTrackingLists = [\n  ...adsLists,\n  `${PREFIX}/easylist/easyprivacy.txt`,\n  `${PREFIX}/ublock-origin/privacy.txt`,\n];\n\nexport const fullLists = [...adsAndTrackingLists, `${PREFIX}/easylist/easylist-cookie.txt`];\n\n/**\n * Fetch latest version of enabledByDefault blocking lists.\n */\nexport function fetchLists(fetch: Fetch, urls: string[]): Promise<string[]> {\n  return Promise.all(urls.map((url) => fetchResource(fetch, url)));\n}\n\n/**\n * Fetch latest version of uBlock Origin's resources, used to inject scripts in\n * the page or redirect request to data URLs.\n */\nexport function fetchResources(fetch: Fetch): Promise<string> {\n  return fetchResource(fetch, `${PREFIX}/ublock-origin/resources.txt`);\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nclass HidingBuilder {}\n\ntype RequestType = 'image' | 'script' | 'font' | 'frame' | 'media' | 'font' | 'css';\n\nclass NetworkBuilder {\n  private options: Set<RequestType> = new Set();\n\n  private prefix: string | undefined = undefined;\n  private infix: string | undefined = undefined;\n  private suffix: string | undefined = undefined;\n\n  private redirect: string | undefined = undefined;\n\n  private blockRequestsWithType(t: RequestType): NetworkBuilder {\n    if (this.options.has(t)) {\n      throw new Error(`Already blocking type ${t}`);\n    }\n\n    this.options.add(t);\n    return this;\n  }\n\n  public images(): NetworkBuilder {\n    return this.blockRequestsWithType('image');\n  }\n\n  public scripts(): NetworkBuilder {\n    return this.blockRequestsWithType('script');\n  }\n\n  public frames(): NetworkBuilder {\n    return this.blockRequestsWithType('frame');\n  }\n\n  public fonts(): NetworkBuilder {\n    return this.blockRequestsWithType('font');\n  }\n\n  public medias(): NetworkBuilder {\n    return this.blockRequestsWithType('media');\n  }\n\n  public styles(): NetworkBuilder {\n    return this.blockRequestsWithType('css');\n  }\n\n  public redirectTo(redirect: string): NetworkBuilder {\n    if (this.redirect !== undefined) {\n      throw new Error(`Already redirecting: ${this.redirect}`);\n    }\n    this.redirect = `redirect=${redirect}`;\n    return this;\n  }\n\n  public urlContains(infix: string): NetworkBuilder {\n    if (this.infix !== undefined) {\n      throw new Error(`Already matching pattern: ${this.infix}`);\n    }\n    this.infix = infix;\n    return this;\n  }\n\n  public urlStartsWith(prefix: string): NetworkBuilder {\n    if (this.prefix !== undefined) {\n      throw new Error(`Already matching prefix: ${this.prefix}`);\n    }\n    this.prefix = `|${prefix}`;\n    return this;\n  }\n\n  public urlEndsWith(suffix: string): NetworkBuilder {\n    if (this.suffix !== undefined) {\n      throw new Error(`Already matching suffix: ${this.suffix}`);\n    }\n    this.suffix = `${suffix}|`;\n    return this;\n  }\n\n  public withHostname(hostname: string): NetworkBuilder {\n    if (this.prefix !== undefined) {\n      throw new Error(`Cannot match hostname if filter already has prefix: ${this.prefix}`);\n    }\n    this.prefix = `||${hostname}^`;\n    return this;\n  }\n\n  public toString(): string {\n    const parts: string[] = [];\n\n    if (this.prefix !== undefined) {\n      parts.push(this.prefix);\n    }\n\n    if (this.infix !== undefined) {\n      parts.push(this.infix);\n    }\n\n    if (this.suffix !== undefined) {\n      parts.push(this.suffix);\n    }\n\n    const options: string[] = ['important'];\n\n    if (this.options.size !== 0) {\n      for (const option of this.options) {\n        options.push(option);\n      }\n    }\n\n    if (this.redirect !== undefined) {\n      options.push(this.redirect);\n    }\n\n    return `${parts.length === 0 ? '*' : parts.join('*')}$${options.join(',')}`;\n  }\n}\n\nexport function block(): NetworkBuilder {\n  return new NetworkBuilder();\n}\n\nexport function hide(): HidingBuilder {\n  return new HidingBuilder();\n}\n","/*!\n * Based on parsel. Extended by Rémi Berson for Ghostery (2021).\n * https://github.com/LeaVerou/parsel\n *\n * MIT License\n *\n * Copyright (c) 2020 Lea Verou\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n */\n\nimport { isAST, isAtoms } from './types';\nimport type {\n  AST,\n  Atoms,\n  AtomsOrStrings,\n  Attribute,\n  Class,\n  Combinator,\n  Comma,\n  Id,\n  ParserOptions,\n  PseudoClass,\n  PseudoElement,\n  Strings,\n  TokenType,\n  Type,\n} from './types';\n\nexport const RECURSIVE_PSEUDO_CLASSES = new Set([\n  'any',\n  'dir',\n  'has',\n  'host-context',\n  'if',\n  'if-not',\n  'is',\n  'matches',\n  'not',\n  'where',\n]);\n\nconst TOKENS: { [T in TokenType]: RegExp } = {\n  attribute: /\\[\\s*(?:(?<namespace>\\*|[-\\w]*)\\|)?(?<name>[-\\w\\u{0080}-\\u{FFFF}]+)\\s*(?:(?<operator>\\W?=)\\s*(?<value>.+?)\\s*(?<caseSensitive>[iIsS])?\\s*)?\\]/gu,\n  id: /#(?<name>(?:[-\\w\\u{0080}-\\u{FFFF}]|\\\\.)+)/gu,\n  class: /\\.(?<name>(?:[-\\w\\u{0080}-\\u{FFFF}]|\\\\.)+)/gu,\n  comma: /\\s*,\\s*/g, // must be before combinator\n  combinator: /\\s*[\\s>+~]\\s*/g, // this must be after attribute\n  'pseudo-element': /::(?<name>[-\\w\\u{0080}-\\u{FFFF}]+)(?:\\((?:¶*)\\))?/gu, // this must be before pseudo-class\n  'pseudo-class': /:(?<name>[-\\w\\u{0080}-\\u{FFFF}]+)(?:\\((?<argument>¶*)\\))?/gu,\n  type: /(?:(?<namespace>\\*|[-\\w]*)\\|)?(?<name>[-\\w\\u{0080}-\\u{FFFF}]+)|\\*/gu, // this must be last\n};\n\nconst TOKENS_WITH_PARENS: Set<TokenType> = new Set(['pseudo-class', 'pseudo-element']);\nconst TOKENS_WITH_STRINGS: Set<TokenType> = new Set([...TOKENS_WITH_PARENS, 'attribute']);\nconst TRIM_TOKENS: Set<TokenType> = new Set(['combinator', 'comma']);\n\nconst TOKENS_FOR_RESTORE: { [T in TokenType]: RegExp } = Object.assign({}, TOKENS);\nTOKENS_FOR_RESTORE['pseudo-element'] = RegExp(\n  TOKENS['pseudo-element'].source.replace('(?<argument>¶*)', '(?<argument>.*?)'),\n  'gu',\n);\nTOKENS_FOR_RESTORE['pseudo-class'] = RegExp(\n  TOKENS['pseudo-class'].source.replace('(?<argument>¶*)', '(?<argument>.*)'),\n  'gu',\n);\n\n// TODO - it feels like with some more typing shenanigans we could replace groups validation by generic logic in this function.\nfunction splitOnMatch(\n  pattern: RegExp,\n  str: string,\n): [string, [string, { [name: string]: string }], string] | undefined {\n  pattern.lastIndex = 0;\n  const match = pattern.exec(str);\n\n  if (match === null) {\n    return undefined;\n  }\n\n  const from = match.index - 1;\n  const content = match[0];\n  const before = str.slice(0, from + 1);\n  const after = str.slice(from + content.length + 1);\n\n  return [before, [content, match.groups || {}], after];\n}\n\nconst GRAMMAR = [\n  // attribute\n  (str: string): [string, Attribute, string] | undefined => {\n    const match = splitOnMatch(TOKENS.attribute, str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content, { name, operator, value, namespace, caseSensitive }], after] = match;\n    if (name === undefined) {\n      return undefined;\n    }\n\n    return [\n      before,\n      {\n        type: 'attribute',\n        content,\n        length: content.length,\n        namespace,\n        caseSensitive,\n        pos: [],\n        name,\n        operator,\n        value,\n      },\n      after,\n    ];\n  },\n\n  // #id\n  (str: string): [string, Id, string] | undefined => {\n    const match = splitOnMatch(TOKENS.id, str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content, { name }], after] = match;\n    if (name === undefined) {\n      return undefined;\n    }\n\n    return [\n      before,\n      {\n        type: 'id',\n        content,\n        length: content.length,\n        pos: [],\n        name,\n      },\n      after,\n    ];\n  },\n\n  // .class\n  (str: string): [string, Class, string] | undefined => {\n    const match = splitOnMatch(TOKENS.class, str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content, { name }], after] = match;\n    if (name === undefined) {\n      return undefined;\n    }\n\n    return [\n      before,\n      {\n        type: 'class',\n        content,\n        length: content.length,\n        pos: [],\n        name,\n      },\n      after,\n    ];\n  },\n\n  // comma ,\n  (str: string): [string, Comma, string] | undefined => {\n    const match = splitOnMatch(TOKENS.comma, str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content], after] = match;\n\n    return [\n      before,\n      {\n        type: 'comma',\n        content,\n        length: content.length,\n        pos: [],\n      },\n      after,\n    ];\n  },\n\n  // combinator\n  (str: string): [string, Combinator, string] | undefined => {\n    const match = splitOnMatch(TOKENS.combinator, str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content], after] = match;\n\n    return [\n      before,\n      {\n        type: 'combinator',\n        content,\n        length: content.length,\n        pos: [],\n      },\n      after,\n    ];\n  },\n\n  // pseudo-element\n  (str: string): [string, PseudoElement, string] | undefined => {\n    const match = splitOnMatch(TOKENS['pseudo-element'], str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content, { name }], after] = match;\n\n    if (name === undefined) {\n      return undefined;\n    }\n\n    return [\n      before,\n      {\n        type: 'pseudo-element',\n        content,\n        length: content.length,\n        pos: [],\n        name,\n      },\n      after,\n    ];\n  },\n\n  // pseudo-class\n  (str: string): [string, PseudoClass, string] | undefined => {\n    const match = splitOnMatch(TOKENS['pseudo-class'], str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    // TODO - here `argument` can be undefined and should be rejected?\n    const [before, [content, { name, argument }], after] = match;\n\n    if (name === undefined) {\n      return undefined;\n    }\n\n    return [\n      before,\n      {\n        type: 'pseudo-class',\n        content,\n        length: content.length,\n        pos: [],\n        name,\n        argument,\n        subtree: undefined,\n      },\n      after,\n    ];\n  },\n\n  // type\n  (str: string): [string, Type, string] | undefined => {\n    const match = splitOnMatch(TOKENS.type, str);\n    if (match === undefined) {\n      return undefined;\n    }\n\n    const [before, [content, { name, namespace }], after] = match;\n\n    return [\n      before,\n      {\n        type: 'type',\n        content,\n        length: content.length,\n        namespace,\n        pos: [],\n        name,\n      },\n      after,\n    ];\n  },\n];\n\nfunction tokenizeBy(text: string): Atoms {\n  if (!text) {\n    return [];\n  }\n\n  const strarr: AtomsOrStrings = [text];\n  for (const tokenizer of GRAMMAR) {\n    for (let i = 0; i < strarr.length; i++) {\n      const str = strarr[i];\n      if (typeof str === 'string') {\n        const match = tokenizer(str);\n        if (match !== undefined) {\n          strarr.splice(i, 1, ...(match as AtomsOrStrings).filter((a) => a.length !== 0));\n        }\n      }\n    }\n  }\n\n  let offset = 0;\n  for (const token of strarr) {\n    if (typeof token !== 'string') {\n      token.pos = [offset, offset + token.length];\n      if (TRIM_TOKENS.has(token.type)) {\n        token.content = token.content.trim() || ' ';\n      }\n    }\n\n    offset += token.length;\n  }\n\n  if (isAtoms(strarr)) {\n    return strarr;\n  }\n\n  // NOTE: here this means that parsing failed.\n  return [];\n}\n\nfunction restoreNested(tokens: Atoms, strings: Strings, regex: RegExp, types: Set<TokenType>) {\n  // TODO - here from offsets in strings and tokens we should be able to find the exact spot without RegExp?\n  for (const str of strings) {\n    for (const token of tokens) {\n      if (types.has(token.type) && token.pos[0] < str.start && str.start < token.pos[1]) {\n        const content = token.content;\n        token.content = token.content.replace(regex, str.str);\n\n        if (token.content !== content) {\n          // actually changed?\n          // Re-evaluate groups\n          TOKENS_FOR_RESTORE[token.type].lastIndex = 0;\n          const match = TOKENS_FOR_RESTORE[token.type].exec(token.content);\n          if (match !== null) {\n            Object.assign(token, match.groups);\n          }\n        }\n      }\n    }\n  }\n}\n\nexport function isEscaped(str: string, index: number): boolean {\n  let backslashes = 0;\n\n  index -= 1;\n  while (index >= 0 && str[index] === '\\\\') {\n    backslashes += 1;\n    index -= 1;\n  }\n\n  return backslashes % 2 !== 0;\n}\n\nexport function gobbleQuotes(text: string, quote: '\"' | \"'\", start: number): string | undefined {\n  // Find end of quote, taking care of ignoring escaped quotes\n  let end = start + 1;\n\n  /* tslint:disable no-conditional-assignment */\n  while ((end = text.indexOf(quote, end)) !== -1 && isEscaped(text, end) === true) {\n    end += 1;\n  }\n\n  if (end === -1) {\n    // Opening quote without closing quote\n    return undefined;\n  }\n\n  return text.slice(start, end + 1);\n}\n\nexport function gobbleParens(text: string, start: number): string | undefined {\n  let stack = 0;\n\n  for (let i = start; i < text.length; i++) {\n    const char = text[i];\n\n    if (char === '(') {\n      stack += 1;\n    } else if (char === ')') {\n      if (stack > 0) {\n        stack -= 1;\n      } else {\n        // Closing paren without opening paren\n        return undefined;\n      }\n    }\n\n    if (stack === 0) {\n      return text.slice(start, i + 1);\n    }\n  }\n\n  // Opening paren without closing paren\n  return undefined;\n}\n\nexport function replace(\n  selector: string,\n  replacement: '¶' | '§',\n  opening: '(' | '\"' | \"'\",\n  gobble: (text: string, start: number) => string | undefined,\n): [Strings, string] {\n  const strings: Strings = [];\n\n  let offset = 0;\n  /* tslint:disable no-conditional-assignment */\n  while ((offset = selector.indexOf(opening, offset)) !== -1) {\n    const str = gobble(selector, offset);\n    if (str === undefined) {\n      break;\n    }\n\n    strings.push({ str, start: offset });\n    selector = `${selector.slice(0, offset + 1)}${replacement.repeat(\n      str.length - 2,\n    )}${selector.slice(offset + str.length - 1)}`;\n    offset += str.length;\n  }\n\n  return [strings, selector];\n}\n\nexport function tokenize(selector: string): Atoms {\n  if (typeof selector !== 'string') {\n    return [];\n  }\n\n  // Prevent leading/trailing whitespace be interpreted as combinators\n  selector = selector.trim();\n\n  if (selector.length === 0) {\n    return [];\n  }\n\n  // Replace strings with whitespace strings (to preserve offsets)\n  const [doubleQuotes, selectorWithoutDoubleQuotes] = replace(\n    selector,\n    '§',\n    '\"',\n    (text: string, start: number) => gobbleQuotes(text, '\"', start),\n  );\n\n  const [singleQuotes, selectorWithoutQuotes] = replace(\n    selectorWithoutDoubleQuotes,\n    '§',\n    \"'\",\n    (text: string, start: number) => gobbleQuotes(text, \"'\", start),\n  );\n\n  // Now that strings are out of the way, extract parens and replace them with parens with whitespace (to preserve offsets)\n  const [parens, selectorWithoutParens] = replace(selectorWithoutQuotes, '¶', '(', gobbleParens);\n\n  // Now we have no nested structures and we can parse with regexes\n  const tokens = tokenizeBy(selectorWithoutParens);\n\n  // Now restore parens and strings in reverse order\n  restoreNested(tokens, parens, /\\(¶*\\)/, TOKENS_WITH_PARENS);\n  restoreNested(tokens, doubleQuotes, /\"§*\"/, TOKENS_WITH_STRINGS);\n  restoreNested(tokens, singleQuotes, /'§*'/, TOKENS_WITH_STRINGS);\n\n  return tokens;\n}\n\n// Convert a flat list of tokens into a tree of complex & compound selectors\nfunction nestTokens(\n  tokens: Atoms,\n  { list = true }: Pick<ParserOptions, 'list'> = {},\n): AST | undefined {\n  if (list === true && tokens.some((t) => t.type === 'comma')) {\n    const selectors: AST[] = [];\n    const temp: Atoms = [];\n\n    for (let i = 0; i < tokens.length; i += 1) {\n      const token = tokens[i];\n      if (token.type === 'comma') {\n        if (temp.length === 0) {\n          throw new Error('Incorrect comma at ' + i);\n        }\n\n        const sub = nestTokens(temp, { list: false });\n        if (sub !== undefined) {\n          selectors.push(sub);\n        }\n        temp.length = 0;\n      } else {\n        temp.push(token);\n      }\n    }\n\n    if (temp.length === 0) {\n      throw new Error('Trailing comma');\n    } else {\n      const sub = nestTokens(temp, { list: false });\n      if (sub !== undefined) {\n        selectors.push(sub);\n      }\n    }\n\n    return { type: 'list', list: selectors };\n  }\n\n  for (let i = tokens.length - 1; i >= 0; i--) {\n    const token = tokens[i];\n\n    if (token.type === 'combinator') {\n      const left = nestTokens(tokens.slice(0, i));\n      const right = nestTokens(tokens.slice(i + 1));\n      if (right === undefined) {\n        return undefined;\n      }\n\n      if (\n        token.content !== ' ' &&\n        token.content !== '~' &&\n        token.content !== '+' &&\n        token.content !== '>'\n      ) {\n        return undefined;\n      }\n\n      return {\n        type: 'complex',\n        combinator: token.content,\n        left,\n        right,\n      };\n    }\n  }\n\n  if (tokens.length === 0) {\n    return undefined;\n  }\n\n  if (isAST(tokens)) {\n    if (tokens.length === 1) {\n      return tokens[0];\n    }\n\n    // If we're here, there are no combinators, so it's just a list\n    return {\n      type: 'compound',\n      compound: [...tokens], // clone to avoid pointers messing up the AST\n    };\n  }\n\n  return undefined;\n}\n\n// Traverse an AST (or part thereof), in depth-first order\nfunction walk(\n  node: AST | undefined,\n  callback: (node: AST, parentNode?: AST) => void,\n  o?: AST,\n  parent?: AST,\n): void {\n  if (node === undefined) {\n    return;\n  }\n\n  if (node.type === 'complex') {\n    walk(node.left, callback, o, node);\n    walk(node.right, callback, o, node);\n  } else if (node.type === 'compound') {\n    for (const n of node.compound) {\n      walk(n, callback, o, node);\n    }\n  } else if (\n    node.type === 'pseudo-class' &&\n    node.subtree !== undefined &&\n    o !== undefined &&\n    o.type === 'pseudo-class' &&\n    o.subtree !== undefined\n  ) {\n    walk(node.subtree, callback, o, node);\n  }\n\n  callback(node, parent);\n}\n\n/**\n * Parse a CSS selector\n * @param selector {String} The selector to parse\n * @param options.recursive {Boolean} Whether to parse the arguments of pseudo-classes like :is(), :has() etc. Defaults to true.\n * @param options.list {Boolean} Whether this can be a selector list (A, B, C etc). Defaults to true.\n */\nexport function parse(\n  selector: string,\n  { recursive = true, list = true }: ParserOptions = {},\n): AST | undefined {\n  const tokens = tokenize(selector);\n\n  if (tokens.length === 0) {\n    return undefined;\n  }\n\n  const ast = nestTokens(tokens, { list });\n\n  if (recursive === true) {\n    walk(ast, (node) => {\n      if (\n        node.type === 'pseudo-class' &&\n        node.argument &&\n        node.name !== undefined &&\n        RECURSIVE_PSEUDO_CLASSES.has(node.name)\n      ) {\n        node.subtree = parse(node.argument, { recursive: true, list: true });\n      }\n    });\n  }\n\n  return ast;\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nconst tokenTypes = [\n  'attribute',\n  'id',\n  'class',\n  'comma',\n  'combinator',\n  'pseudo-element',\n  'pseudo-class',\n  'type',\n] as const;\n\nexport type TokenType = typeof tokenTypes[number];\n\nexport type Base = {\n  length: number;\n  content: string;\n  pos: number[];\n};\n\nexport type Type = Base & {\n  type: 'type';\n  name?: string;\n  namespace?: string;\n};\n\nexport type PseudoClass = Base & {\n  type: 'pseudo-class';\n  name: string;\n  argument: string | undefined;\n  subtree: AST | undefined;\n};\n\nexport type PseudoElement = Base & {\n  type: 'pseudo-element';\n  name: string;\n};\n\nexport type Combinator = Base & {\n  type: 'combinator';\n};\n\nexport type Comma = Base & {\n  type: 'comma';\n};\n\nexport type Class = Base & {\n  type: 'class';\n  name: string;\n};\n\nexport type Id = Base & {\n  type: 'id';\n  name: string;\n};\n\nexport type Attribute = Base & {\n  type: 'attribute';\n  namespace?: string;\n  caseSensitive?: string;\n  name: string;\n  operator?: string;\n  value?: string;\n};\n\nexport type Atom =\n  | Attribute\n  | Id\n  | Class\n  | Comma\n  | Combinator\n  | PseudoClass\n  | PseudoElement\n  | Type;\n\nexport type Atoms = Atom[];\n\nexport type AtomOrString = Atom | string;\n\nexport type AtomsOrStrings = AtomOrString[];\n\nexport type Strings = { str: string; start: number }[];\n\n// Complex selectors with combinators (e.g. ~, >, +)\nexport interface Complex {\n  type: 'complex';\n  combinator: ' ' | '+' | '~' | '>';\n  right: AST;\n  left: AST | undefined;\n}\n\n// Multiple selectors together\n// i.e. selector1selector2 (should match both at the same time)\nexport interface Compound {\n  type: 'compound';\n  compound: AST[];\n}\n\n// Comma-separated list of selectors\n// i.e. selector1, selector2, etc.\nexport interface List {\n  type: 'list';\n  list: AST[];\n}\n\nexport type AST =\n  | Attribute\n  | Id\n  | Class\n  | PseudoClass\n  | PseudoElement\n  | Type\n  | Complex\n  | Compound\n  | List;\n\nexport interface ParserOptions {\n  recursive?: boolean;\n  list?: boolean;\n}\n\nexport function isAtoms(tokens: AtomsOrStrings): tokens is Atoms {\n  return tokens.every((token) => typeof token !== 'string');\n}\n\nexport function isAST(\n  tokens: Atoms,\n): tokens is (Attribute | Id | Class | PseudoClass | PseudoElement | Type)[] {\n  return tokens.every((token) => token.type !== 'comma' && token.type !== 'combinator');\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { tokenize, RECURSIVE_PSEUDO_CLASSES } from './parse';\n\nexport const EXTENDED_PSEUDO_CLASSES = new Set([\n  // '-abp-contains',\n  // '-abp-has',\n  // '-abp-properties',\n  'has',\n  'has-text',\n  'if',\n  // 'if-not',\n  // 'matches-css',\n  // 'matches-css-after',\n  // 'matches-css-before',\n  // 'min-text-length',\n  // 'nth-ancestor',\n  // 'upward',\n  // 'watch-attr',\n  // 'watch-attrs',\n  // 'xpath',\n]);\n\nexport const PSEUDO_CLASSES = new Set([\n  'active',\n  'any',\n  'any-link',\n  'blank',\n  'checked',\n  'default',\n  'defined',\n  'dir',\n  'disabled',\n  'empty',\n  'enabled',\n  'first',\n  'first-child',\n  'first-of-type',\n  'focus',\n  'focus-visible',\n  'focus-within',\n  'fullscreen',\n  'host',\n  'host-context',\n  'hover',\n  'in-range',\n  'indeterminate',\n  'invalid',\n  'is',\n  'lang',\n  'last-child',\n  'last-of-type',\n  'left',\n  'link',\n  'matches',\n  // NOTE: by default we consider `:not(...)` to be a normal CSS selector since,\n  // we are only interested in cases where the argument is an extended selector.\n  // If that is the case, it will still be detected as such.\n  'not',\n  'nth-child',\n  'nth-last-child',\n  'nth-last-of-type',\n  'nth-of-type',\n  'only-child',\n  'only-of-type',\n  'optional',\n  'out-of-range',\n  'placeholder-shown',\n  'read-only',\n  'read-write',\n  'required',\n  'right',\n  'root',\n  'scope',\n  'target',\n  'valid',\n  'visited',\n  'where',\n]);\n\n// NOTE: here we only need to list the pseudo-elements which can appear with a\n// single colon (e.g. :after or ::after are valid for backward compatibility\n// reasons). They can be misinterpreted as pseudo-classes by the tokenizer for\n// this reason.\nexport const PSEUDO_ELEMENTS = new Set(['after', 'before', 'first-letter', 'first-line']);\n\nexport enum SelectorType {\n  Normal,\n  Extended,\n  Invalid,\n}\n\nexport function classifySelector(selector: string): SelectorType {\n  // In most cases there is no pseudo-anything so we can quickly exit.\n  if (selector.indexOf(':') === -1) {\n    return SelectorType.Normal;\n  }\n\n  const tokens = tokenize(selector);\n\n  // Detect pseudo-classes\n  let foundSupportedExtendedSelector = false;\n  for (const token of tokens) {\n    if (token.type === 'pseudo-class') {\n      const { name } = token;\n      if (EXTENDED_PSEUDO_CLASSES.has(name) === true) {\n        foundSupportedExtendedSelector = true;\n      } else if (PSEUDO_CLASSES.has(name) === false && PSEUDO_ELEMENTS.has(name) === false) {\n        return SelectorType.Invalid;\n      }\n\n      // Recursively\n      if (\n        foundSupportedExtendedSelector === false &&\n        token.argument !== undefined &&\n        RECURSIVE_PSEUDO_CLASSES.has(name) === true\n      ) {\n        const argumentType = classifySelector(token.argument);\n        if (argumentType === SelectorType.Invalid) {\n          return argumentType;\n        } else if (argumentType === SelectorType.Extended) {\n          foundSupportedExtendedSelector = true;\n        }\n      }\n    }\n  }\n\n  if (foundSupportedExtendedSelector === true) {\n    return SelectorType.Extended;\n  }\n\n  return SelectorType.Normal;\n}\n",null,null,null,null,null,null,"/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\n/**\n * Thin abstraction around a Uint32Array which allows to push tokens\n * whithout caring for the offset. It is used as a way to avoid multiple\n * allocations while calling tokenization (mostly beneficitial for\n * `NetworkFilter.getTokens()`).\n */\nexport class TokensBuffer {\n  private readonly buffer: Uint32Array;\n  public pos: number = 0;\n\n  constructor(size: number) {\n    this.buffer = new Uint32Array(size);\n  }\n\n  public reset(): void {\n    this.pos = 0;\n  }\n\n  public slice(): Uint32Array {\n    return this.buffer.slice(0, this.pos);\n  }\n\n  public push(token: number): void {\n    this.buffer[this.pos++] = token;\n  }\n\n  public empty(): boolean {\n    return this.pos === 0;\n  }\n\n  public full(): boolean {\n    return this.pos === this.buffer.length;\n  }\n\n  public remaining(): number {\n    return this.buffer.length - this.pos;\n  }\n}\n\nexport const TOKENS_BUFFER = new TokensBuffer(1024);\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { TokensBuffer, TOKENS_BUFFER } from './tokens-buffer';\n\nexport const HASH_SEED = 7877;\n\n/***************************************************************************\n *  Bitwise helpers\n * ************************************************************************* */\n\n// From: https://stackoverflow.com/a/43122214/1185079\nexport function bitCount(n: number): number {\n  n = n - ((n >> 1) & 0x55555555);\n  n = (n & 0x33333333) + ((n >> 2) & 0x33333333);\n  return (((n + (n >> 4)) & 0xf0f0f0f) * 0x1010101) >> 24;\n}\n\nexport function getBit(n: number, mask: number): boolean {\n  return !!(n & mask);\n}\n\nexport function setBit(n: number, mask: number): number {\n  return n | mask;\n}\n\nexport function clearBit(n: number, mask: number): number {\n  return n & ~mask;\n}\n\nexport function fastHashBetween(str: string, begin: number, end: number): number {\n  let hash = HASH_SEED;\n\n  for (let i = begin; i < end; i += 1) {\n    hash = (hash * 33) ^ str.charCodeAt(i);\n  }\n\n  return hash >>> 0;\n}\n\nexport function fastHash(str: string): number {\n  if (typeof str !== 'string') {\n    return HASH_SEED;\n  }\n\n  if (str.length === 0) {\n    return HASH_SEED;\n  }\n\n  return fastHashBetween(str, 0, str.length);\n}\n\nexport function hashStrings(strings: string[]): Uint32Array {\n  const result = new Uint32Array(strings.length);\n  let index = 0;\n  for (const str of strings) {\n    result[index++] = fastHash(str);\n  }\n  return result;\n}\n\n// https://jsperf.com/string-startswith/21\nexport function fastStartsWith(haystack: string, needle: string): boolean {\n  if (haystack.length < needle.length) {\n    return false;\n  }\n\n  const ceil = needle.length;\n  for (let i = 0; i < ceil; i += 1) {\n    if (haystack[i] !== needle[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function fastStartsWithFrom(haystack: string, needle: string, start: number): boolean {\n  if (haystack.length - start < needle.length) {\n    return false;\n  }\n\n  const ceil = start + needle.length;\n  for (let i = start; i < ceil; i += 1) {\n    if (haystack[i] !== needle[i - start]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function isDigit(ch: number): boolean {\n  // 48 == '0'\n  // 57 == '9'\n  return ch >= 48 && ch <= 57;\n}\n\nexport function isAlpha(ch: number): boolean {\n  // 65 == 'A'\n  // 90 == 'Z'\n  // 97 == 'a'\n  // 122 === 'z'\n  return (ch >= 97 && ch <= 122) || (ch >= 65 && ch <= 90);\n}\n\nfunction isAlphaExtended(ch: number): boolean {\n  // 192 -> 450\n  // À  Á  Â  Ã  Ä  Å  Æ  Ç  È  É  Ê  Ë  Ì  Í  Î  Ï  Ð  Ñ  Ò  Ó  Ô  Õ  Ö  ×  Ø\n  // Ù  Ú  Û  Ü  Ý  Þ  ß  à  á  â  ã  ä  å  æ  ç  è  é  ê  ë  ì  í  î  ï  ð  ñ\n  // ò  ó  ô  õ  ö  ÷  ø  ù  ú  û  ü  ý  þ  ÿ  Ā  ā  Ă  ă  Ą  ą  Ć  ć  Ĉ  ĉ  Ċ\n  // ċ  Č  č  Ď  ď  Đ  đ  Ē  ē  Ĕ  ĕ  Ė  ė  Ę  ę  Ě  ě  Ĝ  ĝ  Ğ  ğ  Ġ  ġ  Ģ  ģ\n  // Ĥ  ĥ  Ħ  ħ  Ĩ  ĩ  Ī  ī  Ĭ  ĭ  Į  į  İ  ı  Ĳ  ĳ  Ĵ  ĵ  Ķ  ķ  ĸ  Ĺ  ĺ  Ļ  ļ\n  // Ľ  ľ  Ŀ  ŀ  Ł  ł  Ń  ń  Ņ  ņ  Ň  ň  ŉ  Ŋ  ŋ  Ō  ō  Ŏ  ŏ  Ő  ő  Œ  œ  Ŕ  ŕ\n  // Ŗ  ŗ  Ř  ř  Ś  ś  Ŝ  ŝ  Ş  ş  Š  š  Ţ  ţ  Ť  ť  Ŧ  ŧ  Ũ  ũ  Ū  ū  Ŭ  ŭ  Ů\n  // ů  Ű  ű  Ų  ų  Ŵ  ŵ  Ŷ  ŷ  Ÿ  Ź  ź  Ż  ż  Ž  ž  ſ  ƀ  Ɓ  Ƃ  ƃ  Ƅ  ƅ  Ɔ  Ƈ\n  // ƈ  Ɖ  Ɗ  Ƌ  ƌ  ƍ  Ǝ  Ə  Ɛ  Ƒ  ƒ  Ɠ  Ɣ  ƕ  Ɩ  Ɨ  Ƙ  ƙ  ƚ  ƛ  Ɯ  Ɲ  ƞ  Ɵ  Ơ\n  // ơ  Ƣ  ƣ  Ƥ  ƥ  Ʀ  Ƨ  ƨ  Ʃ  ƪ  ƫ  Ƭ  ƭ  Ʈ  Ư  ư  Ʊ  Ʋ  Ƴ  ƴ  Ƶ  ƶ  Ʒ  Ƹ  ƹ\n  // ƺ  ƻ  Ƽ  ƽ  ƾ  ƿ  ǀ  ǁ  ǂ\n  return ch >= 192 && ch <= 450;\n}\n\nfunction isCyrillic(ch: number): boolean {\n  // 1024 -> 1279\n  // Ѐ Ё Ђ Ѓ Є Ѕ І Ї Ј Љ Њ Ћ Ќ Ѝ Ў Џ А Б В Г Д Е Ж З И Й К Л М Н О П Р С Т У Ф Х\n  // Ц Ч Ш Щ Ъ Ы Ь Э Ю Я а б в г д е ж з и й к л м н о п р с т у ф х ц ч ш щ ъ ы\n  // ь э ю я ѐ ё ђ ѓ є ѕ і ї ј љ њ ћ ќ ѝ ў џ Ѡ ѡ Ѣ ѣ Ѥ ѥ Ѧ ѧ Ѩ ѩ Ѫ ѫ Ѭ ѭ Ѯ ѯ\n  // Ѱ ѱ Ѳ ѳ Ѵ ѵ Ѷ ѷ Ѹ ѹ Ѻ ѻ Ѽ ѽ Ѿ ѿ Ҁ ҁ ҂ ҃ ҄ ҅ ҆ ҇ ҈ ҉ Ҋ ҋ Ҍ ҍ Ҏ ҏ Ґ ґ Ғ ғ Ҕ ҕ Җ җ Ҙ ҙ\n  // Қ қ Ҝ ҝ Ҟ ҟ Ҡ ҡ Ң ң Ҥ ҥ Ҧ ҧ Ҩ ҩ Ҫ ҫ Ҭ ҭ Ү ү Ұ ұ Ҳ ҳ Ҵ ҵ Ҷ ҷ Ҹ ҹ Һ һ Ҽ ҽ Ҿ\n  // ҿ Ӏ Ӂ ӂ Ӄ ӄ Ӆ ӆ Ӈ ӈ Ӊ ӊ Ӌ ӌ Ӎ ӎ ӏ Ӑ ӑ Ӓ ӓ Ӕ ӕ Ӗ ӗ Ә ә Ӛ ӛ Ӝ ӝ Ӟ ӟ Ӡ ӡ Ӣ ӣ Ӥ\n  // ӥ Ӧ ӧ Ө ө Ӫ ӫ Ӭ ӭ Ӯ ӯ Ӱ ӱ Ӳ ӳ Ӵ ӵ Ӷ ӷ Ӹ ӹ Ӻ ӻ Ӽ ӽ Ӿ ӿ\n  return ch >= 1024 && ch <= 1279;\n}\n\nfunction isAllowedCode(ch: number): boolean {\n  return (\n    isAlpha(ch) || isDigit(ch) || ch === 37 /* '%' */ || isAlphaExtended(ch) || isCyrillic(ch)\n  );\n}\n\nexport function tokenizeWithWildcardsInPlace(\n  pattern: string,\n  skipFirstToken: boolean,\n  skipLastToken: boolean,\n  buffer: TokensBuffer,\n): void {\n  // TODO maybe better to check if buffer is full?\n  // Otherwise we are under-using the space.\n  const len = Math.min(pattern.length, buffer.remaining() * 2);\n  let inside = false;\n  let precedingCh = 0;\n  let start = 0;\n  let hash = HASH_SEED;\n\n  for (let i = 0; i < len; i += 1) {\n    const ch = pattern.charCodeAt(i);\n    if (isAllowedCode(ch) === true) {\n      if (inside === false) {\n        hash = HASH_SEED;\n        inside = true;\n        start = i;\n      }\n      hash = (hash * 33) ^ ch;\n    } else {\n      if (inside === true) {\n        inside = false;\n\n        if (\n          i - start > 1 && // Ignore tokens of 1 character\n          ch !== 42 && // Ignore tokens followed by a '*'\n          precedingCh !== 42 && // Ignore tokens preceeded by a '*'\n          (skipFirstToken === false || start !== 0)\n        ) {\n          buffer.push(hash >>> 0);\n        }\n      }\n\n      precedingCh = ch;\n    }\n  }\n\n  if (\n    skipLastToken === false &&\n    inside === true &&\n    precedingCh !== 42 && // Ignore tokens preceeded by a '*'\n    pattern.length - start > 1 && // Ignore tokens of 1 character\n    buffer.full() === false\n  ) {\n    buffer.push(hash >>> 0);\n  }\n}\n\nexport function tokenizeInPlace(\n  pattern: string,\n  skipFirstToken: boolean,\n  skipLastToken: boolean,\n  buffer: TokensBuffer,\n): void {\n  const len = Math.min(pattern.length, buffer.remaining() * 2);\n  let inside = false;\n  let start = 0;\n  let hash = HASH_SEED;\n\n  for (let i = 0; i < len; i += 1) {\n    const ch = pattern.charCodeAt(i);\n    if (isAllowedCode(ch) === true) {\n      if (inside === false) {\n        hash = HASH_SEED;\n        inside = true;\n        start = i;\n      }\n      hash = (hash * 33) ^ ch;\n    } else if (inside === true) {\n      inside = false;\n      if (\n        i - start > 1 && // Ignore tokens of 1 character\n        (skipFirstToken === false || start !== 0)\n      ) {\n        buffer.push(hash >>> 0);\n      }\n    }\n  }\n\n  if (\n    inside === true &&\n    skipLastToken === false &&\n    pattern.length - start > 1 && // Ignore tokens of 1 character\n    buffer.full() === false\n  ) {\n    buffer.push(hash >>> 0);\n  }\n}\n\nexport function tokenizeNoSkipInPlace(pattern: string, buffer: TokensBuffer): void {\n  const len = Math.min(pattern.length, buffer.remaining() * 2);\n  let inside = false;\n  let start = 0;\n  let hash = HASH_SEED;\n\n  for (let i = 0; i < len; i += 1) {\n    const ch = pattern.charCodeAt(i);\n    if (isAllowedCode(ch) === true) {\n      if (inside === false) {\n        hash = HASH_SEED;\n        inside = true;\n        start = i;\n      }\n      hash = (hash * 33) ^ ch;\n    } else if (inside === true) {\n      inside = false;\n      if (i - start > 1) {\n        buffer.push(hash >>> 0);\n      }\n    }\n  }\n\n  if (inside === true && pattern.length - start > 1 && buffer.full() === false) {\n    buffer.push(hash >>> 0);\n  }\n}\n\nexport function tokenizeNoSkip(pattern: string): Uint32Array {\n  TOKENS_BUFFER.reset();\n  tokenizeNoSkipInPlace(pattern, TOKENS_BUFFER);\n  return TOKENS_BUFFER.slice();\n}\n\nexport function tokenizeWithWildcards(\n  pattern: string,\n  skipFirstToken: boolean,\n  skipLastToken: boolean,\n): Uint32Array {\n  TOKENS_BUFFER.reset();\n  tokenizeWithWildcardsInPlace(pattern, skipFirstToken, skipLastToken, TOKENS_BUFFER);\n  return TOKENS_BUFFER.slice();\n}\n\nexport function tokenize(\n  pattern: string,\n  skipFirstToken: boolean,\n  skipLastToken: boolean,\n): Uint32Array {\n  TOKENS_BUFFER.reset();\n  tokenizeInPlace(pattern, skipFirstToken, skipLastToken, TOKENS_BUFFER);\n  return TOKENS_BUFFER.slice();\n}\n\nexport function tokenizeRegexInPlace(selector: string, tokens: TokensBuffer): void {\n  let end = selector.length - 1;\n  let begin = 1;\n  let prev: number = 0;\n\n  // Try to find the longest safe *prefix* that we can tokenize\n  for (; begin < end; begin += 1) {\n    const code = selector.charCodeAt(begin);\n\n    // If we encounter '|' before any other opening bracket, then it's not safe\n    // to tokenize this filter (e.g.: 'foo|bar'). Instead we abort tokenization\n    // to be safe.\n    if (code === 124 /* '|' */) {\n      return;\n    }\n\n    if (\n      code === 40 /* '(' */ ||\n      code === 42 /* '*' */ ||\n      code === 43 /* '+' */ ||\n      code === 63 /* '?' */ ||\n      code === 91 /* '[' */ ||\n      code === 123 /* '{' */ ||\n      (code === 46 /* '.' */ && prev !== 92) /* '\\' */ ||\n      (code === 92 /* '\\' */ && isAlpha(selector.charCodeAt(begin + 1)))\n    ) {\n      break;\n    }\n\n    prev = code;\n  }\n\n  // Try to find the longest safe *suffix* that we can tokenize\n  prev = 0;\n  for (; end >= begin; end -= 1) {\n    const code = selector.charCodeAt(end);\n\n    // If we encounter '|' before any other opening bracket, then it's not safe\n    // to tokenize this filter (e.g.: 'foo|bar'). Instead we abort tokenization\n    // to be safe.\n    if (code === 124 /* '|' */) {\n      return;\n    }\n\n    if (\n      code === 41 /* ')' */ ||\n      code === 42 /* '*' */ ||\n      code === 43 /* '+' */ ||\n      code === 63 /* '?' */ ||\n      code === 93 /* ']' */ ||\n      code === 125 /* '}' */ ||\n      (code === 46 /* '.' */ && selector.charCodeAt(end - 1) !== 92) /* '\\' */ ||\n      (code === 92 /* '\\' */ && isAlpha(prev))\n    ) {\n      break;\n    }\n\n    prev = code;\n  }\n\n  if (end < begin) {\n    // Full selector is safe\n    const skipFirstToken: boolean = selector.charCodeAt(1) !== 94; /* '^' */\n    const skipLastToken: boolean = selector.charCodeAt(selector.length - 1) !== 36; /* '$' */\n    tokenizeInPlace(selector.slice(1, selector.length - 1), skipFirstToken, skipLastToken, tokens);\n  } else {\n    // Tokenize prefix\n    if (begin > 1) {\n      tokenizeInPlace(\n        selector.slice(1, begin),\n        selector.charCodeAt(1) !== 94 /* '^' */, // skipFirstToken\n        true,\n        tokens,\n      );\n    }\n\n    // Tokenize suffix\n    if (end < selector.length - 1) {\n      tokenizeInPlace(\n        selector.slice(end + 1, selector.length - 1),\n        true,\n        selector.charCodeAt(selector.length - 1) !== 94 /* '^' */, // skipLastToken\n        tokens,\n      );\n    }\n  }\n}\n\nexport function binSearch(arr: Uint32Array, elt: number): number {\n  if (arr.length === 0) {\n    return -1;\n  }\n\n  let low = 0;\n  let high = arr.length - 1;\n\n  while (low <= high) {\n    const mid = (low + high) >>> 1;\n    const midVal = arr[mid];\n    if (midVal < elt) {\n      low = mid + 1;\n    } else if (midVal > elt) {\n      high = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n}\n\nexport function binLookup(arr: Uint32Array, elt: number): boolean {\n  return binSearch(arr, elt) !== -1;\n}\n\nconst hasUnicodeRe = /[^\\u0000-\\u00ff]/;\nexport function hasUnicode(str: string): boolean {\n  return hasUnicodeRe.test(str);\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport guessUrlType from '@remusao/guess-url-type';\nimport { parse } from 'tldts-experimental';\n\nimport { EMPTY_UINT32_ARRAY } from './data-view';\nimport { TOKENS_BUFFER } from './tokens-buffer';\nimport { fastHash, tokenizeNoSkipInPlace, HASH_SEED } from './utils';\n\nconst TLDTS_OPTIONS = {\n  extractHostname: true,\n  mixedInputs: false,\n  validateHostname: false,\n};\n\n// From: https://github.com/electron/electron/blob/34c4c8d5088fa183f56baea28809de6f2a427e02/shell/browser/net/atom_network_delegate.cc#L30\nexport type ElectronRequestType =\n  | 'mainFrame'\n  | 'subFrame'\n  | 'stylesheet'\n  | 'script'\n  | 'image'\n  | 'font'\n  | 'object'\n  | 'xhr'\n  | 'ping'\n  | 'cspReport'\n  | 'media'\n  | 'webSocket'\n  | 'other';\n\n// From: https://github.com/DefinitelyTyped/DefinitelyTyped/blob/7f3549ed0050f2ca8d7fcc00c33eba21f0cbdd88/types/puppeteer/index.d.ts#L945\nexport type PuppeteerRequestType =\n  | 'cspviolationreport'\n  | 'document'\n  | 'eventsource'\n  | 'fetch'\n  | 'font'\n  | 'image'\n  | 'manifest'\n  | 'media'\n  | 'other'\n  | 'preflight'\n  | 'script'\n  | 'signedexchange'\n  | 'stylesheet'\n  | 'texttrack'\n  | 'websocket'\n  | 'xhr';\n\nexport type PlaywrightRequestType =\n  | 'document'\n  | 'eventsource'\n  | 'fetch'\n  | 'font'\n  | 'image'\n  | 'manifest'\n  | 'media'\n  | 'other'\n  | 'script'\n  | 'stylesheet'\n  | 'texttrack'\n  | 'websocket'\n  | 'xhr';\n\n// From: https://developer.chrome.com/extensions/webRequest#type-ResourceType\nexport type WebRequestTypeChrome = chrome.webRequest.ResourceType;\n\n// From: https://developer.mozilla.org/en-US/docs/Mozilla/Add-ons/WebExtensions/API/webRequest/ResourceType#Type\nexport type WebRequestTypeFirefox = browser.webRequest.ResourceType;\n\n// The set of WebRequest types is the union of both Firefox and Chrome\nexport type WebRequestType = WebRequestTypeChrome | WebRequestTypeFirefox;\n\n// The set of supported types is the union of WebRequest\nexport type RequestType =\n  | WebRequestType\n  | ElectronRequestType\n  | PuppeteerRequestType\n  | PlaywrightRequestType;\n\nexport const NORMALIZED_TYPE_TOKEN: { [s in RequestType]: number } = {\n  beacon: fastHash('type:beacon'),\n  cspReport: fastHash('type:csp'),\n  csp_report: fastHash('type:csp'),\n  cspviolationreport: fastHash('type:cspviolationreport'),\n  document: fastHash('type:document'),\n  eventsource: fastHash('type:other'),\n  fetch: fastHash('type:xhr'),\n  font: fastHash('type:font'),\n  image: fastHash('type:image'),\n  imageset: fastHash('type:image'),\n  mainFrame: fastHash('type:document'),\n  main_frame: fastHash('type:document'),\n  manifest: fastHash('type:other'),\n  media: fastHash('type:media'),\n  object: fastHash('type:object'),\n  object_subrequest: fastHash('type:object'),\n  other: fastHash('type:other'),\n  ping: fastHash('type:ping'),\n  preflight: fastHash('type:preflight'),\n  script: fastHash('type:script'),\n  signedexchange: fastHash('type:signedexchange'),\n  speculative: fastHash('type:other'),\n  stylesheet: fastHash('type:stylesheet'),\n  subFrame: fastHash('type:subdocument'),\n  sub_frame: fastHash('type:subdocument'),\n  texttrack: fastHash('type:other'),\n  webSocket: fastHash('type:websocket'),\n  web_manifest: fastHash('type:other'),\n  websocket: fastHash('type:websocket'),\n  xhr: fastHash('type:xhr'),\n  xml_dtd: fastHash('type:other'),\n  xmlhttprequest: fastHash('type:xhr'),\n  xslt: fastHash('type:other'),\n};\n\nexport function hashHostnameBackward(hostname: string): number {\n  let hash = HASH_SEED;\n  for (let j = hostname.length - 1; j >= 0; j -= 1) {\n    hash = (hash * 33) ^ hostname.charCodeAt(j);\n  }\n  return hash >>> 0;\n}\n\nexport function getHashesFromLabelsBackward(\n  hostname: string,\n  end: number,\n  startOfDomain: number,\n): Uint32Array {\n  TOKENS_BUFFER.reset();\n  let hash = HASH_SEED;\n\n  // Compute hash backward, label per label\n  for (let i = end - 1; i >= 0; i -= 1) {\n    const code = hostname.charCodeAt(i);\n\n    // Process label\n    if (code === 46 /* '.' */ && i < startOfDomain) {\n      TOKENS_BUFFER.push(hash >>> 0);\n    }\n\n    // Update hash\n    hash = (hash * 33) ^ code;\n  }\n\n  TOKENS_BUFFER.push(hash >>> 0);\n  return TOKENS_BUFFER.slice();\n}\n\n/**\n * Given a hostname and its domain, return the hostname without the public\n * suffix. We know that the domain, with one less label on the left, will be a\n * the public suffix; and from there we know which trailing portion of\n * `hostname` we should remove.\n */\nexport function getHostnameWithoutPublicSuffix(hostname: string, domain: string): string | null {\n  let hostnameWithoutPublicSuffix: string | null = null;\n\n  const indexOfDot = domain.indexOf('.');\n  if (indexOfDot !== -1) {\n    const publicSuffix = domain.slice(indexOfDot + 1);\n    hostnameWithoutPublicSuffix = hostname.slice(0, -publicSuffix.length - 1);\n  }\n\n  return hostnameWithoutPublicSuffix;\n}\n\nexport function getEntityHashesFromLabelsBackward(hostname: string, domain: string): Uint32Array {\n  const hostnameWithoutPublicSuffix = getHostnameWithoutPublicSuffix(hostname, domain);\n  if (hostnameWithoutPublicSuffix !== null) {\n    return getHashesFromLabelsBackward(\n      hostnameWithoutPublicSuffix,\n      hostnameWithoutPublicSuffix.length,\n      hostnameWithoutPublicSuffix.length,\n    );\n  }\n  return EMPTY_UINT32_ARRAY;\n}\n\nexport function getHostnameHashesFromLabelsBackward(\n  hostname: string,\n  domain: string,\n): Uint32Array {\n  return getHashesFromLabelsBackward(hostname, hostname.length, hostname.length - domain.length);\n}\n\nfunction isThirdParty(\n  hostname: string,\n  domain: string,\n  sourceHostname: string,\n  sourceDomain: string,\n  type: RequestType,\n): boolean {\n  if (type === 'main_frame' || type === 'mainFrame') {\n    return false;\n  } else if (domain.length !== 0 && sourceDomain.length !== 0) {\n    return domain !== sourceDomain;\n  } else if (domain.length !== 0 && sourceHostname.length !== 0) {\n    return domain !== sourceHostname;\n  } else if (sourceDomain.length !== 0 && hostname.length !== 0) {\n    return hostname !== sourceDomain;\n  }\n\n  return false;\n}\n\nexport interface RequestInitialization {\n  requestId: string;\n  tabId: number;\n\n  url: string;\n  hostname: string;\n  domain: string;\n\n  sourceUrl: string;\n  sourceHostname: string;\n  sourceDomain: string;\n\n  type: RequestType;\n\n  // Optional attribute referencing the original request details used to create\n  // the Request instance. This can be for example:\n  // * Electron.OnHeadersReceivedListenerDetails\n  // * Electron.OnBeforeRequestListenerDetails\n  // * puppeteer.Request\n  // * webRequest details\n  _originalRequestDetails: any | undefined;\n}\n\nexport default class Request {\n  /**\n   * Create an instance of `Request` from raw request details.\n   */\n  public static fromRawDetails({\n    requestId = '0',\n    tabId = 0,\n    url = '',\n    hostname,\n    domain,\n    sourceUrl = '',\n    sourceHostname,\n    sourceDomain,\n    type = 'main_frame',\n    _originalRequestDetails,\n  }: Partial<RequestInitialization>): Request {\n    url = url.toLowerCase();\n\n    if (hostname === undefined || domain === undefined) {\n      const parsed = parse(url, TLDTS_OPTIONS);\n      hostname = hostname || parsed.hostname || '';\n      domain = domain || parsed.domain || '';\n    }\n\n    // Initialize source URL\n    if (sourceHostname === undefined || sourceDomain === undefined) {\n      const parsed = parse(sourceHostname || sourceDomain || sourceUrl, TLDTS_OPTIONS);\n      sourceHostname = sourceHostname || parsed.hostname || '';\n      sourceDomain = sourceDomain || parsed.domain || sourceHostname || '';\n    }\n\n    return new Request({\n      requestId,\n      tabId,\n\n      domain,\n      hostname,\n      url,\n\n      sourceDomain,\n      sourceHostname,\n      sourceUrl,\n\n      type,\n\n      _originalRequestDetails,\n    });\n  }\n\n  public readonly _originalRequestDetails: any | undefined;\n\n  public type: RequestType;\n  public readonly isHttp: boolean;\n  public readonly isHttps: boolean;\n  public readonly isSupported: boolean;\n  public readonly isFirstParty: boolean;\n  public readonly isThirdParty: boolean;\n\n  public readonly id: string;\n  public readonly tabId: number;\n  public readonly url: string;\n  public readonly hostname: string;\n  public readonly domain: string;\n\n  public readonly sourceHostnameHashes: Uint32Array;\n  public readonly sourceEntityHashes: Uint32Array;\n\n  // Lazy attributes\n  private tokens: Uint32Array | undefined = undefined;\n  private hostnameHashes: Uint32Array | undefined = undefined;\n  private entityHashes: Uint32Array | undefined = undefined;\n\n  constructor({\n    requestId,\n    tabId,\n\n    type,\n\n    domain,\n    hostname,\n    url,\n\n    sourceDomain,\n    sourceHostname,\n\n    _originalRequestDetails,\n  }: RequestInitialization) {\n    this._originalRequestDetails = _originalRequestDetails;\n    this.id = requestId;\n    this.tabId = tabId;\n    this.type = type;\n\n    this.url = url;\n    this.hostname = hostname;\n    this.domain = domain;\n\n    this.sourceHostnameHashes =\n      sourceHostname.length === 0\n        ? EMPTY_UINT32_ARRAY\n        : getHostnameHashesFromLabelsBackward(sourceHostname, sourceDomain);\n\n    this.sourceEntityHashes =\n      sourceHostname.length === 0\n        ? EMPTY_UINT32_ARRAY\n        : getEntityHashesFromLabelsBackward(sourceHostname, sourceDomain);\n\n    // Decide on partiness\n    this.isThirdParty = isThirdParty(hostname, domain, sourceHostname, sourceDomain, type);\n    this.isFirstParty = !this.isThirdParty;\n\n    // Check protocol\n    this.isSupported = true;\n    if (this.type === 'websocket' || this.url.startsWith('ws:') || this.url.startsWith('wss:')) {\n      this.isHttp = false;\n      this.isHttps = false;\n      this.type = 'websocket';\n      this.isSupported = true;\n    } else if (this.url.startsWith('http:')) {\n      this.isHttp = true;\n      this.isHttps = false;\n    } else if (this.url.startsWith('https:')) {\n      this.isHttps = true;\n      this.isHttp = false;\n    } else if (this.url.startsWith('data:')) {\n      this.isHttp = false;\n      this.isHttps = false;\n\n      // Only keep prefix of URL\n      const indexOfComa = this.url.indexOf(',');\n      if (indexOfComa !== -1) {\n        this.url = this.url.slice(0, indexOfComa);\n      }\n    } else {\n      this.isHttp = false;\n      this.isHttps = false;\n      this.isSupported = false;\n    }\n  }\n\n  public getHostnameHashes(): Uint32Array {\n    if (this.hostnameHashes === undefined) {\n      this.hostnameHashes =\n        this.hostname.length === 0\n          ? EMPTY_UINT32_ARRAY\n          : getHostnameHashesFromLabelsBackward(this.hostname, this.domain);\n    }\n\n    return this.hostnameHashes;\n  }\n\n  public getEntityHashes(): Uint32Array {\n    if (this.entityHashes === undefined) {\n      this.entityHashes =\n        this.hostname.length === 0\n          ? EMPTY_UINT32_ARRAY\n          : getEntityHashesFromLabelsBackward(this.hostname, this.domain);\n    }\n\n    return this.entityHashes;\n  }\n\n  public getTokens(): Uint32Array {\n    if (this.tokens === undefined) {\n      TOKENS_BUFFER.reset();\n\n      for (const hash of this.sourceHostnameHashes) {\n        TOKENS_BUFFER.push(hash);\n      }\n\n      // Add token corresponding to request type\n      TOKENS_BUFFER.push(NORMALIZED_TYPE_TOKEN[this.type]);\n\n      tokenizeNoSkipInPlace(this.url, TOKENS_BUFFER);\n\n      this.tokens = TOKENS_BUFFER.slice();\n    }\n\n    return this.tokens;\n  }\n\n  public isMainFrame(): boolean {\n    return this.type === 'main_frame' || this.type === 'mainFrame';\n  }\n\n  public isSubFrame(): boolean {\n    return this.type === 'sub_frame' || this.type === 'subFrame';\n  }\n\n  /**\n   * Calling this method will attempt to guess the type of a request based on\n   * information found in `url` only. This can be useful to try and fine-tune\n   * the type of a Request when it is not otherwise available or if it was\n   * inferred as 'other'.\n   */\n  public guessTypeOfRequest(): RequestType {\n    const currentType = this.type;\n    this.type = guessUrlType(this.url);\n    if (currentType !== this.type) {\n      this.tokens = undefined;\n    }\n    return this.type;\n  }\n}\n\n/**\n * Kept for backward compatibility. The recommended way is to call\n * `Request.fromRawDetails` directly.\n */\nexport function makeRequest(details: Partial<RequestInitialization>): Request {\n  return Request.fromRawDetails(details);\n}\n",null,null,"/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { hashHostnameBackward } from '../request';\nimport { toASCII } from '../punycode';\nimport { StaticDataView, sizeOfUint32Array } from '../data-view';\nimport { binLookup, hasUnicode } from '../utils';\n\nexport class Domains {\n  public static parse(parts: string[]): Domains | undefined {\n    if (parts.length === 0) {\n      return undefined;\n    }\n\n    const entities: number[] = [];\n    const notEntities: number[] = [];\n    const hostnames: number[] = [];\n    const notHostnames: number[] = [];\n\n    for (let hostname of parts) {\n      if (hasUnicode(hostname)) {\n        hostname = toASCII(hostname);\n      }\n\n      const negation: boolean = hostname.charCodeAt(0) === 126; /* '~' */\n      const entity: boolean =\n        hostname.charCodeAt(hostname.length - 1) === 42 /* '*' */ &&\n        hostname.charCodeAt(hostname.length - 2) === 46; /* '.' */\n\n      const start: number = negation ? 1 : 0;\n      const end: number = entity ? hostname.length - 2 : hostname.length;\n\n      const hash = hashHostnameBackward(\n        negation === true || entity === true ? hostname.slice(start, end) : hostname,\n      );\n\n      if (negation) {\n        if (entity) {\n          notEntities.push(hash);\n        } else {\n          notHostnames.push(hash);\n        }\n      } else {\n        if (entity) {\n          entities.push(hash);\n        } else {\n          hostnames.push(hash);\n        }\n      }\n    }\n\n    return new Domains({\n      entities: entities.length !== 0 ? new Uint32Array(entities).sort() : undefined,\n      hostnames: hostnames.length !== 0 ? new Uint32Array(hostnames).sort() : undefined,\n      notEntities: notEntities.length !== 0 ? new Uint32Array(notEntities).sort() : undefined,\n      notHostnames: notHostnames.length !== 0 ? new Uint32Array(notHostnames).sort() : undefined,\n    });\n  }\n\n  public static deserialize(buffer: StaticDataView): Domains {\n    const optionalParts = buffer.getUint8();\n\n    // The order of these fields should be the same as when we serialize them.\n    return new Domains({\n      entities: (optionalParts & 1) === 1 ? buffer.getUint32Array() : undefined,\n      hostnames: (optionalParts & 2) === 2 ? buffer.getUint32Array() : undefined,\n      notEntities: (optionalParts & 4) === 4 ? buffer.getUint32Array() : undefined,\n      notHostnames: (optionalParts & 8) === 8 ? buffer.getUint32Array() : undefined,\n    });\n  }\n\n  // hostnames\n  public readonly entities: Uint32Array | undefined;\n  public readonly hostnames: Uint32Array | undefined;\n\n  // Exceptions\n  public readonly notEntities: Uint32Array | undefined;\n  public readonly notHostnames: Uint32Array | undefined;\n\n  constructor({\n    entities,\n    hostnames,\n    notEntities,\n    notHostnames,\n  }: {\n    entities: Uint32Array | undefined;\n    hostnames: Uint32Array | undefined;\n    notEntities: Uint32Array | undefined;\n    notHostnames: Uint32Array | undefined;\n  }) {\n    // Hostname constraints\n    this.entities = entities;\n    this.hostnames = hostnames;\n\n    // Hostname exceptions\n    this.notEntities = notEntities;\n    this.notHostnames = notHostnames;\n  }\n\n  public updateId(hash: number): number {\n    const { hostnames, entities, notHostnames, notEntities } = this;\n\n    if (hostnames !== undefined) {\n      for (const hostname of hostnames) {\n        hash = (hash * 33) ^ hostname;\n      }\n    }\n\n    if (entities !== undefined) {\n      for (const entity of entities) {\n        hash = (hash * 33) ^ entity;\n      }\n    }\n\n    if (notHostnames !== undefined) {\n      for (const notHostname of notHostnames) {\n        hash = (hash * 33) ^ notHostname;\n      }\n    }\n\n    if (notEntities !== undefined) {\n      for (const notEntity of notEntities) {\n        hash = (hash * 33) ^ notEntity;\n      }\n    }\n\n    return hash;\n  }\n\n  public serialize(buffer: StaticDataView): void {\n    // Mandatory fields\n    const index = buffer.getPos();\n    buffer.pushUint8(0);\n\n    // This bit-mask indicates which optional parts of the filter were serialized.\n    let optionalParts = 0;\n\n    if (this.entities !== undefined) {\n      optionalParts |= 1;\n      buffer.pushUint32Array(this.entities);\n    }\n\n    if (this.hostnames !== undefined) {\n      optionalParts |= 2;\n      buffer.pushUint32Array(this.hostnames);\n    }\n\n    if (this.notEntities !== undefined) {\n      optionalParts |= 4;\n      buffer.pushUint32Array(this.notEntities);\n    }\n\n    if (this.notHostnames !== undefined) {\n      optionalParts |= 8;\n      buffer.pushUint32Array(this.notHostnames);\n    }\n\n    buffer.setByte(index, optionalParts);\n  }\n\n  public getSerializedSize(): number {\n    let estimate: number = 1; // optional parts (1 byte)\n\n    if (this.entities !== undefined) {\n      estimate += sizeOfUint32Array(this.entities);\n    }\n\n    if (this.hostnames !== undefined) {\n      estimate += sizeOfUint32Array(this.hostnames);\n    }\n\n    if (this.notHostnames !== undefined) {\n      estimate += sizeOfUint32Array(this.notHostnames);\n    }\n\n    if (this.notEntities !== undefined) {\n      estimate += sizeOfUint32Array(this.notEntities);\n    }\n\n    return estimate;\n  }\n\n  public match(hostnameHashes: Uint32Array, entityHashes: Uint32Array): boolean {\n    // Check if `hostname` is blacklisted\n    if (this.notHostnames !== undefined) {\n      for (const hash of hostnameHashes) {\n        if (binLookup(this.notHostnames, hash)) {\n          return false;\n        }\n      }\n    }\n\n    // Check if `hostname` is blacklisted by *entity*\n    if (this.notEntities !== undefined) {\n      for (const hash of entityHashes) {\n        if (binLookup(this.notEntities, hash)) {\n          return false;\n        }\n      }\n    }\n\n    // Check if `hostname` is allowed\n    if (this.hostnames !== undefined || this.entities !== undefined) {\n      if (this.hostnames !== undefined) {\n        for (const hash of hostnameHashes) {\n          if (binLookup(this.hostnames, hash)) {\n            return true;\n          }\n        }\n      }\n\n      if (this.entities !== undefined) {\n        for (const hash of entityHashes) {\n          if (binLookup(this.entities, hash)) {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    }\n\n    return true;\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\n// This module implements an extremely efficient stream HTML filtering engine\n// which is able to consume an HTML document over time and filter part of it\n// using adblocker selectors.\n\nexport type HTMLSelector = readonly ['script', readonly string[]];\n\nexport function extractHTMLSelectorFromRule(rule: string): HTMLSelector | undefined {\n  if (rule.startsWith('^script') === false) {\n    return undefined;\n  }\n\n  const prefix = ':has-text(';\n  const selectors: string[] = [];\n\n  let index = 7;\n  // ^script:has-text\n  //        ^ 7\n\n  // Prepare for finding one or more ':has-text(' selectors in a row\n  while (rule.startsWith(prefix, index)) {\n    index += prefix.length;\n    let currentParsingDepth = 1;\n    const startOfSelectorIndex = index;\n    let prev = -1; // previous character\n    for (; index < rule.length && currentParsingDepth !== 0; index += 1) {\n      const code = rule.charCodeAt(index);\n\n      if (prev !== 92 /* '\\' */) {\n        if (code === 40 /* '(' */) {\n          currentParsingDepth += 1;\n        }\n\n        if (code === 41 /* ')' */) {\n          currentParsingDepth -= 1;\n        }\n      }\n\n      prev = code;\n    }\n\n    selectors.push(rule.slice(startOfSelectorIndex, index - 1));\n  }\n\n  if (index !== rule.length) {\n    return undefined;\n  }\n\n  return ['script', selectors];\n}\n\nexport function extractTagsFromHtml(\n  html: string,\n  tag: string,\n): [[number, string][], string, string] {\n  const tags: [number, string][] = [];\n  const prefix = `<${tag}`;\n  const suffix = `</${tag}>`;\n\n  // Keep track of the beginning of current identified tag\n  let index = html.indexOf(prefix);\n  // Keep tracks of index immediately following last extracted tag\n  let endOfLastTag = 0;\n\n  while (index !== -1) {\n    // Find index of end of current tag. If we do not find it, it could be\n    // because it will come in the next chunk and we should try parsing it\n    // again then.\n    const endOfTagIndex = html.indexOf('>', index + prefix.length);\n    if (endOfTagIndex === -1) {\n      return [tags, html.slice(0, index), html.slice(index)];\n    }\n\n    // Handle short tag form <tag/> which will not have a closing tag.\n    if (html.charCodeAt(endOfTagIndex - 1) === 47 /* '/' */) {\n      endOfLastTag = endOfTagIndex + 1;\n      tags.push([index, html.slice(index, endOfLastTag)]);\n    } else {\n      // Find index of closing tag '</tag>'. If we do not find it, again, it\n      // could mean that it will come in next chunk and we need to try parsing\n      // it again with more input.\n      const indexOfClosingTag = html.indexOf(suffix, endOfTagIndex);\n      if (indexOfClosingTag === -1) {\n        return [tags, html.slice(0, index), html.slice(index)];\n      }\n\n      tags.push([index, html.slice(index, indexOfClosingTag + suffix.length)]);\n      endOfLastTag = indexOfClosingTag + suffix.length;\n    }\n\n    index = html.indexOf(prefix, endOfLastTag);\n  }\n\n  // Make sure we consume as much input as possible so that we do not parse the\n  // same portion of HTML again next time and we can stream chunks as early as\n  // possible.\n  //\n  // We check if there is at least one '<' char after the end of the last\n  // extracted tag; this would indicate that the next chunk might contain the\n  // remaining of a valid tag. We then look up to N characters after this '<'\n  // character, where N is the size of 'prefix'. The rational is that if we\n  // reached this part of the code, then it cannot be a match otherwise we\n  // would have returned earlier (from the loop).\n  let lastClosingTagIndex = html.lastIndexOf('>');\n  if (lastClosingTagIndex === -1) {\n    lastClosingTagIndex = endOfLastTag;\n  }\n\n  const indexOfNextTag = html.indexOf('<', lastClosingTagIndex);\n  // If no '<' in the remaining of input, then it means we can count this chunk\n  // as fully parsed (i.e.: next chunk can be parsed independently without\n  // missing a tag which would start in this one).\n  if (indexOfNextTag === -1) {\n    return [tags, html, ''];\n  }\n\n  // In case of a partial tag ending this 'html' chunk. Then check if we have\n  // enough information to discard it already based on the kind of tags we are\n  // looking for.\n  if (\n    html.length - indexOfNextTag >= prefix.length ||\n    prefix.startsWith(html.slice(indexOfNextTag)) === false\n  ) {\n    return [tags, html, ''];\n  }\n\n  return [tags, html.slice(0, indexOfNextTag), html.slice(indexOfNextTag)];\n}\n\ntype Patterns = readonly [readonly string[], readonly RegExp[]][];\n\nexport function extractSelectorsFromRules(filter: HTMLSelector[]): Patterns {\n  const patterns: [string[], RegExp[]][] = [];\n\n  for (const [_, selectors] of filter) {\n    const plainPatterns: string[] = [];\n    const regexpPatterns: RegExp[] = [];\n\n    for (const selector of selectors) {\n      if (selector.charCodeAt(0) === 47 /* '/' */) {\n        if (selector.endsWith('/')) {\n          regexpPatterns.push(new RegExp(selector.slice(1, -1)));\n        } else if (selector.endsWith('/i')) {\n          regexpPatterns.push(new RegExp(selector.slice(1, -2), 'i'));\n        }\n      } else {\n        plainPatterns.push(selector);\n      }\n    }\n\n    if (plainPatterns.length !== 0 || regexpPatterns.length !== 0) {\n      patterns.push([plainPatterns, regexpPatterns]);\n    }\n  }\n\n  return patterns;\n}\n\n/**\n * Check if `tag` should be removed from HTML based on `plainPatterns` and\n * `regexpPatterns`. For a tag to be removed, all elements from `plainPatterns`\n * and `regexpPatterns` must match.\n */\nfunction tagShouldBeRemoved(\n  tag: string,\n  plainPatterns: readonly string[],\n  regexpPatterns: readonly RegExp[],\n): boolean {\n  for (const pattern of plainPatterns) {\n    if (tag.indexOf(pattern) === -1) {\n      return false;\n    }\n  }\n\n  for (const pattern of regexpPatterns) {\n    if (pattern.test(tag) === false) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function selectTagsToRemove(\n  patterns: Patterns,\n  tags: [number, string][],\n): [number, string][] {\n  const toRemove: [number, string][] = [];\n\n  for (const tag of tags) {\n    for (const [plainPatterns, regexpPatterns] of patterns) {\n      if (tagShouldBeRemoved(tag[1], plainPatterns, regexpPatterns)) {\n        toRemove.push(tag);\n        break;\n      }\n    }\n  }\n\n  return toRemove;\n}\n\nexport function removeTagsFromHtml(html: string, toRemove: [number, string][]): string {\n  if (toRemove.length === 0) {\n    return html;\n  }\n\n  let filteredHtml = html;\n  toRemove.reverse(); // make sure to remove from last to first tag (preserve indices)\n  for (const [index, tag] of toRemove) {\n    filteredHtml = filteredHtml.slice(0, index) + filteredHtml.slice(index + tag.length);\n  }\n\n  return filteredHtml;\n}\n\nexport default class StreamingHtmlFilter {\n  private buffer: string;\n  private readonly patterns: Patterns;\n\n  constructor(selectors: HTMLSelector[]) {\n    this.buffer = '';\n    this.patterns = extractSelectorsFromRules(selectors);\n  }\n\n  public flush(): string {\n    return this.buffer;\n  }\n\n  public write(chunk: string): string {\n    // If there are no valid selectors, abort.\n    if (this.patterns.length === 0) {\n      return chunk;\n    }\n\n    // If given an empty string, abort.\n    if (chunk.length === 0) {\n      return chunk;\n    }\n\n    // Accumulate buffer + new data\n    this.buffer += chunk;\n\n    // Parse tags from `this.buffer`\n    const [tags, parsed, rest] = extractTagsFromHtml(this.buffer, 'script');\n    this.buffer = rest;\n\n    // If no tags were found, just return the parsed version\n    if (tags.length === 0) {\n      return parsed;\n    }\n\n    // Perform tags filtering using `this.patterns` and `this.regexps`.\n    return removeTagsFromHtml(parsed, selectTagsToRemove(this.patterns, tags));\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport {\n  AST,\n  classifySelector,\n  SelectorType,\n  parse as parseCssSelector,\n} from '@cliqz/adblocker-extended-selectors';\n\nimport { Domains } from '../engine/domains';\nimport {\n  EMPTY_UINT32_ARRAY,\n  StaticDataView,\n  sizeOfASCII,\n  sizeOfCosmeticSelector,\n  sizeOfUTF8,\n  sizeOfRawCosmetic,\n} from '../data-view';\nimport {\n  getHostnameHashesFromLabelsBackward,\n  getEntityHashesFromLabelsBackward,\n} from '../request';\nimport {\n  fastHash,\n  fastHashBetween,\n  fastStartsWithFrom,\n  getBit,\n  hasUnicode,\n  setBit,\n  tokenize,\n} from '../utils';\nimport IFilter from './interface';\nimport { HTMLSelector, extractHTMLSelectorFromRule } from '../html-filtering';\n\nconst EMPTY_TOKENS: [Uint32Array] = [EMPTY_UINT32_ARRAY];\nexport const DEFAULT_HIDDING_STYLE: string = 'display: none !important;';\n\n/**\n * Given a `selector` starting with either '#' or '.' check if what follows is\n * a simple CSS selector: /^-?[_a-zA-Z]+[_a-zA-Z0-9-]*$/\n */\nfunction isSimpleSelector(selector: string): boolean {\n  for (let i = 1; i < selector.length; i += 1) {\n    const code: number = selector.charCodeAt(i);\n    if (\n      !(\n        code === 45 /* '-' */ ||\n        code === 95 /* '_' */ ||\n        (code >= 48 && code <= 57) /* [0-9] */ ||\n        (code >= 65 && code <= 90) /* [A-Z] */ ||\n        (code >= 97 && code <= 122)\n      ) /* [a-z] */\n    ) {\n      if (i < selector.length - 1) {\n        // Check if what follows is a ' >' or ' ~' or ' +', in which case we\n        // also consider it a simple selector and the token this filter can be\n        // indexed with is the first selector.\n        const nextCode = selector.charCodeAt(i + 1);\n        if (\n          code === 91 /* '[' */ ||\n          code === 46 /* '.' */ ||\n          code === 58 /* ':' */ ||\n          (code === 32 /* ' ' */ &&\n            (nextCode === 62 /* '>' */ ||\n              nextCode === 43 /* '+' */ ||\n              nextCode === 126 /* '~' */ ||\n              nextCode === 46 /* '.' */ ||\n              nextCode === 35)) /* '#' */\n        ) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Given a `selector` starting with either 'a[' or '[', check if what follows\n * is a simple href attribute selector of the form: 'href^=' or 'href*='.\n */\nfunction isSimpleHrefSelector(selector: string, start: number): boolean {\n  return (\n    selector.startsWith('href^=\"', start) ||\n    selector.startsWith('href*=\"', start) ||\n    selector.startsWith('href=\"', start)\n  );\n}\n\n/**\n * Validate CSS selector. There is a fast path for simple selectors (e.g.: #foo\n * or .bar) which are the most common case. For complex ones, we rely on\n * `Element.matches` (if available).\n */\nconst isValidCss = (() => {\n  const div =\n    typeof document !== 'undefined'\n      ? document.createElement('div')\n      : {\n          matches: () => {\n            /* noop */\n          },\n        };\n  const matches = (selector: string): void | boolean => div.matches(selector);\n  const validSelectorRe = /^[#.]?[\\w-.]+$/;\n\n  return function isValidCssImpl(selector: string): boolean {\n    if (validSelectorRe.test(selector)) {\n      return true;\n    }\n\n    try {\n      matches(selector);\n    } catch (ex) {\n      return false;\n    }\n\n    return true;\n  };\n})();\n\n/**\n * Masks used to store options of cosmetic filters in a bitmask.\n */\nconst enum COSMETICS_MASK {\n  unhide = 1 << 0,\n  scriptInject = 1 << 1,\n  isUnicode = 1 << 2,\n  isClassSelector = 1 << 3,\n  isIdSelector = 1 << 4,\n  isHrefSelector = 1 << 5,\n  remove = 1 << 6,\n  extended = 1 << 7,\n}\n\nfunction computeFilterId(\n  mask: number,\n  selector: string | undefined,\n  domains: Domains | undefined,\n  style: string | undefined,\n): number {\n  let hash = (5437 * 33) ^ mask;\n\n  if (selector !== undefined) {\n    for (let i = 0; i < selector.length; i += 1) {\n      hash = (hash * 33) ^ selector.charCodeAt(i);\n    }\n  }\n\n  if (domains !== undefined) {\n    hash = domains.updateId(hash);\n  }\n\n  if (style !== undefined) {\n    for (let i = 0; i < style.length; i += 1) {\n      hash = (hash * 33) ^ style.charCodeAt(i);\n    }\n  }\n\n  return hash >>> 0;\n}\n\n/***************************************************************************\n *  Cosmetic filters parsing\n * ************************************************************************ */\n\nexport default class CosmeticFilter implements IFilter {\n  /**\n   * Given a line that we know contains a cosmetic filter, create a CosmeticFiler\n   * instance out of it. This function should be *very* efficient, as it will be\n   * used to parse tens of thousands of lines.\n   */\n  public static parse(line: string, debug: boolean = false): CosmeticFilter | null {\n    // Mask to store attributes. Each flag (unhide, scriptInject, etc.) takes\n    // only 1 bit at a specific offset defined in COSMETICS_MASK.\n    // cf: COSMETICS_MASK for the offset of each property\n    let mask = 0;\n    let selector: string | undefined;\n    let domains: Domains | undefined;\n    let style: string | undefined;\n    const sharpIndex = line.indexOf('#');\n\n    // Start parsing the line\n    const afterSharpIndex = sharpIndex + 1;\n    let suffixStartIndex = afterSharpIndex + 1;\n\n    // hostname1,hostname2#?#.selector\n    // hostname1,hostname2#@#.selector\n    //                    ^^ ^\n    //                    || |\n    //                    || suffixStartIndex\n    //                    |afterSharpIndex\n    //                    sharpIndex\n\n    // Check if unhide\n    if (line.length > afterSharpIndex) {\n      if (line[afterSharpIndex] === '@') {\n        mask = setBit(mask, COSMETICS_MASK.unhide);\n        suffixStartIndex += 1;\n      } else if (line[afterSharpIndex] === '?') {\n        suffixStartIndex += 1;\n      }\n    }\n\n    if (suffixStartIndex >= line.length) {\n      return null;\n    }\n\n    // Parse hostnames and entitites as well as their negations.\n    //\n    // - ~hostname##.selector\n    // - hostname##.selector\n    // - entity.*##.selector\n    // - ~entity.*##.selector\n    //\n    // Each kind will have its own Uint32Array containing hashes, sorted by\n    // number of labels considered. This allows a compact representation of\n    // hostnames and fast matching without any string copy.\n    if (sharpIndex > 0) {\n      domains = Domains.parse(line.slice(0, sharpIndex).split(','));\n    }\n\n    if (line.endsWith(':remove()')) {\n      // ##selector:remove()\n      mask = setBit(mask, COSMETICS_MASK.remove);\n      mask = setBit(mask, COSMETICS_MASK.extended);\n      line = line.slice(0, -9);\n    } else if (\n      line.length - suffixStartIndex >= 8 &&\n      line.endsWith(')') &&\n      line.indexOf(':style(', suffixStartIndex) !== -1\n    ) {\n      // ##selector:style(...)\n      const indexOfStyle = line.indexOf(':style(', suffixStartIndex);\n      style = line.slice(indexOfStyle + 7, -1);\n      line = line.slice(0, indexOfStyle);\n    }\n\n    // Deal with HTML filters\n    if (line.charCodeAt(suffixStartIndex) === 94 /* '^' */) {\n      if (\n        fastStartsWithFrom(line, 'script:has-text(', suffixStartIndex + 1) === false ||\n        line.charCodeAt(line.length - 1) !== 41 /* ')' */\n      ) {\n        return null;\n      }\n\n      // NOTE: currently only ^script:has-text(...) is supported.\n      //\n      //   ^script:has-text(selector)\n      //   ^                         ^\n      //   |                         |\n      //   |                         |\n      //   |                         line.length\n      //   |\n      //   suffixStartIndex\n      //\n      selector = line.slice(suffixStartIndex, line.length);\n      if (extractHTMLSelectorFromRule(selector) === undefined) {\n        return null;\n      }\n    } else if (\n      line.length - suffixStartIndex > 4 &&\n      line.charCodeAt(suffixStartIndex) === 43 /* '+' */ &&\n      fastStartsWithFrom(line, '+js(', suffixStartIndex)\n    ) {\n      // Generic scriptlets are invalid, unless they are un-hide\n      if (\n        (domains === undefined ||\n          (domains.hostnames === undefined && domains.entities === undefined)) &&\n        getBit(mask, COSMETICS_MASK.unhide) === false\n      ) {\n        return null;\n      }\n\n      mask = setBit(mask, COSMETICS_MASK.scriptInject);\n      selector = line.slice(suffixStartIndex + 4, line.length - 1);\n\n      // An empty scriptlet (i.e. '+js()') can be specified to cancel injections\n      // on a specific domain or globally. It does not make sense though to have\n      // an empty scriptlet without an exception (i.e. '#@#' is mandatory).\n      if (getBit(mask, COSMETICS_MASK.unhide) === false && selector.length === 0) {\n        return null;\n      }\n    } else {\n      selector = line.slice(suffixStartIndex);\n      const selectorType = classifySelector(selector);\n      if (selectorType === SelectorType.Extended) {\n        mask = setBit(mask, COSMETICS_MASK.extended);\n      } else if (selectorType === SelectorType.Invalid || !isValidCss(selector)) {\n        // console.error('Invalid', line);\n        // TODO - maybe perform `isValidCss` from the other module.\n        return null;\n      }\n    }\n\n    // Extended selectors should always be specific to some domain.\n    if (domains === undefined && getBit(mask, COSMETICS_MASK.extended) === true) {\n      return null;\n    }\n\n    if (selector !== undefined) {\n      // Check if unicode appears in selector\n      if (hasUnicode(selector)) {\n        mask = setBit(mask, COSMETICS_MASK.isUnicode);\n      }\n\n      // Classify selector\n      if (\n        getBit(mask, COSMETICS_MASK.scriptInject) === false &&\n        getBit(mask, COSMETICS_MASK.remove) === false &&\n        getBit(mask, COSMETICS_MASK.extended) === false &&\n        selector.startsWith('^') === false\n      ) {\n        const c0 = selector.charCodeAt(0);\n        const c1 = selector.charCodeAt(1);\n        const c2 = selector.charCodeAt(2);\n\n        // Check if we have a specific case of simple selector (id, class or\n        // href) These are the most common filters and will benefit greatly from\n        // a custom dispatch mechanism.\n        if (getBit(mask, COSMETICS_MASK.scriptInject) === false) {\n          if (c0 === 46 /* '.' */ && isSimpleSelector(selector)) {\n            mask = setBit(mask, COSMETICS_MASK.isClassSelector);\n          } else if (c0 === 35 /* '#' */ && isSimpleSelector(selector)) {\n            mask = setBit(mask, COSMETICS_MASK.isIdSelector);\n          } else if (\n            c0 === 97 /* a */ &&\n            c1 === 91 /* '[' */ &&\n            c2 === 104 /* 'h' */ &&\n            isSimpleHrefSelector(selector, 2)\n          ) {\n            mask = setBit(mask, COSMETICS_MASK.isHrefSelector);\n          } else if (\n            c0 === 91 /* '[' */ &&\n            c1 === 104 /* 'h' */ &&\n            isSimpleHrefSelector(selector, 1)\n          ) {\n            mask = setBit(mask, COSMETICS_MASK.isHrefSelector);\n          }\n        }\n      }\n    }\n\n    return new CosmeticFilter({\n      mask,\n      rawLine: debug === true ? line : undefined,\n      selector,\n      style,\n      domains,\n    });\n  }\n\n  /**\n   * Deserialize cosmetic filters. The code accessing the buffer should be\n   * symetrical to the one in `serializeCosmeticFilter`.\n   */\n  public static deserialize(buffer: StaticDataView): CosmeticFilter {\n    const mask = buffer.getUint8();\n    const isUnicode = getBit(mask, COSMETICS_MASK.isUnicode);\n    const optionalParts = buffer.getUint8();\n    const selector = isUnicode ? buffer.getUTF8() : buffer.getCosmeticSelector();\n\n    // The order of these fields should be the same as when we serialize them.\n    return new CosmeticFilter({\n      // Mandatory fields\n      mask,\n      selector,\n\n      // Optional fields\n      domains: (optionalParts & 1) === 1 ? Domains.deserialize(buffer) : undefined,\n      rawLine: (optionalParts & 2) === 2 ? buffer.getRawCosmetic() : undefined,\n      style: (optionalParts & 4) === 4 ? buffer.getASCII() : undefined,\n    });\n  }\n\n  // Mandatory fields\n  public readonly mask: number;\n  public readonly selector: string;\n\n  public readonly domains: Domains | undefined;\n\n  public readonly style: string | undefined;\n  public readonly rawLine: string | undefined;\n\n  private id: number | undefined;\n\n  constructor({\n    mask,\n    selector,\n    domains,\n    rawLine,\n    style,\n  }: {\n    mask: number;\n    domains: Domains | undefined;\n    rawLine: string | undefined;\n    selector: string;\n    style: string | undefined;\n  }) {\n    this.mask = mask;\n    this.selector = selector;\n    this.domains = domains;\n    this.style = style;\n\n    this.id = undefined;\n    this.rawLine = rawLine;\n  }\n\n  public isCosmeticFilter(): boolean {\n    return true;\n  }\n\n  public isNetworkFilter(): boolean {\n    return false;\n  }\n\n  /**\n   * The format of a cosmetic filter is:\n   *\n   * | mask | selector length | selector... | hostnames length | hostnames...\n   *   32     16                              16\n   *\n   * The header (mask) is 32 bits, then we have a total of 32 bits to store the\n   * length of `selector` and `hostnames` (16 bits each).\n   *\n   * Improvements similar to the onces mentioned in `serializeNetworkFilters`\n   * could be applied here, to get a more compact representation.\n   */\n  public serialize(buffer: StaticDataView): void {\n    // Mandatory fields\n    buffer.pushUint8(this.mask);\n    const index = buffer.getPos();\n    buffer.pushUint8(0);\n\n    if (this.isUnicode()) {\n      buffer.pushUTF8(this.selector);\n    } else {\n      buffer.pushCosmeticSelector(this.selector);\n    }\n\n    // This bit-mask indicates which optional parts of the filter were serialized.\n    let optionalParts = 0;\n\n    if (this.domains !== undefined) {\n      optionalParts |= 1;\n      this.domains.serialize(buffer);\n    }\n\n    if (this.rawLine !== undefined) {\n      optionalParts |= 2;\n      buffer.pushRawCosmetic(this.rawLine);\n    }\n\n    if (this.style !== undefined) {\n      optionalParts |= 4;\n      buffer.pushASCII(this.style);\n    }\n\n    buffer.setByte(index, optionalParts);\n  }\n\n  /**\n   * Return an estimation of the size (in bytes) needed to persist this filter\n   * in a DataView. This does not need to be 100% accurate but should be an\n   * upper-bound. It should also be as fast as possible.\n   */\n  public getSerializedSize(compression: boolean): number {\n    let estimate: number = 1 + 1; // mask (1 byte) + optional parts (1 byte)\n\n    if (this.isUnicode()) {\n      estimate += sizeOfUTF8(this.selector);\n    } else {\n      estimate += sizeOfCosmeticSelector(this.selector, compression);\n    }\n\n    if (this.domains !== undefined) {\n      estimate += this.domains.getSerializedSize();\n    }\n\n    if (this.rawLine !== undefined) {\n      estimate += sizeOfRawCosmetic(this.rawLine, compression);\n    }\n\n    if (this.style !== undefined) {\n      estimate += sizeOfASCII(this.style);\n    }\n\n    return estimate;\n  }\n\n  /**\n   * Create a more human-readable version of this filter. It is mainly used for\n   * debugging purpose, as it will expand the values stored in the bit mask.\n   */\n  public toString(): string {\n    if (this.rawLine !== undefined) {\n      return this.rawLine;\n    }\n\n    let filter = '';\n\n    if (this.domains !== undefined) {\n      filter += '<hostnames>';\n    }\n\n    if (this.isUnhide()) {\n      filter += '#@#';\n    } else {\n      filter += '##';\n    }\n\n    if (this.isScriptInject()) {\n      filter += '+js(';\n      filter += this.selector;\n      filter += ')';\n    } else {\n      filter += this.selector;\n    }\n\n    return filter;\n  }\n\n  public match(hostname: string, domain: string): boolean {\n    // Not constraint on hostname, match is true\n    if (this.hasHostnameConstraint() === false) {\n      return true;\n    }\n\n    // No `hostname` available but this filter has some constraints on hostname.\n    if (!hostname && this.hasHostnameConstraint()) {\n      return false;\n    }\n\n    if (this.domains !== undefined) {\n      // TODO - this hashing could be re-used between cosmetics by using an\n      // abstraction like `Request` (similar to network filters matching).\n      // Maybe could we reuse `Request` directly without any change?\n      return this.domains.match(\n        hostname.length === 0\n          ? EMPTY_UINT32_ARRAY\n          : getHostnameHashesFromLabelsBackward(hostname, domain),\n        hostname.length === 0\n          ? EMPTY_UINT32_ARRAY\n          : getEntityHashesFromLabelsBackward(hostname, domain),\n      );\n    }\n\n    return true;\n  }\n\n  /**\n   * Get tokens for this filter. It can be indexed multiple times if multiple\n   * hostnames are specified (e.g.: host1,host2##.selector).\n   */\n  public getTokens(): Uint32Array[] {\n    const tokens: Uint32Array[] = [];\n\n    // Note, we do not need to use negated domains or entities as tokens here\n    // since they will by definition not match on their own, unless accompanied\n    // by a domain or entity. Instead, they are handled in\n    // `CosmeticFilterBucket.getCosmeticsFilters(...)`.\n\n    if (this.domains !== undefined) {\n      const { hostnames, entities } = this.domains;\n\n      if (hostnames !== undefined) {\n        for (const hostname of hostnames) {\n          tokens.push(new Uint32Array([hostname]));\n        }\n      }\n\n      if (entities !== undefined) {\n        for (const entity of entities) {\n          tokens.push(new Uint32Array([entity]));\n        }\n      }\n    }\n\n    // Here we only take selector into account if the filter is not unHide.\n    if (tokens.length === 0 && this.isUnhide() === false) {\n      if (this.isIdSelector() || this.isClassSelector()) {\n        // Here we try to identify the end of selector si that we can extract a\n        // valid token out of it. In all these examples, 'selector' is our\n        // token:\n        //\n        //   .selector[...]\n        //   #selector[...]\n        //   #selector ~ foo\n        //   .selector:not(...)\n        //   .selector.foo\n        //\n        // We now try to identify the first valid end of selector which will\n        // also be the end of our token: space, bracket, colon, dot.\n        let endOfSelector = 1;\n        const selector = this.selector;\n        for (; endOfSelector < selector.length; endOfSelector += 1) {\n          const code = selector.charCodeAt(endOfSelector);\n          if (\n            code === 32 /* ' ' */ ||\n            code === 46 /* '.' */ ||\n            code === 58 /* ':' */ ||\n            code === 91 /* '[' */\n          ) {\n            break;\n          }\n        }\n\n        const arr = new Uint32Array(1);\n        arr[0] = fastHashBetween(selector, 1, endOfSelector);\n        tokens.push(arr);\n      } else if (this.isHrefSelector() === true) {\n        const selector: string = this.getSelector();\n\n        // Locate 'href' in selector\n        let hrefIndex = selector.indexOf('href');\n        if (hrefIndex === -1) {\n          return EMPTY_TOKENS;\n        }\n        hrefIndex += 4;\n\n        // Tokenize optimally depending on the kind of selector: 'href=',\n        // 'href*=', 'href^='.\n        let skipFirstToken: boolean = false;\n        let skipLastToken: boolean = true;\n        if (selector.charCodeAt(hrefIndex) === 42 /* '*' */) {\n          // skip: '*'\n          skipFirstToken = true;\n          hrefIndex += 1;\n        } else if (selector.charCodeAt(hrefIndex) === 94 /* '^' */) {\n          // skip: '^'\n          hrefIndex += 1;\n        } else {\n          skipLastToken = false;\n        }\n\n        hrefIndex += 2; // skip:  '=\"'\n\n        // Locate end of href\n        const hrefEnd = selector.indexOf('\"', hrefIndex);\n        if (hrefEnd === -1) {\n          // That cannot happen unless the filter is not well-formed. In this\n          // case, we just return no tokens, which will result in this filter\n          // ending up in the \"wildcard\" bucket of the index.\n          return EMPTY_TOKENS;\n        }\n\n        tokens.push(\n          tokenize(this.selector.slice(hrefIndex, hrefEnd), skipFirstToken, skipLastToken),\n        );\n      }\n    }\n\n    if (tokens.length === 0) {\n      return EMPTY_TOKENS;\n    }\n\n    return tokens;\n  }\n\n  public getScript(js: Map<string, string>): string | undefined {\n    let scriptName = this.getSelector();\n    let scriptArguments: string[] = [];\n    if (scriptName.indexOf(',') !== -1) {\n      const parts = scriptName.split(',');\n      if (parts.length === 0) {\n        return undefined;\n      }\n\n      const firstPart = parts[0];\n      if (firstPart === undefined) {\n        return undefined;\n      }\n\n      scriptName = firstPart;\n      scriptArguments = parts.slice(1).map((s) => s.trim());\n    }\n\n    let script = js.get(scriptName);\n    if (script !== undefined) {\n      for (let i = 0; i < scriptArguments.length; i += 1) {\n        script = script.replace(`{{${i + 1}}}`, scriptArguments[i]);\n      }\n\n      return script;\n    } // TODO - else throw an exception?\n\n    return undefined;\n  }\n\n  public hasHostnameConstraint(): boolean {\n    return this.domains !== undefined;\n  }\n\n  public getId(): number {\n    if (this.id === undefined) {\n      this.id = computeFilterId(this.mask, this.selector, this.domains, this.style);\n    }\n    return this.id;\n  }\n\n  public hasCustomStyle(): boolean {\n    return this.style !== undefined;\n  }\n\n  public getStyle(): string {\n    return this.style || DEFAULT_HIDDING_STYLE;\n  }\n\n  public getStyleAttributeHash(): string {\n    return `s${fastHash(this.getStyle())}`;\n  }\n\n  public getSelector(): string {\n    return this.selector;\n  }\n\n  public getSelectorAST(): AST | undefined {\n    return parseCssSelector(this.getSelector());\n  }\n\n  public getExtendedSelector(): HTMLSelector | undefined {\n    return extractHTMLSelectorFromRule(this.selector);\n  }\n\n  public isExtended(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.extended);\n  }\n\n  public isRemove(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.remove);\n  }\n\n  public isUnhide(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.unhide);\n  }\n\n  public isScriptInject(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.scriptInject);\n  }\n\n  public isCSS(): boolean {\n    return this.isScriptInject() === false;\n  }\n\n  public isIdSelector(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.isIdSelector);\n  }\n\n  public isClassSelector(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.isClassSelector);\n  }\n\n  public isHrefSelector(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.isHrefSelector);\n  }\n\n  public isUnicode(): boolean {\n    return getBit(this.mask, COSMETICS_MASK.isUnicode);\n  }\n\n  public isHtmlFiltering(): boolean {\n    return this.getSelector().startsWith('^');\n  }\n\n  // A generic hide cosmetic filter is one that:\n  //\n  // * Do not have a domain specified. \"Hide this element on all domains\"\n  // * Have only domain exceptions specified. \"Hide this element on all domains except example.com\"\n  //\n  // For example: ~example.com##.ad  is a generic filter as well!\n  public isGenericHide(): boolean {\n    return this?.domains?.hostnames === undefined && this?.domains?.entities === undefined;\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { Domains } from '../engine/domains';\nimport {\n  StaticDataView,\n  sizeOfNetworkCSP,\n  sizeOfNetworkFilter,\n  sizeOfNetworkHostname,\n  sizeOfNetworkRedirect,\n  sizeOfUTF8,\n  sizeOfRawNetwork,\n} from '../data-view';\nimport { toASCII } from '../punycode';\nimport Request, { RequestType, NORMALIZED_TYPE_TOKEN } from '../request';\nimport { TOKENS_BUFFER } from '../tokens-buffer';\nimport {\n  bitCount,\n  clearBit,\n  fastHash,\n  fastStartsWith,\n  fastStartsWithFrom,\n  getBit,\n  hasUnicode,\n  isAlpha,\n  isDigit,\n  setBit,\n  tokenizeInPlace,\n  tokenizeRegexInPlace,\n  tokenizeWithWildcardsInPlace,\n} from '../utils';\nimport IFilter from './interface';\n\nconst HTTP_HASH = fastHash('http');\nconst HTTPS_HASH = fastHash('https');\n\nfunction isAllowedHostname(ch: number): boolean {\n  return (\n    isDigit(ch) || isAlpha(ch) || ch === 95 /* '_' */ || ch === 45 /* '-' */ || ch === 46 /* '.' */\n  );\n}\n\nconst NORMALIZE_OPTIONS: { [option: string]: string } = {\n  'document': 'doc',\n  'first-party': '1p',\n  'generichide': 'ghide',\n  'object-subrequest': 'object',\n  'stylesheet': 'css',\n  'subdocument': 'frame',\n  'third-party': '3p',\n  'xmlhttprequest': 'xhr',\n  '~first-party': '3p',\n  '~third-party': '1p',\n  'all': '',\n};\n\n/**\n * Normalize a raw filter by replacing options with their canonical forms. For\n * example `||foo.com$stylesheet,first-party,xhr` would be normalized to\n * `||foo.com$css,1p,xhr`.\n */\nconst REGEX = /all|~third-party|~first-party|third-party|first-party|object-subrequest|stylesheet|subdocument|xmlhttprequest|document|generichide/g;\nexport function normalizeRawFilterOptions(rawFilter: string): string {\n  rawFilter = rawFilter.toLowerCase();\n\n  let indexOfOptions = rawFilter.lastIndexOf('$');\n  if (indexOfOptions === -1) {\n    return rawFilter;\n  }\n\n  // Remove trailing '*' if possible\n  if (indexOfOptions !== 0 && rawFilter[indexOfOptions - 1] === '*') {\n    rawFilter = rawFilter.slice(0, indexOfOptions - 1) + rawFilter.slice(indexOfOptions);\n    indexOfOptions -= 1;\n  }\n\n  // Normalize options\n  const options = rawFilter.slice(indexOfOptions + 1);\n  const normalizedOptions = options\n    .replace(REGEX, (option) => {\n      const normalized = NORMALIZE_OPTIONS[option];\n      if (normalized === undefined) {\n        return option;\n      }\n      return normalized;\n    })\n    .split(',')\n    .sort()\n    .join(',');\n\n  if (options === normalizedOptions) {\n    return rawFilter;\n  }\n\n  if (normalizedOptions === '') {\n    return rawFilter.slice(0, indexOfOptions);\n  }\n\n  return `${rawFilter.slice(0, indexOfOptions)}$${normalizedOptions}`;\n}\n\n/**\n * Masks used to store options of network filters in a bitmask.\n */\nexport const enum NETWORK_FILTER_MASK {\n  // Request Type\n  fromDocument = 1 << 0,\n  fromFont = 1 << 1,\n  fromHttp = 1 << 2,\n  fromHttps = 1 << 3,\n  fromImage = 1 << 4,\n  fromMedia = 1 << 5,\n  fromObject = 1 << 6,\n  fromOther = 1 << 7,\n  fromPing = 1 << 8,\n  fromScript = 1 << 9,\n  fromStylesheet = 1 << 10,\n  fromSubdocument = 1 << 11,\n  fromWebsocket = 1 << 12, // e.g.: ws, wss\n  fromXmlHttpRequest = 1 << 13,\n\n  // Partiness\n  firstParty = 1 << 14,\n  thirdParty = 1 << 15,\n\n  // Options\n  // FREE - 1 << 16\n  isBadFilter = 1 << 17,\n  isCSP = 1 << 18,\n  isGenericHide = 1 << 19,\n  isImportant = 1 << 20,\n  isSpecificHide = 1 << 21,\n\n  // Kind of patterns\n  isFullRegex = 1 << 22,\n  isRegex = 1 << 23,\n  isUnicode = 1 << 24,\n  isLeftAnchor = 1 << 25,\n  isRightAnchor = 1 << 26,\n  isException = 1 << 27,\n  isHostnameAnchor = 1 << 28,\n  isRedirectRule = 1 << 29,\n}\n\n/**\n * Mask used when a network filter can be applied on any content type.\n */\nconst FROM_ANY: number =\n  NETWORK_FILTER_MASK.fromDocument |\n  NETWORK_FILTER_MASK.fromFont |\n  NETWORK_FILTER_MASK.fromImage |\n  NETWORK_FILTER_MASK.fromMedia |\n  NETWORK_FILTER_MASK.fromObject |\n  NETWORK_FILTER_MASK.fromOther |\n  NETWORK_FILTER_MASK.fromPing |\n  NETWORK_FILTER_MASK.fromScript |\n  NETWORK_FILTER_MASK.fromStylesheet |\n  NETWORK_FILTER_MASK.fromSubdocument |\n  NETWORK_FILTER_MASK.fromWebsocket |\n  NETWORK_FILTER_MASK.fromXmlHttpRequest;\n\n/**\n * Map content type value to mask the corresponding mask.\n * ref: https://developer.mozilla.org/en-US/docs/Mozilla/Tech/XPCOM/Reference/Interface/nsIContentPolicy\n */\nconst REQUEST_TYPE_TO_MASK: { [s in RequestType]: number | undefined } = {\n  beacon: NETWORK_FILTER_MASK.fromPing, // fromOther?\n  document: NETWORK_FILTER_MASK.fromDocument,\n  cspviolationreport: NETWORK_FILTER_MASK.fromOther,\n  fetch: NETWORK_FILTER_MASK.fromXmlHttpRequest,\n  font: NETWORK_FILTER_MASK.fromFont,\n  image: NETWORK_FILTER_MASK.fromImage,\n  imageset: NETWORK_FILTER_MASK.fromImage,\n  mainFrame: NETWORK_FILTER_MASK.fromDocument,\n  main_frame: NETWORK_FILTER_MASK.fromDocument,\n  media: NETWORK_FILTER_MASK.fromMedia,\n  object: NETWORK_FILTER_MASK.fromObject,\n  object_subrequest: NETWORK_FILTER_MASK.fromObject,\n  ping: NETWORK_FILTER_MASK.fromPing, // fromOther?\n  script: NETWORK_FILTER_MASK.fromScript,\n  stylesheet: NETWORK_FILTER_MASK.fromStylesheet,\n  subFrame: NETWORK_FILTER_MASK.fromSubdocument,\n  sub_frame: NETWORK_FILTER_MASK.fromSubdocument,\n  webSocket: NETWORK_FILTER_MASK.fromWebsocket,\n  websocket: NETWORK_FILTER_MASK.fromWebsocket,\n  xhr: NETWORK_FILTER_MASK.fromXmlHttpRequest,\n  xmlhttprequest: NETWORK_FILTER_MASK.fromXmlHttpRequest,\n\n  // Other\n  csp_report: NETWORK_FILTER_MASK.fromOther,\n  cspReport: NETWORK_FILTER_MASK.fromOther,\n  eventsource: NETWORK_FILTER_MASK.fromOther,\n  manifest: NETWORK_FILTER_MASK.fromOther,\n  other: NETWORK_FILTER_MASK.fromOther,\n  preflight: NETWORK_FILTER_MASK.fromOther,\n  signedexchange: NETWORK_FILTER_MASK.fromOther,\n  speculative: NETWORK_FILTER_MASK.fromOther,\n  texttrack: NETWORK_FILTER_MASK.fromOther,\n  web_manifest: NETWORK_FILTER_MASK.fromOther,\n  xml_dtd: NETWORK_FILTER_MASK.fromOther,\n  xslt: NETWORK_FILTER_MASK.fromOther,\n};\n\nfunction getListOfRequestTypesNegated(filter: NetworkFilter): RequestType[] {\n  const types: RequestType[] = [];\n\n  if (filter.fromDocument() === false) {\n    types.push('document');\n  }\n\n  if (filter.fromImage() === false) {\n    types.push('image');\n  }\n\n  if (filter.fromMedia() === false) {\n    types.push('media');\n  }\n\n  if (filter.fromObject() === false) {\n    types.push('object');\n  }\n\n  if (filter.fromOther() === false) {\n    types.push('other');\n  }\n\n  if (filter.fromPing() === false) {\n    types.push('ping');\n  }\n\n  if (filter.fromScript() === false) {\n    types.push('script');\n  }\n\n  if (filter.fromStylesheet() === false) {\n    types.push('stylesheet');\n  }\n\n  if (filter.fromSubdocument() === false) {\n    types.push('sub_frame');\n  }\n\n  if (filter.fromWebsocket() === false) {\n    types.push('websocket');\n  }\n\n  if (filter.fromXmlHttpRequest() === false) {\n    types.push('xhr');\n  }\n\n  if (filter.fromFont() === false) {\n    types.push('font');\n  }\n\n  return types;\n}\n\nfunction getListOfRequestTypes(filter: NetworkFilter): RequestType[] {\n  const types: RequestType[] = [];\n\n  if (filter.fromDocument()) {\n    types.push('document');\n  }\n\n  if (filter.fromImage()) {\n    types.push('image');\n  }\n\n  if (filter.fromMedia()) {\n    types.push('media');\n  }\n\n  if (filter.fromObject()) {\n    types.push('object');\n  }\n\n  if (filter.fromOther()) {\n    types.push('other');\n  }\n\n  if (filter.fromPing()) {\n    types.push('ping');\n  }\n\n  if (filter.fromScript()) {\n    types.push('script');\n  }\n\n  if (filter.fromStylesheet()) {\n    types.push('stylesheet');\n  }\n\n  if (filter.fromSubdocument()) {\n    types.push('sub_frame');\n  }\n\n  if (filter.fromWebsocket()) {\n    types.push('websocket');\n  }\n\n  if (filter.fromXmlHttpRequest()) {\n    types.push('xhr');\n  }\n\n  if (filter.fromFont()) {\n    types.push('font');\n  }\n\n  return types;\n}\n\nfunction computeFilterId(\n  csp: string | undefined,\n  mask: number,\n  filter: string | undefined,\n  hostname: string | undefined,\n  domains: Domains | undefined,\n  denyallow: Domains | undefined,\n  redirect: string | undefined,\n): number {\n  let hash = (7907 * 33) ^ mask;\n\n  if (csp !== undefined) {\n    for (let i = 0; i < csp.length; i += 1) {\n      hash = (hash * 33) ^ csp.charCodeAt(i);\n    }\n  }\n\n  if (domains !== undefined) {\n    hash = domains.updateId(hash);\n  }\n\n  if (denyallow !== undefined) {\n    hash = denyallow.updateId(hash);\n  }\n\n  if (filter !== undefined) {\n    for (let i = 0; i < filter.length; i += 1) {\n      hash = (hash * 33) ^ filter.charCodeAt(i);\n    }\n  }\n\n  if (hostname !== undefined) {\n    for (let i = 0; i < hostname.length; i += 1) {\n      hash = (hash * 33) ^ hostname.charCodeAt(i);\n    }\n  }\n\n  if (redirect !== undefined) {\n    for (let i = 0; i < redirect.length; i += 1) {\n      hash = (hash * 33) ^ redirect.charCodeAt(i);\n    }\n  }\n\n  return hash >>> 0;\n}\n\n/**\n * Compiles a filter pattern to a regex. This is only performed *lazily* for\n * filters containing at least a * or ^ symbol. Because Regexes are expansive,\n * we try to convert some patterns to plain filters.\n */\nfunction compileRegex(\n  filter: string,\n  isLeftAnchor: boolean,\n  isRightAnchor: boolean,\n  isFullRegex: boolean,\n): RegExp {\n  if (isFullRegex === true) {\n    return new RegExp(filter.slice(1, filter.length - 1), 'i');\n  }\n\n  // Escape special regex characters: |.$+?{}()[]\\\n  filter = filter.replace(/([|.$+?{}()[\\]\\\\])/g, '\\\\$1');\n\n  // * can match anything\n  filter = filter.replace(/\\*/g, '.*');\n\n  // ^ can match any separator or the end of the pattern\n  filter = filter.replace(/\\^/g, '(?:[^\\\\w\\\\d_.%-]|$)');\n\n  // Should match end of url\n  if (isRightAnchor) {\n    filter = `${filter}$`;\n  }\n\n  if (isLeftAnchor) {\n    filter = `^${filter}`;\n  }\n\n  return new RegExp(filter);\n}\n\nconst MATCH_ALL = new RegExp('');\n\nexport default class NetworkFilter implements IFilter {\n  public static parse(line: string, debug: boolean = false): NetworkFilter | null {\n    // Represent options as a bitmask\n    let mask: number =\n      NETWORK_FILTER_MASK.thirdParty |\n      NETWORK_FILTER_MASK.firstParty |\n      NETWORK_FILTER_MASK.fromHttps |\n      NETWORK_FILTER_MASK.fromHttp;\n\n    // Temporary masks for positive (e.g.: $script) and negative (e.g.: $~script)\n    // content type options.\n    let cptMaskPositive: number = 0;\n    let cptMaskNegative: number = FROM_ANY;\n\n    let hostname: string | undefined;\n    let domains: Domains | undefined;\n    let denyallow: Domains | undefined;\n    let redirect: string | undefined;\n    let csp: string | undefined;\n\n    // Start parsing\n    let filterIndexStart: number = 0;\n    let filterIndexEnd: number = line.length;\n\n    // @@filter == Exception\n    if (line.charCodeAt(0) === 64 /* '@' */ && line.charCodeAt(1) === 64 /* '@' */) {\n      filterIndexStart += 2;\n      mask = setBit(mask, NETWORK_FILTER_MASK.isException);\n    }\n\n    // filter$options == Options\n    // ^     ^\n    // |     |\n    // |     optionsIndex\n    // filterIndexStart\n    const optionsIndex: number = line.lastIndexOf('$');\n    if (optionsIndex !== -1 && line.charCodeAt(optionsIndex + 1) !== 47 /* '/' */) {\n      // Parse options and set flags\n      filterIndexEnd = optionsIndex;\n\n      // --------------------------------------------------------------------- //\n      // parseOptions\n      // --------------------------------------------------------------------- //\n      for (const rawOption of line.slice(optionsIndex + 1).split(',')) {\n        const negation = rawOption.charCodeAt(0) === 126; /* '~' */\n        let option = negation === true ? rawOption.slice(1) : rawOption;\n\n        // Check for options: option=value1|value2\n        let optionValue: string = '';\n        const indexOfEqual: number = option.indexOf('=');\n        if (indexOfEqual !== -1) {\n          optionValue = option.slice(indexOfEqual + 1);\n          option = option.slice(0, indexOfEqual);\n        }\n\n        switch (option) {\n          case 'denyallow': {\n            denyallow = Domains.parse(optionValue.split('|'));\n            break;\n          }\n          case 'domain': {\n            // domain list starting or ending with '|' is invalid\n            if (\n              optionValue.charCodeAt(0) === 124 /* '|' */ ||\n              optionValue.charCodeAt(optionValue.length - 1) === 124 /* '|' */\n            ) {\n              return null;\n            }\n\n            domains = Domains.parse(optionValue.split('|'));\n            break;\n          }\n          case 'badfilter':\n            mask = setBit(mask, NETWORK_FILTER_MASK.isBadFilter);\n            break;\n          case 'important':\n            // Note: `negation` should always be `false` here.\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isImportant);\n            break;\n          case 'match-case':\n            // Note: `negation` should always be `false` here.\n            if (negation) {\n              return null;\n            }\n\n            // We currently consider all filters to be case-insensitive.\n            break;\n          case '3p':\n          case 'third-party':\n            if (negation) {\n              // ~third-party means we should clear the flag\n              mask = clearBit(mask, NETWORK_FILTER_MASK.thirdParty);\n            } else {\n              // third-party means ~first-party\n              mask = clearBit(mask, NETWORK_FILTER_MASK.firstParty);\n            }\n            break;\n          case '1p':\n          case 'first-party':\n            if (negation) {\n              // ~first-party means we should clear the flag\n              mask = clearBit(mask, NETWORK_FILTER_MASK.firstParty);\n            } else {\n              // first-party means ~third-party\n              mask = clearBit(mask, NETWORK_FILTER_MASK.thirdParty);\n            }\n            break;\n          case 'redirect-rule':\n          case 'redirect':\n            // Negation of redirection doesn't make sense\n            if (negation) {\n              return null;\n            }\n\n            // Ignore this filter if no redirection resource is specified\n            if (optionValue.length === 0) {\n              return null;\n            }\n\n            if (option === 'redirect-rule') {\n              mask = setBit(mask, NETWORK_FILTER_MASK.isRedirectRule);\n            }\n\n            redirect = optionValue;\n            break;\n          case 'csp':\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isCSP);\n            if (optionValue.length > 0) {\n              csp = optionValue;\n            }\n            break;\n          case 'ehide':\n          case 'elemhide':\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isGenericHide);\n            mask = setBit(mask, NETWORK_FILTER_MASK.isSpecificHide);\n            break;\n          case 'shide':\n          case 'specifichide':\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isSpecificHide);\n            break;\n          case 'ghide':\n          case 'generichide':\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isGenericHide);\n            break;\n          case 'inline-script':\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isCSP);\n            csp =\n              \"script-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:\";\n            break;\n          case 'inline-font':\n            if (negation) {\n              return null;\n            }\n\n            mask = setBit(mask, NETWORK_FILTER_MASK.isCSP);\n            csp =\n              \"font-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:\";\n            break;\n          default: {\n            // Handle content type options separatly\n            let optionMask: number = 0;\n            switch (option) {\n              case 'all':\n                if (negation) {\n                  return null;\n                }\n\n                // NOTE: Currently a filter cannot be both blocking and CSP, so\n                // we will have to create multiple filters to keep the semantics\n                // of 'all'.\n                // mask = setBit(mask, NETWORK_FILTER_MASK.isCSP);\n                // csp = [\n                //   \"script-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:\",\n                //   \"font-src 'self' 'unsafe-eval' http: https: data: blob: mediastream: filesystem:\",\n                // ].join('; ');\n                break;\n              case 'image':\n                optionMask = NETWORK_FILTER_MASK.fromImage;\n                break;\n              case 'media':\n                optionMask = NETWORK_FILTER_MASK.fromMedia;\n                break;\n              case 'object':\n              case 'object-subrequest':\n                optionMask = NETWORK_FILTER_MASK.fromObject;\n                break;\n              case 'other':\n                optionMask = NETWORK_FILTER_MASK.fromOther;\n                break;\n              case 'ping':\n              case 'beacon':\n                optionMask = NETWORK_FILTER_MASK.fromPing;\n                break;\n              case 'script':\n                optionMask = NETWORK_FILTER_MASK.fromScript;\n                break;\n              case 'css':\n              case 'stylesheet':\n                optionMask = NETWORK_FILTER_MASK.fromStylesheet;\n                break;\n              case 'frame':\n              case 'subdocument':\n                optionMask = NETWORK_FILTER_MASK.fromSubdocument;\n                break;\n              case 'xhr':\n              case 'xmlhttprequest':\n                optionMask = NETWORK_FILTER_MASK.fromXmlHttpRequest;\n                break;\n              case 'websocket':\n                optionMask = NETWORK_FILTER_MASK.fromWebsocket;\n                break;\n              case 'font':\n                optionMask = NETWORK_FILTER_MASK.fromFont;\n                break;\n              case 'doc':\n              case 'document':\n                optionMask = NETWORK_FILTER_MASK.fromDocument;\n                break;\n              default:\n                // Disable this filter if we don't support all the options\n                return null;\n            }\n\n            // We got a valid cpt option, update mask\n            if (negation) {\n              cptMaskNegative = clearBit(cptMaskNegative, optionMask);\n            } else {\n              cptMaskPositive = setBit(cptMaskPositive, optionMask);\n            }\n            break;\n          }\n        }\n      }\n      // End of option parsing\n      // --------------------------------------------------------------------- //\n    }\n\n    if (cptMaskPositive === 0) {\n      mask |= cptMaskNegative;\n    } else if (cptMaskNegative === FROM_ANY) {\n      mask |= cptMaskPositive;\n    } else {\n      mask |= cptMaskPositive & cptMaskNegative;\n    }\n\n    // Identify kind of pattern\n    let filter: string | undefined;\n\n    // Detect Regexps (i.e.: /pattern/)\n    if (\n      filterIndexEnd - filterIndexStart >= 2 &&\n      line.charCodeAt(filterIndexStart) === 47 /* '/' */ &&\n      line.charCodeAt(filterIndexEnd - 1) === 47 /* '/' */\n    ) {\n      // Some extra ideas which could be applied to RegExp filters:\n      // * convert rules without any special RegExp syntax to plain patterns\n      // * remove extra `isFullRegex` flag since `isRegex` might be enough\n      // * apply some optimizations on the fly: /^https?:\\\\/\\\\/rest => isHttp + isHttps + rest\n      filter = line.slice(filterIndexStart, filterIndexEnd);\n\n      // Validate RegExp to make sure this rule is fine\n      try {\n        compileRegex(\n          filter,\n          false /* isLeftAnchor */,\n          false /* isRightAnchor */,\n          true /* isFullRegex */,\n        );\n      } catch (ex) {\n        return null; // invalid RegExp\n      }\n\n      mask = setBit(mask, NETWORK_FILTER_MASK.isFullRegex);\n    } else {\n      // Deal with hostname pattern\n      if (filterIndexEnd > 0 && line.charCodeAt(filterIndexEnd - 1) === 124 /* '|' */) {\n        mask = setBit(mask, NETWORK_FILTER_MASK.isRightAnchor);\n        filterIndexEnd -= 1;\n      }\n\n      if (\n        filterIndexStart < filterIndexEnd &&\n        line.charCodeAt(filterIndexStart) === 124 /* '|' */\n      ) {\n        if (\n          filterIndexStart < filterIndexEnd - 1 &&\n          line.charCodeAt(filterIndexStart + 1) === 124 /* '|' */\n        ) {\n          mask = setBit(mask, NETWORK_FILTER_MASK.isHostnameAnchor);\n          filterIndexStart += 2;\n        } else {\n          mask = setBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          filterIndexStart += 1;\n        }\n      }\n\n      // const isRegex = checkIsRegex(line, filterIndexStart, filterIndexEnd);\n      // mask = setNetworkMask(mask, NETWORK_FILTER_MASK.isRegex, isRegex);\n\n      if (getBit(mask, NETWORK_FILTER_MASK.isHostnameAnchor)) {\n        // Split at the first character which is not allowed in a hostname\n        let firstSeparator = filterIndexStart;\n        while (\n          firstSeparator < filterIndexEnd &&\n          isAllowedHostname(line.charCodeAt(firstSeparator)) === true\n        ) {\n          firstSeparator += 1;\n        }\n\n        // No separator found so hostname has full length\n        if (firstSeparator === filterIndexEnd) {\n          hostname = line.slice(filterIndexStart, filterIndexEnd);\n          filterIndexStart = filterIndexEnd;\n          // mask = setBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n        } else {\n          // Found a separator\n          hostname = line.slice(filterIndexStart, firstSeparator);\n          filterIndexStart = firstSeparator;\n          const separatorCode = line.charCodeAt(firstSeparator);\n\n          if (separatorCode === 94 /* '^' */) {\n            // If the only symbol remaining for the selector is '^' then ignore it\n            // but set the filter as right anchored since there should not be any\n            // other label on the right\n            if (filterIndexEnd - filterIndexStart === 1) {\n              filterIndexStart = filterIndexEnd;\n              mask = setBit(mask, NETWORK_FILTER_MASK.isRightAnchor);\n            } else {\n              mask = setBit(mask, NETWORK_FILTER_MASK.isRegex);\n              mask = setBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n            }\n          } else if (separatorCode === 42 /* '*' */) {\n            mask = setBit(mask, NETWORK_FILTER_MASK.isRegex);\n            // mask = setBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          } else {\n            mask = setBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          }\n        }\n      }\n\n      // Remove trailing '*'\n      if (\n        filterIndexEnd - filterIndexStart > 0 &&\n        line.charCodeAt(filterIndexEnd - 1) === 42 /* '*' */\n      ) {\n        filterIndexEnd -= 1;\n      }\n\n      // Remove leading '*' if the filter is not hostname anchored.\n      if (\n        getBit(mask, NETWORK_FILTER_MASK.isHostnameAnchor) === false &&\n        filterIndexEnd - filterIndexStart > 0 &&\n        line.charCodeAt(filterIndexStart) === 42 /* '*' */\n      ) {\n        mask = clearBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n        filterIndexStart += 1;\n      }\n\n      // Transform filters on protocol (http, https, ws)\n      if (getBit(mask, NETWORK_FILTER_MASK.isLeftAnchor)) {\n        if (\n          filterIndexEnd - filterIndexStart === 5 &&\n          fastStartsWithFrom(line, 'ws://', filterIndexStart)\n        ) {\n          mask = setBit(mask, NETWORK_FILTER_MASK.fromWebsocket);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.fromHttp);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.fromHttps);\n          filterIndexStart = filterIndexEnd;\n        } else if (\n          filterIndexEnd - filterIndexStart === 7 &&\n          fastStartsWithFrom(line, 'http://', filterIndexStart)\n        ) {\n          mask = setBit(mask, NETWORK_FILTER_MASK.fromHttp);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.fromHttps);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          filterIndexStart = filterIndexEnd;\n        } else if (\n          filterIndexEnd - filterIndexStart === 8 &&\n          fastStartsWithFrom(line, 'https://', filterIndexStart)\n        ) {\n          mask = setBit(mask, NETWORK_FILTER_MASK.fromHttps);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.fromHttp);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          filterIndexStart = filterIndexEnd;\n        } else if (\n          filterIndexEnd - filterIndexStart === 8 &&\n          fastStartsWithFrom(line, 'http*://', filterIndexStart)\n        ) {\n          mask = setBit(mask, NETWORK_FILTER_MASK.fromHttps);\n          mask = setBit(mask, NETWORK_FILTER_MASK.fromHttp);\n          mask = clearBit(mask, NETWORK_FILTER_MASK.isLeftAnchor);\n          filterIndexStart = filterIndexEnd;\n        }\n      }\n\n      if (filterIndexEnd - filterIndexStart > 0) {\n        filter = line.slice(filterIndexStart, filterIndexEnd).toLowerCase();\n\n        mask = setNetworkMask(mask, NETWORK_FILTER_MASK.isUnicode, hasUnicode(filter));\n        if (getBit(mask, NETWORK_FILTER_MASK.isRegex) === false) {\n          mask = setNetworkMask(\n            mask,\n            NETWORK_FILTER_MASK.isRegex,\n            checkIsRegex(filter, 0, filter.length),\n          );\n        }\n      }\n\n      // TODO\n      // - ignore hostname anchor is not hostname provided\n\n      if (hostname !== undefined) {\n        hostname = hostname.toLowerCase();\n        if (hasUnicode(hostname)) {\n          mask = setNetworkMask(mask, NETWORK_FILTER_MASK.isUnicode, true);\n          hostname = toASCII(hostname);\n        }\n      }\n    }\n\n    return new NetworkFilter({\n      csp,\n      filter,\n      hostname,\n      mask,\n      domains,\n      denyallow,\n      rawLine: debug === true ? line : undefined,\n      redirect,\n      regex: undefined,\n    });\n  }\n\n  /**\n   * Deserialize network filters. The code accessing the buffer should be\n   * symetrical to the one in `serializeNetworkFilter`.\n   */\n  public static deserialize(buffer: StaticDataView): NetworkFilter {\n    const mask = buffer.getUint32();\n    const optionalParts = buffer.getUint8();\n    const isUnicode = getBit(mask, NETWORK_FILTER_MASK.isUnicode);\n\n    // The order of these statements is important. Since `buffer.getX()` will\n    // internally increment the position of next byte to read, they need to be\n    // retrieved in the exact same order they were serialized (check\n    // `serializeNetworkFilter`).\n    return new NetworkFilter({\n      // Mandatory field\n      mask,\n\n      // Optional parts\n      csp: (optionalParts & 1) === 1 ? buffer.getNetworkCSP() : undefined,\n      filter:\n        (optionalParts & 2) === 2\n          ? isUnicode\n            ? buffer.getUTF8()\n            : buffer.getNetworkFilter()\n          : undefined,\n      hostname: (optionalParts & 4) === 4 ? buffer.getNetworkHostname() : undefined,\n      domains: (optionalParts & 8) === 8 ? Domains.deserialize(buffer) : undefined,\n      rawLine: (optionalParts & 16) === 16 ? buffer.getRawNetwork() : undefined,\n      redirect: (optionalParts & 32) === 32 ? buffer.getNetworkRedirect() : undefined,\n      denyallow: (optionalParts & 64) === 64 ? Domains.deserialize(buffer) : undefined,\n      regex: undefined,\n    });\n  }\n\n  public readonly csp: string | undefined;\n  public readonly filter: string | undefined;\n  public readonly hostname: string | undefined;\n  public readonly mask: number;\n  public readonly domains: Domains | undefined;\n  public readonly denyallow: Domains | undefined;\n  public readonly redirect: string | undefined;\n\n  // Set only in debug mode\n  public readonly rawLine: string | undefined;\n\n  // Lazy attributes\n  public id: number | undefined;\n  public regex: RegExp | undefined;\n\n  constructor({\n    csp,\n    filter,\n    hostname,\n    mask,\n    domains,\n    denyallow,\n    rawLine,\n    redirect,\n    regex,\n  }: {\n    csp: string | undefined;\n    filter: string | undefined;\n    hostname: string | undefined;\n    mask: number;\n    domains: Domains | undefined;\n    denyallow: Domains | undefined;\n    rawLine: string | undefined;\n    redirect: string | undefined;\n    regex: RegExp | undefined;\n  }) {\n    this.csp = csp;\n    this.filter = filter;\n    this.hostname = hostname;\n    this.mask = mask;\n    this.domains = domains;\n    this.denyallow = denyallow;\n    this.redirect = redirect;\n\n    this.rawLine = rawLine;\n\n    this.id = undefined;\n    this.regex = regex;\n  }\n\n  public isCosmeticFilter() {\n    return false;\n  }\n  public isNetworkFilter() {\n    return true;\n  }\n\n  public match(request: Request): boolean {\n    return checkOptions(this, request) && checkPattern(this, request);\n  }\n\n  /**\n   * To allow for a more compact representation of network filters, the\n   * representation is composed of a mandatory header, and some optional\n   *\n   * Header:\n   * =======\n   *\n   *  | opt | mask\n   *     8     32\n   *\n   * For an empty filter having no pattern, hostname, the minimum size is: 42 bits.\n   *\n   * Then for each optional part (filter, hostname optDomains, optNotDomains,\n   * redirect), it takes 16 bits for the length of the string + the length of the\n   * string in bytes.\n   *\n   * The optional parts are written in order of there number of occurrence in the\n   * filter list used by the adblocker. The most common being `hostname`, then\n   * `filter`, `optDomains`, `optNotDomains`, `redirect`.\n   *\n   * Example:\n   * ========\n   *\n   * @@||cliqz.com would result in a serialized version:\n   *\n   * | 1 | mask | 9 | c | l | i | q | z | . | c | o | m  (16 bytes)\n   *\n   * In this case, the serialized version is actually bigger than the original\n   * filter, but faster to deserialize. In the future, we could optimize the\n   * representation to compact small filters better.\n   *\n   * Ideas:\n   *  * variable length encoding for the mask (if not option, take max 1 byte).\n   *  * first byte could contain the mask as well if small enough.\n   *  * when packing ascii string, store several of them in each byte.\n   */\n  public serialize(buffer: StaticDataView): void {\n    buffer.pushUint32(this.mask);\n\n    const index = buffer.getPos();\n    buffer.pushUint8(0);\n\n    // This bit-mask indicates which optional parts of the filter were serialized.\n    let optionalParts = 0;\n\n    if (this.csp !== undefined) {\n      optionalParts |= 1;\n      buffer.pushNetworkCSP(this.csp);\n    }\n\n    if (this.filter !== undefined) {\n      optionalParts |= 2;\n      if (this.isUnicode()) {\n        buffer.pushUTF8(this.filter);\n      } else {\n        buffer.pushNetworkFilter(this.filter);\n      }\n    }\n\n    if (this.hostname !== undefined) {\n      optionalParts |= 4;\n      buffer.pushNetworkHostname(this.hostname);\n    }\n\n    if (this.domains !== undefined) {\n      optionalParts |= 8;\n      this.domains.serialize(buffer);\n    }\n\n    if (this.rawLine !== undefined) {\n      optionalParts |= 16;\n      buffer.pushRawNetwork(this.rawLine);\n    }\n\n    if (this.redirect !== undefined) {\n      optionalParts |= 32;\n      buffer.pushNetworkRedirect(this.redirect);\n    }\n\n    if (this.denyallow !== undefined) {\n      optionalParts |= 64;\n      this.denyallow.serialize(buffer);\n    }\n\n    buffer.setByte(index, optionalParts);\n  }\n\n  public getSerializedSize(compression: boolean): number {\n    let estimate: number = 4 + 1; // mask = 4 bytes // optional parts = 1 byte\n\n    if (this.csp !== undefined) {\n      estimate += sizeOfNetworkCSP(this.csp, compression);\n    }\n\n    if (this.filter !== undefined) {\n      if (this.isUnicode() === true) {\n        estimate += sizeOfUTF8(this.filter);\n      } else {\n        estimate += sizeOfNetworkFilter(this.filter, compression);\n      }\n    }\n\n    if (this.hostname !== undefined) {\n      estimate += sizeOfNetworkHostname(this.hostname, compression);\n    }\n\n    if (this.domains !== undefined) {\n      estimate += this.domains.getSerializedSize();\n    }\n\n    if (this.rawLine !== undefined) {\n      estimate += sizeOfRawNetwork(this.rawLine, compression);\n    }\n\n    if (this.redirect !== undefined) {\n      estimate += sizeOfNetworkRedirect(this.redirect, compression);\n    }\n\n    if (this.denyallow !== undefined) {\n      estimate += this.denyallow.getSerializedSize();\n    }\n\n    return estimate;\n  }\n\n  /**\n   * Tries to recreate the original representation of the filter (adblock\n   * syntax) from the internal representation. If `rawLine` is set (when filters\n   * are parsed in `debug` mode for example), then it is returned directly.\n   * Otherwise, we try to stick as closely as possible to the original form;\n   * there are things which cannot be recovered though, like domains options\n   * of which only hashes are stored.\n   */\n  public toString() {\n    if (this.rawLine !== undefined) {\n      return this.rawLine;\n    }\n\n    let filter = '';\n\n    if (this.isException()) {\n      filter += '@@';\n    }\n\n    if (this.isHostnameAnchor()) {\n      filter += '||';\n    } else if (this.fromHttp() !== this.fromHttps()) {\n      if (this.fromHttp()) {\n        filter += '|http://';\n      } else {\n        filter += '|https://';\n      }\n    } else if (this.isLeftAnchor()) {\n      filter += '|';\n    }\n\n    if (this.hasHostname()) {\n      filter += this.getHostname();\n      filter += '^';\n    }\n\n    if (this.isFullRegex()) {\n      filter += `/${this.getRegex().source}/`;\n    } else if (this.isRegex()) {\n      filter += this.getRegex().source;\n    } else {\n      filter += this.getFilter();\n    }\n\n    if (this.isRightAnchor()) {\n      filter += '|';\n    }\n\n    // Options\n    const options: string[] = [];\n\n    if (this.fromAny() === false) {\n      const numberOfCptOptions = bitCount(this.getCptMask());\n      const numberOfNegatedOptions = bitCount(FROM_ANY) - numberOfCptOptions;\n\n      if (numberOfNegatedOptions < numberOfCptOptions) {\n        for (const type of getListOfRequestTypesNegated(this)) {\n          options.push(`~${type}`);\n        }\n      } else {\n        for (const type of getListOfRequestTypes(this)) {\n          options.push(type);\n        }\n      }\n    }\n\n    if (this.isImportant()) {\n      options.push('important');\n    }\n\n    if (this.isRedirectRule()) {\n      options.push(`redirect-rule=${this.getRedirect()}`);\n    } else if (this.isRedirect()) {\n      options.push(`redirect=${this.getRedirect()}`);\n    }\n\n    if (this.isCSP()) {\n      options.push(`csp=${this.csp}`);\n    }\n\n    if (this.isElemHide()) {\n      options.push('elemhide');\n    }\n\n    if (this.isSpecificHide()) {\n      options.push('specifichide');\n    }\n\n    if (this.isGenericHide()) {\n      options.push('generichide');\n    }\n\n    if (this.firstParty() !== this.thirdParty()) {\n      if (this.firstParty()) {\n        options.push('1p');\n      }\n      if (this.thirdParty()) {\n        options.push('3p');\n      }\n    }\n\n    if (this.domains !== undefined) {\n      options.push('domain=<hashed>');\n    }\n\n    if (this.denyallow !== undefined) {\n      options.push('denyallow=<hashed>');\n    }\n\n    if (this.isBadFilter()) {\n      options.push('badfilter');\n    }\n\n    if (options.length > 0) {\n      filter += `$${options.join(',')}`;\n    }\n\n    return filter;\n  }\n\n  // Public API (Read-Only)\n  public getIdWithoutBadFilter(): number {\n    // This method computes the id ignoring the $badfilter option (which will\n    // correspond to the ID of filters being discarded). This allows us to\n    // eliminate bad filters by comparing IDs, which is more robust and faster\n    // than string comparison.\n    return computeFilterId(\n      this.csp,\n      this.mask & ~NETWORK_FILTER_MASK.isBadFilter,\n      this.filter,\n      this.hostname,\n      this.domains,\n      this.denyallow,\n      this.redirect,\n    );\n  }\n\n  public getId(): number {\n    if (this.id === undefined) {\n      this.id = computeFilterId(\n        this.csp,\n        this.mask,\n        this.filter,\n        this.hostname,\n        this.domains,\n        this.denyallow,\n        this.redirect,\n      );\n    }\n    return this.id;\n  }\n\n  public hasFilter(): boolean {\n    return this.filter !== undefined;\n  }\n\n  public hasDomains(): boolean {\n    return this.domains !== undefined;\n  }\n\n  public getMask(): number {\n    return this.mask;\n  }\n\n  public getCptMask(): number {\n    return this.getMask() & FROM_ANY;\n  }\n\n  public isRedirect(): boolean {\n    return this.redirect !== undefined;\n  }\n\n  public isRedirectRule(): boolean {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isRedirectRule);\n  }\n\n  public getRedirect(): string {\n    return this.redirect || '';\n  }\n\n  public hasHostname(): boolean {\n    return this.hostname !== undefined;\n  }\n\n  public getHostname(): string {\n    return this.hostname || '';\n  }\n\n  public getFilter(): string {\n    return this.filter || '';\n  }\n\n  public getRegex(): RegExp {\n    if (this.regex === undefined) {\n      this.regex =\n        this.filter !== undefined && this.isRegex()\n          ? compileRegex(\n              this.filter,\n              this.isLeftAnchor(),\n              this.isRightAnchor(),\n              this.isFullRegex(),\n            )\n          : MATCH_ALL;\n    }\n\n    return this.regex;\n  }\n\n  public getTokens(): Uint32Array[] {\n    TOKENS_BUFFER.reset();\n\n    // If there is only one domain and no domain negation, we also use this\n    // domain as a token.\n    if (\n      this.domains !== undefined &&\n      this.domains.hostnames !== undefined &&\n      this.domains.entities === undefined &&\n      this.domains.notHostnames === undefined &&\n      this.domains.notEntities === undefined &&\n      this.domains.hostnames.length === 1\n    ) {\n      TOKENS_BUFFER.push(this.domains.hostnames[0]);\n    }\n\n    // Get tokens from filter\n    if (this.isFullRegex() === false) {\n      if (this.filter !== undefined) {\n        const skipLastToken = !this.isRightAnchor();\n        const skipFirstToken = !this.isLeftAnchor();\n        tokenizeWithWildcardsInPlace(this.filter, skipFirstToken, skipLastToken, TOKENS_BUFFER);\n      }\n\n      // Append tokens from hostname, if any\n      if (this.hostname !== undefined) {\n        tokenizeInPlace(\n          this.hostname,\n          false,\n          this.filter !== undefined && this.filter.charCodeAt(0) === 42 /* '*' */,\n          TOKENS_BUFFER,\n        );\n      }\n    } else if (this.filter !== undefined) {\n      tokenizeRegexInPlace(this.filter, TOKENS_BUFFER);\n    }\n\n    // If we got no tokens for the filter/hostname part, then we will dispatch\n    // this filter in multiple buckets based on the domains option.\n    if (\n      TOKENS_BUFFER.empty() === true &&\n      this.domains !== undefined &&\n      this.domains.hostnames !== undefined &&\n      this.domains.entities === undefined &&\n      this.domains.notHostnames === undefined &&\n      this.domains.notEntities === undefined\n    ) {\n      const result: Uint32Array[] = [];\n      for (const hostname of this.domains.hostnames) {\n        const arr = new Uint32Array(1);\n        arr[0] = hostname;\n        result.push(arr);\n      }\n      return result;\n    }\n\n    // Add optional token for types\n    if (TOKENS_BUFFER.empty() === true && this.fromAny() === false) {\n      const types = getListOfRequestTypes(this);\n      if (types.length !== 0) {\n        const result: Uint32Array[] = [];\n        for (const type of types) {\n          const arr = new Uint32Array(1);\n          arr[0] = NORMALIZED_TYPE_TOKEN[type];\n          result.push(arr);\n        }\n        return result;\n      }\n    }\n\n    // Add optional token for protocol\n    if (this.fromHttp() === true && this.fromHttps() === false) {\n      TOKENS_BUFFER.push(HTTP_HASH);\n    } else if (this.fromHttps() === true && this.fromHttp() === false) {\n      TOKENS_BUFFER.push(HTTPS_HASH);\n    }\n\n    return [TOKENS_BUFFER.slice()];\n  }\n\n  /**\n   * Check if this filter should apply to a request with this content type.\n   */\n  public isCptAllowed(cpt: RequestType): boolean {\n    const mask: number | undefined = REQUEST_TYPE_TO_MASK[cpt];\n    if (mask !== undefined) {\n      return getBit(this.mask, mask);\n    }\n\n    // If content type is not supported (or not specified), we return `true`\n    // only if the filter does not specify any resource type.\n    return this.fromAny();\n  }\n\n  public isException() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isException);\n  }\n\n  public isHostnameAnchor() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isHostnameAnchor);\n  }\n\n  public isRightAnchor() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isRightAnchor);\n  }\n\n  public isLeftAnchor() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isLeftAnchor);\n  }\n\n  public isImportant() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isImportant);\n  }\n\n  public isFullRegex(): boolean {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isFullRegex);\n  }\n\n  public isRegex() {\n    return (\n      getBit(this.mask, NETWORK_FILTER_MASK.isRegex) ||\n      getBit(this.mask, NETWORK_FILTER_MASK.isFullRegex)\n    );\n  }\n\n  public isPlain() {\n    return !this.isRegex();\n  }\n\n  public isCSP() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isCSP);\n  }\n\n  public isElemHide() {\n    return this.isSpecificHide() && this.isGenericHide();\n  }\n\n  public isSpecificHide() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isSpecificHide);\n  }\n\n  public isGenericHide() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isGenericHide);\n  }\n\n  public isBadFilter() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isBadFilter);\n  }\n\n  public isUnicode() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.isUnicode);\n  }\n\n  public fromAny() {\n    return this.getCptMask() === FROM_ANY;\n  }\n\n  public thirdParty() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.thirdParty);\n  }\n\n  public firstParty() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.firstParty);\n  }\n\n  public fromImage() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromImage);\n  }\n\n  public fromMedia() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromMedia);\n  }\n\n  public fromObject() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromObject);\n  }\n\n  public fromOther() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromOther);\n  }\n\n  public fromPing() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromPing);\n  }\n\n  public fromScript() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromScript);\n  }\n\n  public fromStylesheet() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromStylesheet);\n  }\n\n  public fromDocument() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromDocument);\n  }\n\n  public fromSubdocument() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromSubdocument);\n  }\n\n  public fromWebsocket() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromWebsocket);\n  }\n\n  public fromHttp() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromHttp);\n  }\n\n  public fromHttps() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromHttps);\n  }\n\n  public fromXmlHttpRequest() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromXmlHttpRequest);\n  }\n\n  public fromFont() {\n    return getBit(this.mask, NETWORK_FILTER_MASK.fromFont);\n  }\n}\n\n// ---------------------------------------------------------------------------\n// Filter parsing\n// ---------------------------------------------------------------------------\n\nfunction setNetworkMask(mask: number, m: number, value: boolean): number {\n  if (value === true) {\n    return setBit(mask, m);\n  }\n\n  return clearBit(mask, m);\n}\n\n/**\n * Check if the sub-string contained between the indices start and end is a\n * regex filter (it contains a '*' or '^' char).\n */\nfunction checkIsRegex(filter: string, start: number, end: number): boolean {\n  const indexOfSeparator = filter.indexOf('^', start);\n  if (indexOfSeparator !== -1 && indexOfSeparator < end) {\n    return true;\n  }\n\n  const indexOfWildcard = filter.indexOf('*', start);\n  return indexOfWildcard !== -1 && indexOfWildcard < end;\n}\n\n/**\n * Handle hostname anchored filters, given 'hostname' from ||hostname and\n * request's hostname, check if there is a match. This is tricky because\n * filters authors rely and different assumptions. We can have prefix of suffix\n * matches of anchor.\n */\nexport function isAnchoredByHostname(\n  filterHostname: string,\n  hostname: string,\n  isFollowedByWildcard: boolean,\n): boolean {\n  // Corner-case, if `filterHostname` is empty, then it's a match\n  if (filterHostname.length === 0) {\n    return true;\n  }\n\n  // `filterHostname` cannot be longer than actual hostname\n  if (filterHostname.length > hostname.length) {\n    return false;\n  }\n\n  // If they have the same length, they should be equal\n  if (filterHostname.length === hostname.length) {\n    return filterHostname === hostname;\n  }\n\n  // Check if `filterHostname` appears anywhere in `hostname`\n  const matchIndex = hostname.indexOf(filterHostname);\n\n  // No match\n  if (matchIndex === -1) {\n    return false;\n  }\n\n  // `filterHostname` is a prefix of `hostname` and needs to match full a label.\n  //\n  // Examples (filterHostname, hostname):\n  //   * (foo, foo.com)\n  //   * (sub.foo, sub.foo.com)\n  if (matchIndex === 0) {\n    return (\n      isFollowedByWildcard === true ||\n      hostname.charCodeAt(filterHostname.length) === 46 /* '.' */ ||\n      filterHostname.charCodeAt(filterHostname.length - 1) === 46 /* '.' */\n    );\n  }\n\n  // `filterHostname` is a suffix of `hostname`.\n  //\n  // Examples (filterHostname, hostname):\n  //    * (foo.com, sub.foo.com)\n  //    * (com, foo.com)\n  if (hostname.length === matchIndex + filterHostname.length) {\n    return (\n      hostname.charCodeAt(matchIndex - 1) === 46 /* '.' */ ||\n      filterHostname.charCodeAt(0) === 46 /* '.' */\n    );\n  }\n\n  // `filterHostname` is infix of `hostname` and needs match full labels\n  return (\n    (isFollowedByWildcard === true ||\n      hostname.charCodeAt(filterHostname.length) === 46 /* '.' */ ||\n      filterHostname.charCodeAt(filterHostname.length - 1) === 46) /* '.' */ &&\n    (hostname.charCodeAt(matchIndex - 1) === 46 || filterHostname.charCodeAt(0) === 46)\n  );\n}\n\n/**\n * Specialize a network filter depending on its type. It allows for more\n * efficient matching function.\n */\nfunction checkPattern(filter: NetworkFilter, request: Request): boolean {\n  const pattern = filter.getFilter();\n\n  if (filter.isHostnameAnchor() === true) {\n    // Make sure request is anchored by hostname before proceeding to matching\n    const filterHostname = filter.getHostname();\n    if (\n      isAnchoredByHostname(\n        filterHostname,\n        request.hostname,\n        filter.filter !== undefined && filter.filter.charCodeAt(0) === 42 /* '*' */,\n      ) === false\n    ) {\n      return false;\n    }\n\n    // At this point we know request is hostname anchored so we match the rest of the filter.\n    if (filter.isRegex()) {\n      // ||pattern*^\n      return filter\n        .getRegex()\n        .test(request.url.slice(request.url.indexOf(filterHostname) + filterHostname.length));\n    } else if (filter.isRightAnchor() && filter.isLeftAnchor()) {\n      // |||pattern|\n      // Since this is not a regex, the filter pattern must follow the hostname\n      // with nothing in between. So we extract the part of the URL following\n      // after hostname and will perform the matching on it.\n      const urlAfterHostname = request.url.slice(\n        request.url.indexOf(filterHostname) + filterHostname.length,\n      );\n\n      // Since it must follow immediatly after the hostname and be a suffix of\n      // the URL, we conclude that filter must be equal to the part of the\n      // url following the hostname.\n      return pattern === urlAfterHostname;\n    } else if (filter.isRightAnchor()) {\n      // ||pattern|\n      const requestHostname = request.hostname;\n      if (filter.hasFilter() === false) {\n        // In this specific case it means that the specified hostname should match\n        // at the end of the hostname of the request. This allows to prevent false\n        // positive like ||foo.bar which would match https://foo.bar.baz where\n        // ||foo.bar^ would not.\n        return (\n          filterHostname.length === requestHostname.length ||\n          requestHostname.endsWith(filterHostname)\n        );\n      } else {\n        // pattern|\n        return request.url.endsWith(pattern);\n      }\n    } else if (filter.isLeftAnchor()) {\n      // ||pattern + left-anchor => This means that a plain pattern needs to appear\n      // exactly after the hostname, with nothing in between.\n      // Since this is not a regex, the filter pattern must follow the hostname\n      // with nothing in between. So we extract the part of the URL following\n      // after hostname and will perform the matching on it.\n      return fastStartsWithFrom(\n        request.url,\n        pattern,\n        request.url.indexOf(filterHostname) + filterHostname.length,\n      );\n    }\n\n    if (filter.hasFilter() === false) {\n      return true;\n    }\n\n    // We consider this a match if the plain patter (i.e.: filter) appears anywhere.\n    return (\n      request.url.indexOf(pattern, request.url.indexOf(filterHostname) + filterHostname.length) !==\n      -1\n    );\n  } else if (filter.isRegex()) {\n    // pattern*^\n    return filter.getRegex().test(request.url);\n  } else if (filter.isLeftAnchor() && filter.isRightAnchor()) {\n    // |pattern|\n    return request.url === pattern;\n  } else if (filter.isLeftAnchor()) {\n    // |pattern\n    return fastStartsWith(request.url, pattern);\n  } else if (filter.isRightAnchor()) {\n    // pattern|\n    return request.url.endsWith(pattern);\n  }\n\n  // pattern\n  if (filter.hasFilter() === false) {\n    return true;\n  }\n\n  return request.url.indexOf(pattern) !== -1;\n}\n\nfunction checkOptions(filter: NetworkFilter, request: Request): boolean {\n  // We first discard requests based on type, protocol and party. This is really\n  // cheap and should be done first.\n  if (\n    filter.isCptAllowed(request.type) === false ||\n    (request.isHttps === true && filter.fromHttps() === false) ||\n    (request.isHttp === true && filter.fromHttp() === false) ||\n    (filter.firstParty() === false && request.isFirstParty === true) ||\n    (filter.thirdParty() === false && request.isThirdParty === true)\n  ) {\n    return false;\n  }\n\n  // If `sourceHostname` is *not* matched by `domain` then the request should be allowed.\n  if (\n    filter.domains !== undefined &&\n    filter.domains.match(request.sourceHostnameHashes, request.sourceEntityHashes) === false\n  ) {\n    return false;\n  }\n\n  // If `hostname` is matched by `denyallow` then the request should be allowed.\n  if (\n    filter.denyallow !== undefined &&\n    filter.denyallow.match(request.getHostnameHashes(), request.getEntityHashes()) === true\n  ) {\n    return false;\n  }\n\n  return true;\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport Config from './config';\nimport CosmeticFilter from './filters/cosmetic';\nimport NetworkFilter from './filters/network';\nimport { fastStartsWith, fastStartsWithFrom } from './utils';\n\nexport const enum FilterType {\n  NOT_SUPPORTED = 0,\n  NETWORK = 1,\n  COSMETIC = 2,\n}\n\n/**\n * Given a single line (string), checks if this would likely be a cosmetic\n * filter, a network filter or something that is not supported. This check is\n * performed before calling a more specific parser to create an instance of\n * `NetworkFilter` or `CosmeticFilter`.\n */\nexport function detectFilterType(line: string): FilterType {\n  // Ignore empty line\n  if (line.length === 0 || line.length === 1) {\n    return FilterType.NOT_SUPPORTED;\n  }\n\n  // Ignore comments\n  const firstCharCode: number = line.charCodeAt(0);\n  const secondCharCode: number = line.charCodeAt(1);\n  if (\n    firstCharCode === 33 /* '!' */ ||\n    (firstCharCode === 35 /* '#' */ && secondCharCode <= 32) ||\n    (firstCharCode === 91 /* '[' */ && fastStartsWith(line, '[Adblock'))\n  ) {\n    return FilterType.NOT_SUPPORTED;\n  }\n\n  // Fast heuristics to detect network filters\n  const lastCharCode: number = line.charCodeAt(line.length - 1);\n  if (\n    firstCharCode === 36 /* '$' */ ||\n    firstCharCode === 38 /* '&' */ ||\n    firstCharCode === 42 /* '*' */ ||\n    firstCharCode === 45 /* '-' */ ||\n    firstCharCode === 46 /* '.' */ ||\n    firstCharCode === 47 /* '/' */ ||\n    firstCharCode === 58 /* ':' */ ||\n    firstCharCode === 61 /* '=' */ ||\n    firstCharCode === 63 /* '?' */ ||\n    firstCharCode === 64 /* '@' */ ||\n    firstCharCode === 95 /* '_' */ ||\n    firstCharCode === 124 /* '|' */ ||\n    lastCharCode === 124 /* '|' */\n  ) {\n    return FilterType.NETWORK;\n  }\n\n  // Ignore Adguard cosmetics\n  // `$$` = HTML filtering rules\n  const dollarIndex: number = line.indexOf('$');\n  if (dollarIndex !== -1 && dollarIndex !== line.length - 1) {\n    const afterDollarIndex = dollarIndex + 1;\n    const afterDollarCharCode = line.charCodeAt(afterDollarIndex);\n\n    // Ignore Adguard HTML rewrite rules\n    if (\n      afterDollarCharCode === 36 /* '$' */ ||\n      (afterDollarCharCode === 64 /* '@' */ &&\n        fastStartsWithFrom(line, /* $@$ */ '@$', afterDollarIndex))\n    ) {\n      return FilterType.NOT_SUPPORTED;\n    }\n  }\n\n  // Check if filter is cosmetics\n  const sharpIndex: number = line.indexOf('#');\n  if (sharpIndex !== -1 && sharpIndex !== line.length - 1) {\n    const afterSharpIndex = sharpIndex + 1;\n    const afterSharpCharCode = line.charCodeAt(afterSharpIndex);\n\n    if (\n      afterSharpCharCode === 35 /* '#'*/ ||\n      (afterSharpCharCode === 64 /* '@' */ &&\n        fastStartsWithFrom(line, /* #@# */ '@#', afterSharpIndex))\n      // TODO - support ADB/AdGuard extended css selectors\n      // || (afterSharpCharCode === 63 /* '?' */ &&\n      //   fastStartsWithFrom(line, /* #?# */ '?#', afterSharpIndex))\n    ) {\n      // Parse supported cosmetic filter\n      // `##` `#@#`\n      return FilterType.COSMETIC;\n    } else if (\n      (afterSharpCharCode === 64 /* '@'*/ &&\n        (fastStartsWithFrom(line, /* #@$# */ '@$#', afterSharpIndex) ||\n          fastStartsWithFrom(line, /* #@%# */ '@%#', afterSharpIndex))) ||\n      (afterSharpCharCode === 37 /* '%' */ &&\n        fastStartsWithFrom(line, /* #%# */ '%#', afterSharpIndex)) ||\n      (afterSharpCharCode === 36 /* '$' */ &&\n        fastStartsWithFrom(line, /* #$# */ '$#', afterSharpIndex)) ||\n      (afterSharpCharCode === 63 /* '?' */ &&\n        fastStartsWithFrom(line, /* #?# */ '?#', afterSharpIndex))\n    ) {\n      // Ignore Adguard cosmetics\n      // `#$#` `#@$#`\n      // `#%#` `#@%#`\n      // `#?#`\n      return FilterType.NOT_SUPPORTED;\n    }\n  }\n\n  // Everything else is a network filter\n  return FilterType.NETWORK;\n}\n\nexport function parseFilter(filter: string): NetworkFilter | CosmeticFilter | null {\n  const filterType = detectFilterType(filter);\n\n  if (filterType === FilterType.NETWORK) {\n    return NetworkFilter.parse(filter, true);\n  } else if (filterType === FilterType.COSMETIC) {\n    return CosmeticFilter.parse(filter, true);\n  }\n\n  return null;\n}\n\nexport function f(strings: TemplateStringsArray): NetworkFilter | CosmeticFilter | null {\n  return parseFilter(strings[0]);\n}\n\nexport function parseFilters(\n  list: string,\n  config: Partial<Config> = new Config(),\n): { networkFilters: NetworkFilter[]; cosmeticFilters: CosmeticFilter[] } {\n  config = new Config(config);\n\n  const networkFilters: NetworkFilter[] = [];\n  const cosmeticFilters: CosmeticFilter[] = [];\n  const lines = list.split('\\n');\n\n  for (let i = 0; i < lines.length; i += 1) {\n    let line = lines[i];\n\n    // Check if `line` should be left-trimmed\n    if (line.length !== 0 && line.charCodeAt(0) <= 32) {\n      line = line.trim();\n    }\n\n    // Handle continuations\n    if (line.length > 2) {\n      while (\n        i < lines.length - 1 &&\n        line.charCodeAt(line.length - 1) === 92 &&\n        line.charCodeAt(line.length - 2) === 32\n      ) {\n        line = line.slice(0, -2);\n\n        const nextLine = lines[i + 1];\n        if (\n          nextLine.length > 4 &&\n          nextLine.charCodeAt(0) === 32 &&\n          nextLine.charCodeAt(1) === 32 &&\n          nextLine.charCodeAt(2) === 32 &&\n          nextLine.charCodeAt(3) === 32 &&\n          nextLine.charCodeAt(4) !== 32\n        ) {\n          line += nextLine.slice(4);\n          i += 1;\n        } else {\n          break;\n        }\n      }\n    }\n\n    // Check if `line` should be right-trimmed\n    if (line.length !== 0 && line.charCodeAt(line.length - 1) <= 32) {\n      line = line.trim();\n    }\n\n    // Detect if filter is supported, network or cosmetic\n    const filterType = detectFilterType(line);\n\n    if (filterType === FilterType.NETWORK && config.loadNetworkFilters === true) {\n      const filter = NetworkFilter.parse(line, config.debug);\n      if (filter !== null) {\n        networkFilters.push(filter);\n      }\n    } else if (filterType === FilterType.COSMETIC && config.loadCosmeticFilters === true) {\n      const filter = CosmeticFilter.parse(line, config.debug);\n      if (filter !== null) {\n        if (config.loadGenericCosmeticsFilters === true || filter.isGenericHide() === false) {\n          cosmeticFilters.push(filter);\n        }\n      }\n    }\n  }\n\n  return { networkFilters, cosmeticFilters };\n}\n\nfunction getFilters(list: string, config?: Partial<Config>): (NetworkFilter | CosmeticFilter)[] {\n  const { networkFilters, cosmeticFilters } = parseFilters(list, config);\n  const filters: (NetworkFilter | CosmeticFilter)[] = [];\n  return filters.concat(networkFilters).concat(cosmeticFilters);\n}\n\nexport interface IListDiff {\n  newNetworkFilters: NetworkFilter[];\n  newCosmeticFilters: CosmeticFilter[];\n  removedCosmeticFilters: number[];\n  removedNetworkFilters: number[];\n}\n\nexport interface IRawDiff {\n  added: string[];\n  removed: string[];\n}\n\n/**\n * Helper used to return a set of lines as strings where each line is\n * guaranteed to be a valid filter (i.e.: comments, empty lines and\n * un-supported filters are dropped).\n */\nexport function getLinesWithFilters(\n  list: string,\n  config: Partial<Config> = new Config(),\n): Set<string> {\n  // Set config to `debug` so that we keep track of raw lines for each filter\n  return new Set(\n    getFilters(list, new Config(Object.assign({}, config, { debug: true }))).map(\n      ({ rawLine }) => rawLine as string,\n    ),\n  );\n}\n\n/**\n * Given two versions of the same subscription (e.g.: EasyList) as a string,\n * generate a raw diff (i.e.: a list of filters added and filters removed, in\n * their raw string form).\n */\nexport function generateDiff(\n  prevRevision: string,\n  newRevision: string,\n  config: Partial<Config> = new Config(),\n): IRawDiff {\n  // Set config to `debug` so that we keep track of raw lines for each filter\n  const debugConfig = new Config(Object.assign({}, config, { debug: true }));\n\n  const prevRevisionFilters = getFilters(prevRevision, debugConfig);\n  const prevRevisionIds = new Set(prevRevisionFilters.map((filter) => filter.getId()));\n\n  const newRevisionFilters = getFilters(newRevision, debugConfig);\n  const newRevisionIds = new Set(newRevisionFilters.map((filter) => filter.getId()));\n\n  // Check which filters were added, based on ID\n  const added: Set<string> = new Set();\n  for (const filter of newRevisionFilters) {\n    if (!prevRevisionIds.has(filter.getId())) {\n      added.add(filter.rawLine as string);\n    }\n  }\n\n  // Check which filters were removed, based on ID\n  const removed: Set<string> = new Set();\n  for (const filter of prevRevisionFilters) {\n    if (!newRevisionIds.has(filter.getId())) {\n      removed.add(filter.rawLine as string);\n    }\n  }\n\n  return { added: Array.from(added), removed: Array.from(removed) };\n}\n\n/**\n * Merge several raw diffs into one, taking care of accumulating added and\n * removed filters, even if several diffs add/remove the same ones.\n */\nexport function mergeDiffs(diffs: Partial<IRawDiff>[]): IRawDiff {\n  const addedCumul: Set<string> = new Set();\n  const removedCumul: Set<string> = new Set();\n\n  for (const { added, removed } of diffs) {\n    if (added !== undefined) {\n      for (const str of added) {\n        if (removedCumul.has(str)) {\n          removedCumul.delete(str);\n        }\n        addedCumul.add(str);\n      }\n    }\n\n    if (removed !== undefined) {\n      for (const str of removed) {\n        if (addedCumul.has(str)) {\n          addedCumul.delete(str);\n        }\n        removedCumul.add(str);\n      }\n    }\n  }\n\n  return {\n    added: Array.from(addedCumul),\n    removed: Array.from(removedCumul),\n  };\n}\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { getResourceForMime } from '@remusao/small';\n\nimport { StaticDataView, sizeOfASCII, sizeOfByte } from './data-view';\n\n// Polyfill for `btoa`\nfunction btoaPolyfill(buffer: string): string {\n  if (typeof btoa !== 'undefined') {\n    return btoa(buffer);\n  } else if (typeof Buffer !== 'undefined') {\n    return Buffer.from(buffer).toString('base64');\n  }\n  return buffer;\n}\n\ninterface Resource {\n  contentType: string;\n  body: string;\n}\n\n// TODO - support # alias\n// TODO - support empty resource body\n\n/**\n * Abstraction on top of resources.txt used for redirections as well as script\n * injections. It contains logic to parse, serialize and get resources by name\n * for use in the engine.\n */\nexport default class Resources {\n  public static deserialize(buffer: StaticDataView): Resources {\n    const checksum = buffer.getASCII();\n\n    // Deserialize `resources`\n    const resources: Map<string, Resource> = new Map();\n    const numberOfResources = buffer.getUint16();\n    for (let i = 0; i < numberOfResources; i += 1) {\n      resources.set(buffer.getASCII(), {\n        contentType: buffer.getASCII(),\n        body: buffer.getASCII(),\n      });\n    }\n\n    // Deserialize `js`\n    const js: Map<string, string> = new Map();\n    resources.forEach(({ contentType, body }, name) => {\n      if (contentType === 'application/javascript') {\n        js.set(name, body);\n      }\n    });\n\n    return new Resources({\n      checksum,\n      js,\n      resources,\n    });\n  }\n\n  public static parse(data: string, { checksum }: { checksum: string }): Resources {\n    const typeToResource: Map<string, Map<string, string>> = new Map();\n    const trimComments = (str: string) => str.replace(/^\\s*#.*$/gm, '');\n    const chunks = data.split('\\n\\n');\n\n    for (const chunk of chunks) {\n      const resource = trimComments(chunk).trim();\n      if (resource.length !== 0) {\n        const firstNewLine = resource.indexOf('\\n');\n        const split = resource.slice(0, firstNewLine).split(/\\s+/);\n        const name = split[0];\n        const type = split[1];\n        const body = resource.slice(firstNewLine + 1);\n\n        if (name === undefined || type === undefined || body === undefined) {\n          continue;\n        }\n\n        let resources = typeToResource.get(type);\n        if (resources === undefined) {\n          resources = new Map();\n          typeToResource.set(type, resources);\n        }\n        resources.set(name, body);\n      }\n    }\n\n    // The resource containing javascirpts to be injected\n    const js: Map<string, string> = typeToResource.get('application/javascript') || new Map();\n    for (const [key, value] of js.entries()) {\n      if (key.endsWith('.js')) {\n        js.set(key.slice(0, -3), value);\n      }\n    }\n\n    // Create a mapping from resource name to { contentType, data }\n    // used for request redirection.\n    const resourcesByName: Map<string, Resource> = new Map();\n    typeToResource.forEach((resources, contentType) => {\n      resources.forEach((resource: string, name: string) => {\n        resourcesByName.set(name, {\n          contentType,\n          body: resource,\n        });\n      });\n    });\n\n    return new Resources({\n      checksum,\n      js,\n      resources: resourcesByName,\n    });\n  }\n\n  public readonly checksum: string;\n  public readonly js: Map<string, string>;\n  public readonly resources: Map<string, Resource>;\n\n  constructor({ checksum = '', js = new Map(), resources = new Map() }: Partial<Resources> = {}) {\n    this.checksum = checksum;\n    this.js = js;\n    this.resources = resources;\n  }\n\n  public getResource(name: string): Resource & { dataUrl: string } {\n    const { body, contentType } = this.resources.get(name) || getResourceForMime(name);\n\n    let dataUrl;\n    if (contentType.indexOf(';') !== -1) {\n      dataUrl = `data:${contentType},${body}`;\n    } else {\n      dataUrl = `data:${contentType};base64,${btoaPolyfill(body)}`;\n    }\n\n    return { body, contentType, dataUrl };\n  }\n\n  public getSerializedSize(): number {\n    let estimatedSize = sizeOfASCII(this.checksum) + 2 * sizeOfByte(); // resources.size\n\n    this.resources.forEach(({ contentType, body }, name) => {\n      estimatedSize += sizeOfASCII(name) + sizeOfASCII(contentType) + sizeOfASCII(body);\n    });\n\n    return estimatedSize;\n  }\n\n  public serialize(buffer: StaticDataView): void {\n    // Serialize `checksum`\n    buffer.pushASCII(this.checksum);\n\n    // Serialize `resources`\n    buffer.pushUint16(this.resources.size);\n    this.resources.forEach(({ contentType, body }, name) => {\n      buffer.pushASCII(name);\n      buffer.pushASCII(contentType);\n      buffer.pushASCII(body);\n    });\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nexport function compactTokens(tokens: Uint32Array): Uint32Array {\n  const sorted = tokens.sort();\n  let lastIndex = 1;\n  for (let i = 1; i < sorted.length; i += 1) {\n    if (sorted[lastIndex - 1] !== sorted[i]) {\n      sorted[lastIndex++] = sorted[i];\n    }\n  }\n\n  return sorted.subarray(0, lastIndex);\n}\n\nexport function hasEmptyIntersection(s1: Uint32Array, s2: Uint32Array): boolean {\n  let i = 0;\n  let j = 0;\n\n  while (i < s1.length && j < s2.length && s1[i] !== s2[j]) {\n    if (s1[i] < s2[j]) {\n      i += 1;\n    } else {\n      j += 1;\n    }\n  }\n\n  return i === s1.length || j === s2.length;\n}\n\nconst EMPTY_UINT32_ARRAY = new Uint32Array(0);\n\nexport function concatTypedArrays(arrays: Uint32Array[]): Uint32Array {\n  if (arrays.length === 0) {\n    return EMPTY_UINT32_ARRAY;\n  }\n\n  if (arrays.length === 1) {\n    return arrays[0];\n  }\n\n  let totalSize = 0;\n  for (let i = 0; i < arrays.length; i += 1) {\n    totalSize += arrays[i].length;\n  }\n\n  const result = new Uint32Array(totalSize);\n  let index = 0;\n  for (let i = 0; i < arrays.length; i += 1) {\n    const array = arrays[i];\n    for (let j = 0; j < array.length; j += 1) {\n      result[index++] = array[j];\n    }\n  }\n\n  return result;\n}\n\nexport function mergeCompactSets(arrays: Uint32Array[]): Uint32Array {\n  return compactTokens(concatTypedArrays(arrays));\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport CosmeticFilter from '../filters/cosmetic';\nimport NetworkFilter, { NETWORK_FILTER_MASK } from '../filters/network';\nimport { setBit } from '../utils';\nimport { Domains } from '../engine/domains';\n\nfunction processRegex(r: RegExp): string {\n  return `(?:${r.source})`;\n}\n\nfunction escape(s: string): string {\n  return `(?:${s.replace(/[-/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&')})`;\n}\n\nfunction setWithDefault<K, V>(map: Map<K, V[]>, key: K, value: V): void {\n  let bucket = map.get(key);\n  if (bucket === undefined) {\n    bucket = [];\n    map.set(key, bucket);\n  }\n  bucket.push(value);\n}\n\nfunction groupBy(\n  filters: NetworkFilter[],\n  criteria: (filter: NetworkFilter) => string,\n): NetworkFilter[][] {\n  const grouped: Map<string, NetworkFilter[]> = new Map();\n  for (const filter of filters) {\n    setWithDefault(grouped, criteria(filter), filter);\n  }\n  return Array.from(grouped.values());\n}\n\nfunction splitBy(\n  filters: NetworkFilter[],\n  condition: (filter: NetworkFilter) => boolean,\n): {\n  positive: NetworkFilter[];\n  negative: NetworkFilter[];\n} {\n  const positive: NetworkFilter[] = [];\n  const negative: NetworkFilter[] = [];\n\n  for (const filter of filters) {\n    if (condition(filter)) {\n      positive.push(filter);\n    } else {\n      negative.push(filter);\n    }\n  }\n\n  return {\n    negative,\n    positive,\n  };\n}\n\ninterface IOptimization {\n  description: string;\n  groupByCriteria: (filter: NetworkFilter) => string;\n  select: (filter: NetworkFilter) => boolean;\n  fusion: (filters: NetworkFilter[]) => NetworkFilter;\n}\n\nconst OPTIMIZATIONS: IOptimization[] = [\n  {\n    description: 'Remove duplicated filters by ID',\n    fusion: (filters: NetworkFilter[]) => filters[0],\n    groupByCriteria: (filter: NetworkFilter) => '' + filter.getId(),\n    select: () => true,\n  },\n  {\n    description: 'Group idential filter with same mask but different domains in single filters',\n    fusion: (filters: NetworkFilter[]) => {\n      const hostnames: Set<number> = new Set();\n      const notHostnames: Set<number> = new Set();\n      const entities: Set<number> = new Set();\n      const notEntities: Set<number> = new Set();\n\n      for (const { domains } of filters) {\n        if (domains !== undefined) {\n          if (domains.hostnames !== undefined) {\n            for (const hash of domains.hostnames) {\n              hostnames.add(hash);\n            }\n          }\n\n          if (domains.entities !== undefined) {\n            for (const hash of domains.entities) {\n              entities.add(hash);\n            }\n          }\n\n          if (domains.notHostnames !== undefined) {\n            for (const hash of domains.notHostnames) {\n              notHostnames.add(hash);\n            }\n          }\n\n          if (domains.notEntities !== undefined) {\n            for (const hash of domains.notEntities) {\n              notEntities.add(hash);\n            }\n          }\n        }\n      }\n\n      return new NetworkFilter(\n        Object.assign({}, filters[0], {\n          domains: new Domains({\n            hostnames: hostnames.size !== 0 ? new Uint32Array(hostnames).sort() : undefined,\n            entities: entities.size !== 0 ? new Uint32Array(entities).sort() : undefined,\n            notHostnames:\n              notHostnames.size !== 0 ? new Uint32Array(notHostnames).sort() : undefined,\n            notEntities: notEntities.size !== 0 ? new Uint32Array(notEntities).sort() : undefined,\n          }),\n          rawLine:\n            filters[0].rawLine !== undefined\n              ? filters.map(({ rawLine }) => rawLine).join(' <+> ')\n              : undefined,\n        }),\n      );\n    },\n    groupByCriteria: (filter: NetworkFilter) =>\n      filter.getHostname() + filter.getFilter() + filter.getMask() + filter.getRedirect(),\n    select: (filter: NetworkFilter) =>\n      !filter.isCSP() && filter.denyallow === undefined && filter.domains !== undefined,\n  },\n  {\n    description: 'Group simple patterns, into a single filter',\n    fusion: (filters: NetworkFilter[]) => {\n      const patterns: string[] = [];\n      for (const f of filters) {\n        if (f.isRegex()) {\n          patterns.push(processRegex(f.getRegex()));\n        } else if (f.isRightAnchor()) {\n          patterns.push(`${escape(f.getFilter())}$`);\n        } else if (f.isLeftAnchor()) {\n          patterns.push(`^${escape(f.getFilter())}`);\n        } else {\n          patterns.push(escape(f.getFilter()));\n        }\n      }\n\n      return new NetworkFilter(\n        Object.assign({}, filters[0], {\n          mask: setBit(filters[0].mask, NETWORK_FILTER_MASK.isRegex),\n          rawLine:\n            filters[0].rawLine !== undefined\n              ? filters.map(({ rawLine }) => rawLine).join(' <+> ')\n              : undefined,\n          regex: new RegExp(patterns.join('|')),\n        }),\n      );\n    },\n    groupByCriteria: (filter: NetworkFilter) =>\n      '' + (filter.getMask() & ~NETWORK_FILTER_MASK.isRegex & ~NETWORK_FILTER_MASK.isFullRegex),\n    select: (filter: NetworkFilter) =>\n      filter.domains === undefined &&\n      filter.denyallow === undefined &&\n      !filter.isHostnameAnchor() &&\n      !filter.isRedirect() &&\n      !filter.isCSP(),\n  },\n];\n\n/**\n * Optimizer which returns the list of original filters.\n */\nexport function noopOptimizeNetwork(filters: NetworkFilter[]): NetworkFilter[] {\n  return filters;\n}\n\nexport function noopOptimizeCosmetic(filters: CosmeticFilter[]): CosmeticFilter[] {\n  return filters;\n}\n\n/**\n * Fusion a set of `filters` by applying optimizations sequentially.\n */\nexport function optimizeNetwork(filters: NetworkFilter[]): NetworkFilter[] {\n  const fused: NetworkFilter[] = [];\n  let toFuse = filters;\n\n  for (const { select, fusion, groupByCriteria } of OPTIMIZATIONS) {\n    const { positive, negative } = splitBy(toFuse, select);\n    toFuse = negative;\n\n    const groups = groupBy(positive, groupByCriteria);\n    for (const group of groups) {\n      if (group.length > 1) {\n        fused.push(fusion(group));\n      } else {\n        toFuse.push(group[0]);\n      }\n    }\n  }\n\n  for (const filter of toFuse) {\n    fused.push(filter);\n  }\n\n  return fused;\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport Config from '../config';\nimport { StaticDataView, EMPTY_UINT32_ARRAY, sizeOfBytes } from '../data-view';\nimport IFilter from '../filters/interface';\n\n// https://graphics.stanford.edu/~seander/bithacks.html#RoundUpPowerOf2\nfunction nextPow2(v: number): number {\n  v--;\n  v |= v >> 1;\n  v |= v >> 2;\n  v |= v >> 4;\n  v |= v >> 8;\n  v |= v >> 16;\n  v++;\n  return v;\n}\n\n/**\n * Generate unique IDs for requests, which is used to avoid matching the same\n * buckets multiple times on the same request (which can happen if a token\n * appears more than once in a URL).\n */\nlet UID = 1;\nfunction getNextId(): number {\n  const id = UID;\n  UID = (UID + 1) % 1000000000;\n  return id;\n}\n\n/**\n * List of filters being indexed using the same token in the index.\n */\ninterface Bucket<T extends IFilter> {\n  readonly filters: T[];\n  lastRequestSeen: number;\n}\n\nconst EMPTY_BUCKET: number = Number.MAX_SAFE_INTEGER >>> 0;\n\n/**\n * The ReverseIndex is an accelerating data structure which allows finding a\n * subset of the filters given a list of tokens seen in a URL. It is the core\n * of the adblocker's matching capabilities and speed.\n *\n * It has mainly two caracteristics:\n * 1. It is very compact and is able to load fast.\n * 2. It is *very fast* in finding potential candidates.\n *\n * Conceptually, the reverse index dispatches filters in \"buckets\" (an array of\n * one or more filters). Filters living in the same bucket are guaranteed to\n * share at least one of their tokens (appearing in the pattern). For example:\n *\n *   - Bucket 1 (ads):\n *       - /ads.js\n *       - /script/ads/tracking.js\n *       - /ads/\n *   - Bucket 2 (tracking)\n *       - /tracking.js\n *       - ||tracking.com/cdn\n *\n * We see that filters in \"Bucket 1\" are indexed using the token \"ads\" and\n * \"Bucket 2\" using token \"tracking\".\n *\n * This property allows to quickly discard most of the filters when we match a\n * URL. To achieve this, the URL is tokenized in the same way filters are\n * tokenized and for each token, we check if there are some filters available.\n *\n * For example:\n *\n *  URL \"https://tracking.com/\" has the following tokens: \"https\", \"tracking\"\n *  and \"com\". We immediatly see that we only check the two filters in the\n *  \"tracking\" bucket since they are the only ones having a common token with\n *  the URL.\n *\n * How do we pick the token for each filter?\n * =========================================\n *\n * Each filter is only indexed *once*, which means that we need to pick one of\n * the tokens appearing in the pattern. We choose the token such that each\n * filter is indexed using the token which was the *least seen* globally. In\n * other words, we pick the most discriminative token for each filter. This is\n * done using the following algorithm:\n *   1. Tokenize all the filters which will be stored in the index\n *   2. Compute a histogram of frequency of each token (globally)\n *   3. Select the best token for each filter (lowest frequency)\n */\nexport default class ReverseIndex<T extends IFilter> {\n  public static deserialize<T extends IFilter>(\n    buffer: StaticDataView,\n    deserialize: (view: StaticDataView) => T,\n    optimize: (filters: T[]) => T[],\n    config: Config,\n  ): ReverseIndex<T> {\n    const tokensLookupIndexSize = buffer.getUint32();\n    const bucketsIndexSize = buffer.getUint32();\n    const numberOfFilters = buffer.getUint32();\n\n    // Alignement to 4 bytes is important here since `view` (Uint8Array) can\n    // appear at any offset of `buffer`. But to be sure we can read back\n    // Uint32Array directly from raw buffer, the alignement has to be a\n    // multiple of 4. The same alignement is taken care of in `serialize`.\n    const view = StaticDataView.fromUint8Array(buffer.getBytes(true /* align */), config);\n    const tokensLookupIndex = view.getUint32ArrayView(tokensLookupIndexSize);\n    const bucketsIndex = view.getUint32ArrayView(bucketsIndexSize);\n    const filtersIndexStart = view.pos;\n    view.seekZero(); // not strictly needed but make sure reverse index can be compared with deep equal\n\n    return new ReverseIndex({\n      config,\n      deserialize,\n      filters: [],\n      optimize,\n    }).updateInternals({\n      bucketsIndex,\n      filtersIndexStart,\n      numberOfFilters,\n      tokensLookupIndex,\n      view,\n    });\n  }\n\n  // Internal, compact representation of the reverse index. It contains three\n  // distinct parts stored in the same typed array:\n  //\n  // 1. \"tokens lookup index\" allows to identify a sub-set of buckets which\n  // likely contain filters for a given token. It is an approximate dispatch\n  // table which maps a mask of N bits (N being smaller than 31 bits, the size\n  // of a token) to a list of buckets having a 'token' sharing these same N\n  // bits sub-set. If the binary representation of the token for bucket1 is\n  // 101010 and suffix has size 3, then we would lookup the \"tokens lookup\n  // index\" using the last 3 bits \"010\" which would give us the offset in our\n  // typed array where we can start reading the filters of buckets having a\n  // token ending with the same 3 bits. The value of N is always a power of 2\n  // depending on the total number of filters stored in the index; determined\n  // at the time `update(...)` is called.\n  //\n  // 2. \"buckets index\" is an array which associates tokens to filters. The\n  // structure is: token, filter, token, filter, etc. To identify all the\n  // filters indexed with 'token' a naive approach would be to iterate on\n  // \"buckets index\" and collect all the filters indexed with 'token'. This\n  // would be *very inefficient*! To make this process faster, filters in\n  // \"buckets index\" are grouped so that buckets sharing the same suffix of N\n  // bits in their indexing token (see \"tokens lookup index\") are stored side\n  // by side in the typed array. To know where this section start given a\n  // particular token, we use \"tokens lookup index\" which associated the suffix\n  // of size N to an index in \"buckets index\". From there we can iterate on the\n  // candidates.\n  //\n  // 3. \"filters index\" contains the filters themselves. \"buckets index\"\n  // presented earlier does not contain filters, but an index to the \"filters\n  // index\". This allows a filter to be indexed multiple times without\n  // introducing any overhead; the filter can be associated with multiple\n  // tokens in \"buckets index\" (each pointing to the same place in \"filters\n  // index\") but its actual representation is stored only once in \"filters\n  // index\".\n\n  private bucketsIndex: Uint32Array = EMPTY_UINT32_ARRAY;\n  private filtersIndexStart: number = 0;\n  private numberOfFilters: number = 0;\n  private tokensLookupIndex: Uint32Array = EMPTY_UINT32_ARRAY;\n  private view: StaticDataView;\n\n  // In-memory cache used to keep track of buckets which have been loaded from\n  // the compact representation (i.e.: this.view). It is not strictly necessary\n  // but will speed-up retrival of popular filters (since we do not have to\n  // perform the lookup in \"tokens index\" and \"buckets index\" everytime).\n  private readonly cache: Map<number, Bucket<T>> = new Map();\n\n  // Function used to load a filter (e.g.: CosmeticFilter or NetworkFilter)\n  // from its compact representation in the \"filters index\" section of the\n  // typed array. Each filter exposes a `serialize(...)` method which is used\n  // to store it in `this.view` (section \"filters index\"). While matching we\n  // need to retrieve the instance of the filter to perform matching and use\n  // `this.deserializeFilter(...)` to do so.\n  private readonly deserializeFilter: (view: StaticDataView) => T;\n\n  // Optional function which will be used to optimize a list of filters\n  // in-memory. Typically this is used while matching when a list of filters is\n  // loaded in memory and stored in `this.cache`. Before using the bucket, we\n  // call `this.optimize(...)` on the list of filters to allow some\n  // optimizations to be performed (e.g.: fusion of similar filters, etc.).\n  // Have a look into `./src/engine/optimizer.ts` for examples of such\n  // optimizations.\n  private readonly optimize: (filters: T[]) => T[];\n  private readonly config: Readonly<Config>;\n\n  constructor({\n    deserialize,\n    filters,\n    optimize,\n    config,\n  }: {\n    deserialize: (view: StaticDataView) => T;\n    filters: T[];\n    optimize: (filters: T[]) => T[];\n    config: Config;\n  }) {\n    this.view = StaticDataView.empty(config);\n    this.deserializeFilter = deserialize;\n    this.optimize = optimize;\n    this.config = config;\n\n    if (filters.length !== 0) {\n      this.update(filters, undefined);\n    }\n  }\n\n  /**\n   * Load all filters from this index in memory (i.e.: deserialize them from\n   * the byte array into NetworkFilter or CosmeticFilter instances). This is\n   * mostly useful for debugging or testing purposes.\n   */\n  public getFilters(): T[] {\n    const filters: T[] = [];\n\n    if (this.numberOfFilters === 0) {\n      return filters;\n    }\n\n    // set view cursor at the start of \"filters index\"\n    this.view.setPos(this.filtersIndexStart);\n\n    for (let i = 0; i < this.numberOfFilters; i += 1) {\n      filters.push(this.deserializeFilter(this.view));\n    }\n\n    return filters;\n  }\n\n  /**\n   * Return an array of all the tokens currently used as keys of the \"buckets index\".\n   */\n  public getTokens(): Uint32Array {\n    const tokens: Set<number> = new Set();\n\n    for (let i = 0; i < this.bucketsIndex.length; i += 2) {\n      tokens.add(this.bucketsIndex[i]);\n    }\n\n    return new Uint32Array(tokens);\n  }\n\n  /**\n   * Estimate the number of bytes needed to serialize this instance of `ReverseIndex`.\n   */\n  public getSerializedSize(): number {\n    // 12 = 4 bytes (tokensLookupIndex.length) + 4 bytes (bucketsIndex.length) + 4 bytes (numberOfFilters)\n    return 12 + sizeOfBytes(this.view.buffer, true /* align */);\n  }\n\n  /**\n   * Dump this index to `buffer`.\n   */\n  public serialize(buffer: StaticDataView): void {\n    buffer.pushUint32(this.tokensLookupIndex.length);\n    buffer.pushUint32(this.bucketsIndex.length);\n    buffer.pushUint32(this.numberOfFilters);\n\n    // Aligmenent is crucial here, see comment in `deserialize` for more info.\n    buffer.pushBytes(this.view.buffer, true /* align */);\n  }\n\n  /**\n   * Iterate on all filters found in buckets associated with the given list of\n   * tokens. The callback is called on each of them. Early termination can be\n   * achieved if the callback returns `false`.\n   *\n   * This will not check if each filter returned would match a given request but\n   * is instead used as a list of potential candidates (much smaller than the\n   * total set of filters; typically between 5 and 10 filters will be checked).\n   */\n  public iterMatchingFilters(tokens: Uint32Array, cb: (f: T) => boolean): void {\n    // Each request is assigned an ID so that we can keep track of the last\n    // request seen by each bucket in the reverse index. This provides a cheap\n    // way to prevent filters from being inspected more than once per request\n    // (which could happen if the same token appears more than once in the URL).\n    const requestId = getNextId();\n\n    for (const token of tokens) {\n      if (this.iterBucket(token, requestId, cb) === false) {\n        return;\n      }\n    }\n\n    // Fallback to 0 (i.e.: wildcard bucket) bucket if nothing was found before.\n    this.iterBucket(0, requestId, cb);\n  }\n\n  /**\n   * Re-create the internal data-structure of the reverse index *in-place*. It\n   * needs to be called with a list of new filters and optionally a list of ids\n   * (as returned by either NetworkFilter.getId() or CosmeticFilter.getId())\n   * which need to be removed from the index.\n   */\n  public update(newFilters: T[], removedFilters: Set<number> | undefined): void {\n    // Reset internal cache on each update\n    if (this.cache.size !== 0) {\n      this.cache.clear();\n    }\n\n    const compression = this.config.enableCompression;\n    let totalNumberOfTokens = 0;\n    let totalNumberOfIndexedFilters = 0;\n    const filtersTokens: Uint32Array[][] = [];\n\n    // Keep track of the final size of the buckets index. `bucketsIndexSize` is\n    // the number of indexed filters, multiplied by 2 (since we store both the\n    // token a filter is indexed with and the index of the filter).\n    let bucketsIndexSize = 0;\n\n    // Re-use the current size of \"filters index\" as a starting point so that\n    // we only need to update with new or removed filters. This saves time if\n    // we perform a small update on an existing index.\n    let estimatedBufferSize = this.view.buffer.byteLength - this.filtersIndexStart;\n\n    // Create a list of all filters which will be part of the index. This means\n    // loading existing filters, removing the ones that need to be deleted and\n    // adding the new ones.  At the same time, we update the estimation of\n    // buffer size needed to store this index.\n    let filters: T[] = this.getFilters();\n    if (filters.length !== 0) {\n      // If there is at least one existing filter, then we check if some should\n      // be removed. We subtract their size from the total estimated buffer\n      // size.\n      if (removedFilters !== undefined && removedFilters.size !== 0) {\n        filters = filters.filter((f) => {\n          if (removedFilters.has(f.getId())) {\n            estimatedBufferSize -= f.getSerializedSize(compression);\n            return false;\n          }\n\n          return true;\n        });\n      }\n\n      // Add new filters to the list and also update estimated size\n      for (const filter of newFilters) {\n        estimatedBufferSize += filter.getSerializedSize(compression);\n        filters.push(filter);\n      }\n    } else {\n      // In the case where there is no existing filter in the index (happens on\n      // initialization), then we can take a fast-path and not check removed\n      // filters at all. There is also no need to copy the array of filters.\n      filters = newFilters;\n      for (const filter of newFilters) {\n        estimatedBufferSize += filter.getSerializedSize(compression);\n      }\n    }\n\n    // No filters given; reset to empty index and abort.\n    if (filters.length === 0) {\n      this.updateInternals({\n        bucketsIndex: EMPTY_UINT32_ARRAY,\n        filtersIndexStart: 0,\n        numberOfFilters: 0,\n        tokensLookupIndex: EMPTY_UINT32_ARRAY,\n        view: StaticDataView.empty(this.config),\n      });\n      return;\n    }\n\n    // When we run in `debug` mode, we enable fully deterministic updates of\n    // internal data-structures. To this effect, we sort all filters before\n    // insertion.\n    if (this.config.debug === true) {\n      filters.sort((f1: T, f2: T): number => f1.getId() - f2.getId());\n    }\n\n    const histogram = new Uint32Array(Math.max(nextPow2(2 * filters.length), 256));\n\n    // Tokenize all filters stored in this index. And compute a histogram of\n    // tokens so that we can decide how to index each filter efficiently.\n    for (const filter of filters) {\n      // Tokenize `filter` and store the result in `filtersTokens` which will\n      // be used in the next step to select the best token for each filter.\n      const multiTokens = filter.getTokens();\n      filtersTokens.push(multiTokens);\n\n      // Update estimated size of \"buckets index\" based on number of times this\n      // particular filter will be indexed.\n      bucketsIndexSize += 2 * multiTokens.length; // token + filter index\n      totalNumberOfIndexedFilters += multiTokens.length;\n\n      // Each filter can be indexed more than once, so `getTokens(...)` returns\n      // multiple sets of tokens. We iterate on all of them and update the\n      // histogram for each.\n      for (const tokens of multiTokens) {\n        totalNumberOfTokens += tokens.length;\n        for (const token of tokens) {\n          histogram[token % histogram.length] += 1;\n        }\n      }\n    }\n\n    // Add size of bucketsIndex to total size (x4 because these are 32 bits numbers)\n    estimatedBufferSize += bucketsIndexSize * 4;\n\n    // Prepare \"tokens index\" (see documentation in constructor of `ReverseIndex` class above).\n    const tokensLookupIndexSize: number = Math.max(2, nextPow2(totalNumberOfIndexedFilters));\n    const mask: number = tokensLookupIndexSize - 1;\n    const suffixes: [number, number][][] = [];\n    for (let i = 0; i < tokensLookupIndexSize; i += 1) {\n      suffixes.push([]);\n    }\n\n    // Add size of tokensLookupIndex to total size (x4 because these are 32 bits numbers)\n    estimatedBufferSize += tokensLookupIndexSize * 4;\n\n    // At this point we know the number of bytes needed for the compact\n    // representation of this reverse index (\"tokens index\" + \"buckets index\" +\n    // \"filters index\"). We allocate it at once and proceed with populating it.\n    const buffer = StaticDataView.allocate(estimatedBufferSize, this.config);\n    const tokensLookupIndex = buffer.getUint32ArrayView(tokensLookupIndexSize);\n    const bucketsIndex = buffer.getUint32ArrayView(bucketsIndexSize);\n    const filtersIndexStart = buffer.getPos();\n\n    // For each filter, find the best token (least seen) based on histogram.\n    // Since we are iterating again on the filters, we populate \"filters index\"\n    // in the same loop and keep track of their indices so that we can later\n    // populate \"buckets index\".\n    for (let i = 0; i < filtersTokens.length; i += 1) {\n      const filter: T = filters[i];\n      const multiTokens: Uint32Array[] = filtersTokens[i];\n\n      // Serialize this filter and keep track of its index in the byte array;\n      // it will be used in \"buckets index\" to point to this filter.\n      const filterIndex = buffer.pos;\n      filter.serialize(buffer);\n\n      // Index the filter once per \"tokens\"\n      for (const tokens of multiTokens) {\n        // Find best token (least seen) from `tokens` using `histogram`.\n        let bestToken: number = 0; // default = wildcard bucket\n        let minCount: number = totalNumberOfTokens + 1;\n        for (const token of tokens) {\n          const tokenCount: number = histogram[token % histogram.length];\n          if (tokenCount < minCount) {\n            minCount = tokenCount;\n            bestToken = token;\n\n            // Fast path, if the current token has only been seen once, we can\n            // stop iterating since we will not find a better alternarive!\n            if (minCount === 1) {\n              break;\n            }\n          }\n        }\n\n        // `bestToken & mask` represents the N last bits of `bestToken`. We\n        // group all filters indexed with a token sharing the same N bits.\n        suffixes[bestToken & mask].push([bestToken, filterIndex]);\n      }\n    }\n\n    // Populate \"tokens index\" and \"buckets index\" based on best token found for each filter.\n    let indexInBucketsIndex = 0;\n    for (let i = 0; i < tokensLookupIndexSize; i += 1) {\n      const filtersForMask: [number, number][] = suffixes[i];\n      tokensLookupIndex[i] = indexInBucketsIndex;\n      for (const [token, filterIndex] of filtersForMask) {\n        bucketsIndex[indexInBucketsIndex++] = token;\n        bucketsIndex[indexInBucketsIndex++] = filterIndex;\n      }\n    }\n\n    // Update internals\n    buffer.seekZero();\n    this.updateInternals({\n      bucketsIndex,\n      filtersIndexStart,\n      numberOfFilters: filtersTokens.length,\n      tokensLookupIndex,\n      view: buffer,\n    });\n  }\n\n  private updateInternals({\n    bucketsIndex,\n    filtersIndexStart,\n    numberOfFilters,\n    tokensLookupIndex,\n    view,\n  }: {\n    bucketsIndex: Uint32Array;\n    filtersIndexStart: number;\n    numberOfFilters: number;\n    tokensLookupIndex: Uint32Array;\n    view: StaticDataView;\n  }): ReverseIndex<T> {\n    this.bucketsIndex = bucketsIndex;\n    this.filtersIndexStart = filtersIndexStart;\n    this.numberOfFilters = numberOfFilters;\n    this.tokensLookupIndex = tokensLookupIndex;\n    this.view = view;\n    return this;\n  }\n\n  /**\n   * If a bucket exists for the given token, call the callback on each filter\n   * found inside. An early termination mechanism is built-in, to stop iterating\n   * as soon as `false` is returned from the callback.\n   */\n  private iterBucket(token: number, requestId: number, cb: (f: T) => boolean): boolean {\n    let bucket: Bucket<T> | undefined =\n      this.config.enableInMemoryCache === true ? this.cache.get(token) : undefined;\n\n    // Lazily create bucket if it does not yet exist in memory. Lookup the\n    // compact bucket representation and find all filters being associated with\n    // `token`. Create a `Bucket` out of them and store them in cache.\n    if (bucket === undefined) {\n      const offset = token & (this.tokensLookupIndex.length - 1);\n      const startOfBucket = this.tokensLookupIndex[offset];\n\n      // We do not have any filters for this token\n      if (startOfBucket === EMPTY_BUCKET) {\n        return true;\n      }\n\n      // Since we do not store explicitly the number of filters in each\n      // \"bucket\", we check the index of the next one and use it to infer the\n      // number of filters (each filter being stored as a token + index to the\n      // \"filters store\")\n      const endOfBucket =\n        offset === this.tokensLookupIndex.length - 1\n          ? this.bucketsIndex.length\n          : this.tokensLookupIndex[offset + 1];\n\n      // Get indices of filters indexed with `token`, if any.\n      const filtersIndices: number[] = [];\n      for (let i = startOfBucket; i < endOfBucket; i += 2) {\n        const currentToken = this.bucketsIndex[i];\n        if (currentToken === token) {\n          filtersIndices.push(this.bucketsIndex[i + 1]);\n        }\n      }\n\n      // No filter indexed with `token`.\n      if (filtersIndices.length === 0) {\n        return true; // continue looking for a match\n      }\n\n      // If we have filters for `token` then deserialize filters in memory and\n      // create a `Bucket` instance to hold them for future access.\n      const filters: T[] = [];\n      const view = this.view;\n      for (let i = 0; i < filtersIndices.length; i += 1) {\n        view.setPos(filtersIndices[i]);\n        filters.push(this.deserializeFilter(view));\n      }\n\n      // Create new bucket with found filters (only optimize if we have more\n      // than one filter).\n      bucket = {\n        filters: filters.length > 1 ? this.optimize(filters) : filters,\n        lastRequestSeen: -1, // safe because all ids are positive\n      };\n\n      if (this.config.enableInMemoryCache === true) {\n        this.cache.set(token, bucket);\n      }\n    }\n\n    // Look for matching filter in this bucket\n    if (bucket.lastRequestSeen !== requestId) {\n      bucket.lastRequestSeen = requestId;\n      const filters = bucket.filters;\n      for (let i = 0; i < filters.length; i += 1) {\n        // Break the loop if the callback returns `false`\n        if (cb(filters[i]) === false) {\n          // Whenever we get a match from a filter, we also swap it one\n          // position up in the list. This way, over time, popular filters will\n          // be first and might match earlier. This should decrease the time\n          // needed to get a match.\n          if (i > 0) {\n            const filter = filters[i];\n            filters[i] = filters[i - 1];\n            filters[i - 1] = filter;\n          }\n\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport Config from '../../config';\nimport { StaticDataView, sizeOfBytes } from '../../data-view';\nimport IFilter from '../../filters/interface';\n\n// Empty filters is 4 bytes because we need at least one 32 bits number to keep\n// track of the number of filters in the container. If there is no filter then\n// the number will be 0.\nconst EMPTY_FILTERS = new Uint8Array(4);\n\n/**\n * Generic filters container (for both CosmeticFilter and NetworkFilter\n * instances). This abstracts away some of the logic to serialize/lazy-load\n * lists of filters (which is useful for things like generic cosmetic filters\n * or $badfilter).\n */\nexport default class FiltersContainer<T extends IFilter> {\n  public static deserialize<T extends IFilter>(\n    buffer: StaticDataView,\n    deserialize: (view: StaticDataView) => T,\n    config: Config,\n  ): FiltersContainer<T> {\n    const container = new FiltersContainer({ deserialize, config, filters: [] });\n    container.filters = buffer.getBytes();\n    return container;\n  }\n\n  // Data-view compatible typed array containing all the serialized filters.\n  public filters: Uint8Array;\n  private readonly deserialize: (view: StaticDataView) => T;\n\n  // This does not need to be serialized as it is owned globally by the FiltersEngine.\n  private readonly config: Config;\n\n  constructor({\n    config,\n    deserialize,\n    filters,\n  }: {\n    config: Config;\n    deserialize: (view: StaticDataView) => T;\n    filters: T[];\n  }) {\n    this.deserialize = deserialize;\n    this.filters = EMPTY_FILTERS;\n    this.config = config;\n\n    if (filters.length !== 0) {\n      this.update(filters, undefined);\n    }\n  }\n\n  /**\n   * Update filters based on `newFilters` and `removedFilters`.\n   */\n  public update(newFilters: T[], removedFilters: Set<number> | undefined): void {\n    // Estimate size of the buffer we will need to store filters. This avoids\n    // having to allocate a big chunk of memory up-front if it's not needed.\n    // We start with the current size of `this.filters` then update it with\n    // removed/added filters.\n    let bufferSizeEstimation: number = this.filters.byteLength;\n    let selected: T[] = [];\n    const compression = this.config.enableCompression;\n\n    // Add existing rules (removing the ones with ids in `removedFilters`)\n    const currentFilters = this.getFilters();\n    if (currentFilters.length !== 0) {\n      // If no filter was removed (we only add new ones), we don't need to\n      // filter out removed existing filters. So we just assign the array to\n      // `selected` directly to save a bit of effort.\n      if (removedFilters === undefined || removedFilters.size === 0) {\n        selected = currentFilters;\n      } else {\n        // There might be some removed selected filters, so we iterate through\n        // them and make sure we keep only the ones not having been deleted.\n        for (const filter of currentFilters) {\n          if (removedFilters.has(filter.getId()) === false) {\n            selected.push(filter);\n          } else {\n            bufferSizeEstimation -= filter.getSerializedSize(compression);\n          }\n        }\n      }\n    }\n\n    // If `selected` and `currentFilters` have the same length then no filter was removed.\n    const storedFiltersRemoved = selected.length !== currentFilters.length;\n\n    // Add new rules.\n    const numberOfExistingFilters: number = selected.length;\n    for (const filter of newFilters) {\n      bufferSizeEstimation += filter.getSerializedSize(compression);\n      selected.push(filter);\n    }\n\n    // Check if any new filter was added in `selected` (from `newFilters`).\n    const storedFiltersAdded: boolean = selected.length > numberOfExistingFilters;\n\n    // If selected changed, then update the compact representation of filters.\n    if (selected.length === 0) {\n      this.filters = EMPTY_FILTERS;\n    } else if (storedFiltersAdded === true || storedFiltersRemoved === true) {\n      // Store filters in their compact form\n      const buffer = StaticDataView.allocate(bufferSizeEstimation, this.config);\n      buffer.pushUint32(selected.length);\n\n      // When we run in `debug` mode, we enable fully deterministic updates of\n      // internal data-structure. To this effect, we sort all filters before\n      // insertion.\n      if (this.config.debug === true) {\n        selected.sort((f1: T, f2: T): number => f1.getId() - f2.getId());\n      }\n\n      for (const filter of selected) {\n        filter.serialize(buffer);\n      }\n\n      // Update internals\n      this.filters = buffer.buffer;\n    }\n  }\n\n  public getSerializedSize(): number {\n    return sizeOfBytes(this.filters, false /* no alignement */);\n  }\n\n  public serialize(buffer: StaticDataView): void {\n    buffer.pushBytes(this.filters);\n  }\n\n  public getFilters(): T[] {\n    // No filter stored in the container\n    if (this.filters.byteLength <= 4) {\n      return [];\n    }\n\n    // Load all filters in memory and store them in `cache`\n    const filters: T[] = [];\n    const buffer = StaticDataView.fromUint8Array(this.filters, this.config);\n    const numberOfFilters = buffer.getUint32();\n    for (let i = 0; i < numberOfFilters; i += 1) {\n      filters.push(this.deserialize(buffer));\n    }\n\n    return filters;\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport type { IMessageFromBackground } from '@cliqz/adblocker-content';\n\nimport { compactTokens, concatTypedArrays } from '../../compact-set';\nimport Config from '../../config';\nimport { StaticDataView } from '../../data-view';\nimport CosmeticFilter, { DEFAULT_HIDDING_STYLE } from '../../filters/cosmetic';\nimport {\n  getEntityHashesFromLabelsBackward,\n  getHostnameHashesFromLabelsBackward,\n} from '../../request';\nimport { hashStrings, tokenizeNoSkip } from '../../utils';\nimport { noopOptimizeCosmetic } from '../optimizer';\nimport ReverseIndex from '../reverse-index';\nimport FiltersContainer from './filters';\n\n/**\n * Given a list of CSS selectors, create a valid stylesheet ready to be\n * injected in the page. This also takes care to no create rules with too many\n * selectors for Chrome, see: https://crbug.com/804179\n */\nexport function createStylesheet(rules: string[], style: string): string {\n  if (rules.length === 0) {\n    return '';\n  }\n\n  const maximumNumberOfSelectors = 1024;\n  const parts: string[] = [];\n  const styleStr: string = ` { ${style} }`;\n\n  for (let i = 0; i < rules.length; i += maximumNumberOfSelectors) {\n    // Accumulate up to `maximumNumberOfSelectors` selectors into `selector`.\n    // We use string concatenation here since it's faster than using\n    // `Array.prototype.join`.\n    let selector = rules[i];\n    for (\n      let j = i + 1, end = Math.min(rules.length, i + maximumNumberOfSelectors);\n      j < end;\n      j += 1\n    ) {\n      selector += ',\\n' + rules[j];\n    }\n\n    // Insert CSS after last selector (e.g.: `{ display: none }`)\n    selector += styleStr;\n\n    // If `rules` has less than the limit, we can short-circuit here\n    if (rules.length < maximumNumberOfSelectors) {\n      return selector;\n    }\n\n    // Keep track of this chunk and process next ones\n    parts.push(selector);\n  }\n\n  // Join all chunks together\n  return parts.join('\\n');\n}\n\n/**\n * If at least one filter from `rules` has a custom style (e.g.: `##.foo\n * :style(...)`) then we fallback to `createStylesheetFromRulesWithCustomStyles`\n * which is slower than `createStylesheetFromRules`.\n */\nfunction createStylesheetFromRulesWithCustomStyles(rules: CosmeticFilter[]): string {\n  const selectorsPerStyle: Map<string, string[]> = new Map();\n\n  for (const rule of rules) {\n    const style = rule.getStyle();\n    const selectors = selectorsPerStyle.get(style);\n    if (selectors === undefined) {\n      selectorsPerStyle.set(style, [rule.getSelector()]);\n    } else {\n      selectors.push(rule.getSelector());\n    }\n  }\n\n  const stylesheets: string[] = [];\n  const selectorsPerStyleArray = Array.from(selectorsPerStyle.entries());\n  for (const [style, selectors] of selectorsPerStyleArray) {\n    stylesheets.push(createStylesheet(selectors, style));\n  }\n\n  return stylesheets.join('\\n\\n');\n}\n\n/**\n * Given a list of cosmetic filters, create a stylesheet ready to be injected.\n * This function is optimistic and will assume there is no `:style` filter in\n * `rules`. In case one is found on the way, we fallback to the slower\n * `createStylesheetFromRulesWithCustomStyles` function.\n */\nfunction createStylesheetFromRules(rules: CosmeticFilter[]): string {\n  const selectors: string[] = [];\n  for (const rule of rules) {\n    if (rule.hasCustomStyle()) {\n      return createStylesheetFromRulesWithCustomStyles(rules);\n    }\n\n    selectors.push(rule.selector);\n  }\n\n  return createStylesheet(selectors, DEFAULT_HIDDING_STYLE);\n}\n\nfunction createLookupTokens(hostname: string, domain: string): Uint32Array {\n  const hostnamesHashes = getHostnameHashesFromLabelsBackward(hostname, domain);\n  const entitiesHashes = getEntityHashesFromLabelsBackward(hostname, domain);\n  const tokens = new Uint32Array(hostnamesHashes.length + entitiesHashes.length);\n\n  let index = 0;\n\n  for (const hash of hostnamesHashes) {\n    tokens[index++] = hash;\n  }\n\n  for (const hash of entitiesHashes) {\n    tokens[index++] = hash;\n  }\n\n  return tokens;\n}\n\n/**\n * Efficient container for CosmeticFilter instances. Allows to quickly\n * retrieved scripts and stylesheets to inject in pages for a specific\n * hostname/domain.\n */\nexport default class CosmeticFilterBucket {\n  public static deserialize(buffer: StaticDataView, config: Config): CosmeticFilterBucket {\n    const bucket = new CosmeticFilterBucket({ config });\n\n    bucket.genericRules = FiltersContainer.deserialize(buffer, CosmeticFilter.deserialize, config);\n\n    bucket.classesIndex = ReverseIndex.deserialize(\n      buffer,\n      CosmeticFilter.deserialize,\n      noopOptimizeCosmetic,\n      config,\n    );\n\n    bucket.hostnameIndex = ReverseIndex.deserialize(\n      buffer,\n      CosmeticFilter.deserialize,\n      noopOptimizeCosmetic,\n      config,\n    );\n\n    bucket.hrefsIndex = ReverseIndex.deserialize(\n      buffer,\n      CosmeticFilter.deserialize,\n      noopOptimizeCosmetic,\n      config,\n    );\n\n    bucket.htmlIndex = ReverseIndex.deserialize(\n      buffer,\n      CosmeticFilter.deserialize,\n      noopOptimizeCosmetic,\n      config,\n    );\n\n    bucket.idsIndex = ReverseIndex.deserialize(\n      buffer,\n      CosmeticFilter.deserialize,\n      noopOptimizeCosmetic,\n      config,\n    );\n\n    bucket.unhideIndex = ReverseIndex.deserialize(\n      buffer,\n      CosmeticFilter.deserialize,\n      noopOptimizeCosmetic,\n      config,\n    );\n\n    return bucket;\n  }\n\n  // `genericRules` is a contiguous container of filters. In this case\n  // we keep track of all generic cosmetic filters, which allows us to\n  // efficiently inject them in any page (either all of them or none of\n  // them, without having to match against the hostname/domain of the\n  // page). Having them separated also makes it easier to disable them.\n  public genericRules: FiltersContainer<CosmeticFilter>;\n\n  // `hostnameIndex` contains all cosmetic filters which are specific to one or\n  // several domains (that includes entities as well). They are stored in a\n  // reverse index which allows to efficiently get a subset of the filters\n  // which could be injected on a given page (given hostname and domain).\n  public classesIndex: ReverseIndex<CosmeticFilter>;\n  public hostnameIndex: ReverseIndex<CosmeticFilter>;\n  public hrefsIndex: ReverseIndex<CosmeticFilter>;\n  public htmlIndex: ReverseIndex<CosmeticFilter>;\n  public idsIndex: ReverseIndex<CosmeticFilter>;\n  public unhideIndex: ReverseIndex<CosmeticFilter>;\n\n  // In-memory cache\n  public baseStylesheet: string | null;\n  public extraGenericRules: CosmeticFilter[] | null;\n\n  constructor({ filters = [], config }: { filters?: CosmeticFilter[]; config: Config }) {\n    this.genericRules = new FiltersContainer({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n    });\n\n    this.classesIndex = new ReverseIndex({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n      optimize: noopOptimizeCosmetic,\n    });\n\n    this.hostnameIndex = new ReverseIndex({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n      optimize: noopOptimizeCosmetic,\n    });\n\n    this.hrefsIndex = new ReverseIndex({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n      optimize: noopOptimizeCosmetic,\n    });\n\n    this.htmlIndex = new ReverseIndex({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n      optimize: noopOptimizeCosmetic,\n    });\n\n    this.idsIndex = new ReverseIndex({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n      optimize: noopOptimizeCosmetic,\n    });\n\n    this.unhideIndex = new ReverseIndex({\n      config,\n      deserialize: CosmeticFilter.deserialize,\n      filters: [],\n      optimize: noopOptimizeCosmetic,\n    });\n\n    // In-memory cache, lazily initialized\n    this.baseStylesheet = null;\n    this.extraGenericRules = null;\n\n    if (filters.length !== 0) {\n      this.update(filters, undefined, config);\n    }\n  }\n\n  public getFilters(): CosmeticFilter[] {\n    const filters: CosmeticFilter[] = [];\n    return filters.concat(\n      this.genericRules.getFilters(),\n      this.classesIndex.getFilters(),\n      this.hostnameIndex.getFilters(),\n      this.hrefsIndex.getFilters(),\n      this.htmlIndex.getFilters(),\n      this.idsIndex.getFilters(),\n      this.unhideIndex.getFilters(),\n    );\n  }\n\n  public update(\n    newFilters: CosmeticFilter[],\n    removedFilters: Set<number> | undefined,\n    config: Config,\n  ): void {\n    const classSelectors: CosmeticFilter[] = [];\n    const genericHideRules: CosmeticFilter[] = [];\n    const hostnameSpecificRules: CosmeticFilter[] = [];\n    const hrefSelectors: CosmeticFilter[] = [];\n    const htmlRules: CosmeticFilter[] = [];\n    const idSelectors: CosmeticFilter[] = [];\n    const unHideRules: CosmeticFilter[] = [];\n\n    for (const rule of newFilters) {\n      if (rule.isUnhide()) {\n        unHideRules.push(rule);\n      } else if (rule.isHtmlFiltering()) {\n        htmlRules.push(rule);\n      } else if (rule.isGenericHide()) {\n        if (rule.isClassSelector()) {\n          classSelectors.push(rule);\n        } else if (rule.isIdSelector()) {\n          idSelectors.push(rule);\n        } else if (rule.isHrefSelector()) {\n          hrefSelectors.push(rule);\n        } else {\n          genericHideRules.push(rule);\n        }\n      } else if (rule.isExtended() === false || config.loadExtendedSelectors === true) {\n        hostnameSpecificRules.push(rule);\n      }\n    }\n\n    this.genericRules.update(genericHideRules, removedFilters);\n    this.classesIndex.update(classSelectors, removedFilters);\n    this.hostnameIndex.update(hostnameSpecificRules, removedFilters);\n    this.hrefsIndex.update(hrefSelectors, removedFilters);\n    this.htmlIndex.update(htmlRules, removedFilters);\n    this.idsIndex.update(idSelectors, removedFilters);\n    this.unhideIndex.update(unHideRules, removedFilters);\n  }\n\n  public getSerializedSize(): number {\n    return (\n      this.genericRules.getSerializedSize() +\n      this.classesIndex.getSerializedSize() +\n      this.hostnameIndex.getSerializedSize() +\n      this.hrefsIndex.getSerializedSize() +\n      this.htmlIndex.getSerializedSize() +\n      this.idsIndex.getSerializedSize() +\n      this.unhideIndex.getSerializedSize()\n    );\n  }\n\n  public serialize(buffer: StaticDataView): void {\n    this.genericRules.serialize(buffer);\n    this.classesIndex.serialize(buffer);\n    this.hostnameIndex.serialize(buffer);\n    this.hrefsIndex.serialize(buffer);\n    this.htmlIndex.serialize(buffer);\n    this.idsIndex.serialize(buffer);\n    this.unhideIndex.serialize(buffer);\n  }\n\n  public getHtmlRules({\n    domain,\n    hostname,\n  }: {\n    domain: string;\n    hostname: string;\n  }): CosmeticFilter[] {\n    // Tokens from `hostname` and `domain` which will be used to lookup filters\n    // from the reverse index. The same tokens are re-used for multiple indices.\n    const hostnameTokens = createLookupTokens(hostname, domain);\n    const rules: CosmeticFilter[] = [];\n    this.htmlIndex.iterMatchingFilters(hostnameTokens, (rule: CosmeticFilter) => {\n      if (rule.match(hostname, domain)) {\n        rules.push(rule);\n      }\n      return true;\n    });\n\n    // If we found at least one candidate, check if we have unhidden rules.\n    const disabledRules: Set<string> = new Set();\n    if (rules.length !== 0) {\n      this.unhideIndex.iterMatchingFilters(hostnameTokens, (rule: CosmeticFilter) => {\n        if (rule.match(hostname, domain)) {\n          disabledRules.add(rule.getSelector());\n        }\n\n        return true;\n      });\n    }\n\n    return rules.filter(\n      (rule) => disabledRules.size === 0 || disabledRules.has(rule.getSelector()) === false,\n    );\n  }\n\n  /**\n   * Request cosmetics and scripts to inject in a page.\n   */\n  public getCosmeticsFilters({\n    domain,\n    hostname,\n\n    classes = [],\n    hrefs = [],\n    ids = [],\n\n    allowGenericHides = true,\n    allowSpecificHides = true,\n\n    // Allows to specify which rules to return\n    getBaseRules = true,\n    getInjectionRules = true,\n    getExtendedRules = true,\n    getRulesFromDOM = true,\n    getRulesFromHostname = true,\n  }: {\n    domain: string;\n    hostname: string;\n\n    classes: string[] | undefined;\n    hrefs: string[] | undefined;\n    ids: string[] | undefined;\n\n    allowGenericHides: boolean;\n    allowSpecificHides: boolean;\n\n    getBaseRules?: boolean;\n    getInjectionRules?: boolean;\n    getExtendedRules?: boolean;\n    getRulesFromDOM?: boolean;\n    getRulesFromHostname?: boolean;\n  }): {\n    injections: CosmeticFilter[];\n    extended: IMessageFromBackground['extended'];\n    stylesheet: string;\n  } {\n    // Tokens from `hostname` and `domain` which will be used to lookup filters\n    // from the reverse index. The same tokens are re-used for multiple indices.\n    const hostnameTokens = createLookupTokens(hostname, domain);\n    const rules: CosmeticFilter[] = [];\n\n    // =======================================================================\n    // Rules: hostname-specific\n    // =======================================================================\n    // Collect matching rules which specify a hostname constraint.\n    if (getRulesFromHostname === true) {\n      this.hostnameIndex.iterMatchingFilters(hostnameTokens, (rule: CosmeticFilter) => {\n        // A hostname-specific filter is considered if it's a scriptlet (not\n        // impacted by disabling of specific filters) or specific hides are\n        // allowed.\n        if (\n          (allowSpecificHides === true || rule.isScriptInject() === true) &&\n          rule.match(hostname, domain)\n        ) {\n          rules.push(rule);\n        }\n        return true;\n      });\n    }\n\n    // =======================================================================\n    // Rules: generic hide\n    // =======================================================================\n    // Optionally, collect genericHide rules. We need to make sure the `rule`\n    // matches the hostname and domain since some generic rules can specify\n    // negated hostnames and entities (e.g.: ~foo.*##generic).\n    if (allowGenericHides === true && getRulesFromHostname === true) {\n      const genericRules = this.getGenericRules();\n      for (const rule of genericRules) {\n        if (rule.match(hostname, domain) === true) {\n          rules.push(rule);\n        }\n      }\n    }\n\n    // =======================================================================\n    // Class selector based\n    // =======================================================================\n    if (allowGenericHides === true && getRulesFromDOM === true && classes.length !== 0) {\n      this.classesIndex.iterMatchingFilters(hashStrings(classes), (rule: CosmeticFilter) => {\n        if (rule.match(hostname, domain)) {\n          rules.push(rule);\n        }\n        return true;\n      });\n    }\n\n    // =======================================================================\n    // Id selector based\n    // =======================================================================\n    if (allowGenericHides === true && getRulesFromDOM === true && ids.length !== 0) {\n      this.idsIndex.iterMatchingFilters(hashStrings(ids), (rule: CosmeticFilter) => {\n        if (rule.match(hostname, domain)) {\n          rules.push(rule);\n        }\n        return true;\n      });\n    }\n\n    // =======================================================================\n    // Href selector based\n    // =======================================================================\n    if (allowGenericHides === true && getRulesFromDOM === true && hrefs.length !== 0) {\n      this.hrefsIndex.iterMatchingFilters(\n        compactTokens(concatTypedArrays(hrefs.map((href) => tokenizeNoSkip(href)))),\n        (rule: CosmeticFilter) => {\n          if (rule.match(hostname, domain)) {\n            rules.push(rule);\n          }\n          return true;\n        },\n      );\n    }\n\n    const extended: CosmeticFilter[] = [];\n    const injections: CosmeticFilter[] = [];\n    const styles: CosmeticFilter[] = [];\n\n    // If we found at least one candidate, check if we have unhidden rules,\n    // apply them and dispatch rules into `injections` (i.e.: '+js(...)'),\n    // `extended` (i.e. :not(...)), and `styles` (i.e.: '##rule').\n    if (rules.length !== 0) {\n      // =======================================================================\n      // Rules: unhide\n      // =======================================================================\n      // Collect unhidden selectors. They will be used to filter-out canceled\n      // rules from other indices.\n      let injectionsDisabled = false;\n      const disabledRules: Set<string> = new Set();\n      this.unhideIndex.iterMatchingFilters(hostnameTokens, (rule: CosmeticFilter) => {\n        if (rule.match(hostname, domain)) {\n          disabledRules.add(rule.getSelector());\n\n          // Detect special +js() rules to disable scriptlet injections\n          if (\n            rule.isScriptInject() === true &&\n            rule.isUnhide() === true &&\n            rule.getSelector().length === 0\n          ) {\n            injectionsDisabled = true;\n          }\n        }\n\n        return true;\n      });\n\n      // Apply unhide rules + dispatch\n      for (const rule of rules) {\n        // Make sure `rule` is not un-hidden by a #@# filter\n        if (disabledRules.size !== 0 && disabledRules.has(rule.getSelector())) {\n          continue;\n        }\n\n        // Dispatch rules in `injections` or `styles` depending on type\n        if (rule.isScriptInject() === true) {\n          if (getInjectionRules === true && injectionsDisabled === false) {\n            injections.push(rule);\n          }\n        } else if (rule.isExtended()) {\n          if (getExtendedRules === true) {\n            extended.push(rule);\n          }\n        } else {\n          styles.push(rule);\n        }\n      }\n    }\n\n    // Create final stylesheet\n    let stylesheet: string =\n      getBaseRules === false || allowGenericHides === false ? '' : this.getBaseStylesheet();\n\n    if (styles.length !== 0) {\n      if (stylesheet.length !== 0) {\n        stylesheet += '\\n\\n';\n      }\n\n      stylesheet += createStylesheetFromRules(styles);\n    }\n\n    const extendedProcessed: IMessageFromBackground['extended'] = [];\n    if (extended.length !== 0) {\n      const extendedStyles: Map<string, string> = new Map();\n      for (const rule of extended) {\n        const ast = rule.getSelectorAST();\n        if (ast !== undefined) {\n          const attribute = rule.isRemove() ? undefined : rule.getStyleAttributeHash();\n\n          if (attribute !== undefined) {\n            extendedStyles.set(rule.getStyle(), attribute);\n          }\n\n          extendedProcessed.push({\n            ast,\n            remove: rule.isRemove(),\n            attribute,\n          });\n        }\n      }\n\n      if (extendedStyles.size !== 0) {\n        if (stylesheet.length !== 0) {\n          stylesheet += '\\n\\n';\n        }\n\n        stylesheet += [...extendedStyles.entries()]\n          .map(([style, attribute]) => `[${attribute}] { ${style} }`)\n          .join('\\n\\n');\n      }\n    }\n\n    return {\n      extended: extendedProcessed,\n      injections,\n      stylesheet,\n    };\n  }\n\n  /**\n   * Return the list of filters which can potentially be un-hidden by another\n   * rule currently contained in the cosmetic bucket.\n   */\n  private getGenericRules(): CosmeticFilter[] {\n    if (this.extraGenericRules === null) {\n      return this.lazyPopulateGenericRulesCache().genericRules;\n    }\n    return this.extraGenericRules;\n  }\n\n  /**\n   * The base stylesheet is made of generic filters (not specific to any\n   * hostname) which cannot be hidden (i.e.: there is currently no rule which\n   * might hide their selector). This means that it will never change and is\n   * the same for all sites. We generate it once and re-use it any-time we want\n   * to inject it.\n   */\n  private getBaseStylesheet(): string {\n    if (this.baseStylesheet === null) {\n      return this.lazyPopulateGenericRulesCache().baseStylesheet;\n    }\n    return this.baseStylesheet;\n  }\n\n  /**\n   * This is used to lazily generate both the list of generic rules which can\n   * *potentially be un-hidden* (i.e.: there exists at least one unhide rule\n   * for the selector) and a stylesheet containing all selectors which cannot\n   * be un-hidden. Since this list will not change between updates we can\n   * generate once and use many times.\n   */\n  private lazyPopulateGenericRulesCache(): {\n    baseStylesheet: string;\n    genericRules: CosmeticFilter[];\n  } {\n    if (this.baseStylesheet === null || this.extraGenericRules === null) {\n      // Collect all selectors which can be subjected to an unhide rule\n      const unHideRules = this.unhideIndex.getFilters();\n      const canBeHiddenSelectors: Set<string> = new Set();\n      for (const rule of unHideRules) {\n        canBeHiddenSelectors.add(rule.getSelector());\n      }\n\n      // Split generic rules into two groups:\n      // 1. Rules which cannot be hidden\n      // 2. Rules which can be hidden on some domains\n      //\n      // This allows to create a base stylesheet which we know will never\n      // change then keep a minority of rules in-memory which can potentially\n      // be hidden.\n      const genericRules = this.genericRules.getFilters();\n      const cannotBeHiddenRules: CosmeticFilter[] = [];\n      const canBeHiddenRules: CosmeticFilter[] = [];\n      for (const rule of genericRules) {\n        if (\n          rule.hasCustomStyle() ||\n          rule.isScriptInject() ||\n          rule.hasHostnameConstraint() ||\n          canBeHiddenSelectors.has(rule.getSelector())\n        ) {\n          canBeHiddenRules.push(rule);\n        } else {\n          cannotBeHiddenRules.push(rule);\n        }\n      }\n\n      this.baseStylesheet = createStylesheetFromRules(cannotBeHiddenRules);\n      this.extraGenericRules = canBeHiddenRules;\n    }\n\n    return {\n      baseStylesheet: this.baseStylesheet,\n      genericRules: this.extraGenericRules,\n    };\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport Config from '../../config';\nimport { StaticDataView } from '../../data-view';\nimport NetworkFilter from '../../filters/network';\nimport Request from '../../request';\nimport { noopOptimizeNetwork, optimizeNetwork } from '../optimizer';\nimport ReverseIndex from '../reverse-index';\nimport FiltersContainer from './filters';\n\n/**\n * Accelerating data structure for network filters matching.\n */\nexport default class NetworkFilterBucket {\n  public static deserialize(buffer: StaticDataView, config: Config): NetworkFilterBucket {\n    const bucket = new NetworkFilterBucket({ config });\n\n    bucket.index = ReverseIndex.deserialize(\n      buffer,\n      NetworkFilter.deserialize,\n      config.enableOptimizations ? optimizeNetwork : noopOptimizeNetwork,\n      config,\n    );\n\n    bucket.badFilters = FiltersContainer.deserialize(buffer, NetworkFilter.deserialize, config);\n\n    return bucket;\n  }\n\n  public index: ReverseIndex<NetworkFilter>;\n\n  // `badFilters` are filters specifying a $badfilter option. They can be used\n  // to disable completely another filter (usually to fix breakage). They are\n  // stored separately so that we can quickly check if matching filters (from\n  // `match` and `matchAll` methods) should be ignored or not.\n  public badFilters: FiltersContainer<NetworkFilter>;\n\n  // Lazy attribute containing IDs of $badfilter to quickly check which filters\n  // should be disabled (only one lookup is needed).\n  private badFiltersIds: Set<number> | null;\n\n  constructor({ filters = [], config }: { filters?: NetworkFilter[]; config: Config }) {\n    this.index = new ReverseIndex({\n      config,\n      deserialize: NetworkFilter.deserialize,\n      filters: [],\n      optimize: config.enableOptimizations ? optimizeNetwork : noopOptimizeNetwork,\n    });\n\n    this.badFiltersIds = null;\n    this.badFilters = new FiltersContainer({\n      config,\n      deserialize: NetworkFilter.deserialize,\n      filters: [],\n    });\n\n    if (filters.length !== 0) {\n      this.update(filters, undefined);\n    }\n  }\n\n  public getFilters(): NetworkFilter[] {\n    const filters: NetworkFilter[] = [];\n    return filters.concat(this.badFilters.getFilters(), this.index.getFilters());\n  }\n\n  public update(newFilters: NetworkFilter[], removedFilters: Set<number> | undefined): void {\n    const badFilters: NetworkFilter[] = [];\n    const remaining: NetworkFilter[] = [];\n    for (const filter of newFilters) {\n      if (filter.isBadFilter()) {\n        badFilters.push(filter);\n      } else {\n        remaining.push(filter);\n      }\n    }\n\n    this.badFilters.update(badFilters, removedFilters);\n    this.index.update(remaining, removedFilters);\n    this.badFiltersIds = null;\n  }\n\n  public getSerializedSize(): number {\n    return this.badFilters.getSerializedSize() + this.index.getSerializedSize();\n  }\n\n  public serialize(buffer: StaticDataView): void {\n    this.index.serialize(buffer);\n    this.badFilters.serialize(buffer);\n  }\n\n  public matchAll(request: Request): NetworkFilter[] {\n    const filters: NetworkFilter[] = [];\n\n    this.index.iterMatchingFilters(request.getTokens(), (filter: NetworkFilter) => {\n      if (filter.match(request) && this.isFilterDisabled(filter) === false) {\n        filters.push(filter);\n      }\n      return true;\n    });\n\n    return filters;\n  }\n\n  public match(request: Request): NetworkFilter | undefined {\n    let match: NetworkFilter | undefined;\n\n    this.index.iterMatchingFilters(request.getTokens(), (filter: NetworkFilter) => {\n      if (filter.match(request) && this.isFilterDisabled(filter) === false) {\n        match = filter;\n        return false;\n      }\n      return true;\n    });\n\n    return match;\n  }\n\n  /**\n   * Given a matching filter, check if it is disabled by a $badfilter\n   */\n  private isFilterDisabled(filter: NetworkFilter): boolean {\n    // Lazily load information about bad filters in memory. The only thing we\n    // keep in memory is the list of IDs from $badfilter (ignoring the\n    // $badfilter option from mask). This allows to check if a matching filter\n    // should be ignored just by doing a lookup in a set of IDs.\n    if (this.badFiltersIds === null) {\n      const badFilters = this.badFilters.getFilters();\n\n      // Shortcut if there is no badfilter in this bucket\n      if (badFilters.length === 0) {\n        return false;\n      }\n\n      // Create in-memory list of disabled filter IDs\n      const badFiltersIds: Set<number> = new Set();\n      for (const badFilter of badFilters) {\n        badFiltersIds.add(badFilter.getIdWithoutBadFilter());\n      }\n      this.badFiltersIds = badFiltersIds;\n    }\n\n    return this.badFiltersIds.has(filter.getId());\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport type { IMessageFromBackground } from '@cliqz/adblocker-content';\n\nimport Config from '../config';\nimport { StaticDataView, sizeOfASCII, sizeOfByte } from '../data-view';\nimport { EventEmitter } from '../events';\nimport {\n  adsAndTrackingLists,\n  adsLists,\n  Fetch,\n  fetchLists,\n  fetchResources,\n  fullLists,\n} from '../fetch';\nimport { HTMLSelector } from '../html-filtering';\nimport CosmeticFilter from '../filters/cosmetic';\nimport NetworkFilter from '../filters/network';\nimport { block } from '../filters/dsl';\nimport { IListDiff, IRawDiff, parseFilters } from '../lists';\nimport Request from '../request';\nimport Resources from '../resources';\nimport CosmeticFilterBucket from './bucket/cosmetic';\nimport NetworkFilterBucket from './bucket/network';\n\nexport const ENGINE_VERSION = 516;\n\nfunction shouldApplyHideException(filters: NetworkFilter[]): boolean {\n  if (filters.length === 0) {\n    return false;\n  }\n\n  // Get $Xhide filter with highest priority:\n  // $Xhide,important > $Xhide > @@$Xhide\n  let genericHideFilter: NetworkFilter | undefined;\n  let currentScore = 0;\n  for (const filter of filters) {\n    // To encode priority between filters, we create a bitmask with the following:\n    // $important,Xhide = 100 (takes precedence)\n    // $Xhide           = 010 (exception to @@$Xhide)\n    // @@$Xhide         = 001 (forbids Xhide filters)\n    const score: number = (filter.isImportant() ? 4 : 0) | (filter.isException() ? 1 : 2);\n\n    // Highest `score` has precedence\n    if (score >= currentScore) {\n      currentScore = score;\n      genericHideFilter = filter;\n    }\n  }\n\n  if (genericHideFilter === undefined) {\n    return false;\n  }\n\n  // Check that there is at least one $generichide match and no exception\n  return genericHideFilter.isException();\n}\n\nexport interface BlockingResponse {\n  match: boolean;\n  redirect:\n    | undefined\n    | {\n        body: string;\n        contentType: string;\n        dataUrl: string;\n      };\n  exception: NetworkFilter | undefined;\n  filter: NetworkFilter | undefined;\n}\n\nexport interface Caching {\n  path: string;\n  read: (path: string) => Promise<Uint8Array>;\n  write: (path: string, buffer: Uint8Array) => Promise<void>;\n}\n\nexport default class FilterEngine extends EventEmitter<\n  | 'csp-injected'\n  | 'html-filtered'\n  | 'request-allowed'\n  | 'request-blocked'\n  | 'request-redirected'\n  | 'request-whitelisted'\n  | 'script-injected'\n  | 'style-injected'\n> {\n  private static fromCached<T extends typeof FilterEngine>(\n    this: T,\n    init: () => Promise<InstanceType<T>>,\n    caching?: Caching,\n  ): Promise<InstanceType<T>> {\n    if (caching === undefined) {\n      return init();\n    }\n\n    const { path, read, write } = caching;\n    return read(path)\n      .then((buffer) => this.deserialize(buffer) as InstanceType<T>)\n      .catch(() => init().then((engine) => write(path, engine.serialize()).then(() => engine)));\n  }\n\n  public static empty<T extends FilterEngine>(\n    this: new (...args: any[]) => T,\n    config: Partial<Config> = {},\n  ): T {\n    return new this({ config });\n  }\n\n  /**\n   * Create an instance of `FiltersEngine` (or subclass like `ElectronBlocker`,\n   * etc.), from the list of subscriptions provided as argument (e.g.:\n   * EasyList).\n   *\n   * Lists are fetched using the instance of `fetch` provided as a first\n   * argument. Optionally resources.txt and config can be provided.\n   */\n  public static fromLists<T extends typeof FilterEngine>(\n    this: T,\n    fetch: Fetch,\n    urls: string[],\n    config: Partial<Config> = {},\n    caching?: Caching,\n  ): Promise<InstanceType<T>> {\n    return this.fromCached(() => {\n      const listsPromises = fetchLists(fetch, urls);\n      const resourcesPromise = fetchResources(fetch);\n\n      return Promise.all([listsPromises, resourcesPromise]).then(([lists, resources]) => {\n        const engine = this.parse(lists.join('\\n'), config);\n        if (resources !== undefined) {\n          engine.updateResources(resources, '' + resources.length);\n        }\n\n        return engine as InstanceType<T>;\n      });\n    }, caching);\n  }\n\n  /**\n   * Initialize blocker of *ads only*.\n   *\n   * Attempt to initialize a blocking engine using a pre-built version served\n   * from Cliqz's CDN. If this fails (e.g.: if no pre-built engine is available\n   * for this version of the library), then falls-back to using `fromLists(...)`\n   * method with the same subscriptions.\n   */\n  public static fromPrebuiltAdsOnly<T extends typeof FilterEngine>(\n    this: T,\n    fetchImpl: Fetch = fetch,\n    caching?: Caching,\n  ): Promise<InstanceType<T>> {\n    return this.fromLists(fetchImpl, adsLists, {}, caching);\n  }\n\n  /**\n   * Same as `fromPrebuiltAdsOnly(...)` but also contains rules to block\n   * tracking (i.e.: using extra lists such as EasyPrivacy and more).\n   */\n  public static fromPrebuiltAdsAndTracking<T extends typeof FilterEngine>(\n    this: T,\n    fetchImpl: Fetch = fetch,\n    caching?: Caching,\n  ): Promise<InstanceType<T>> {\n    return this.fromLists(fetchImpl, adsAndTrackingLists, {}, caching);\n  }\n\n  /**\n   * Same as `fromPrebuiltAdsAndTracking(...)` but also contains annoyances\n   * rules to block things like cookie notices.\n   */\n  public static fromPrebuiltFull<T extends typeof FilterEngine>(\n    this: T,\n    fetchImpl: Fetch = fetch,\n    caching?: Caching,\n  ): Promise<InstanceType<T>> {\n    return this.fromLists(fetchImpl, fullLists, {}, caching);\n  }\n\n  public static parse<T extends FilterEngine>(\n    this: new (...args: any[]) => T,\n    filters: string,\n    options: Partial<Config> = {},\n  ): T {\n    const config = new Config(options);\n    return new this({\n      ...parseFilters(filters, config),\n      config,\n    });\n  }\n\n  public static deserialize<T extends FilterEngine>(\n    this: new (...args: any[]) => T,\n    serialized: Uint8Array,\n  ): T {\n    const buffer = StaticDataView.fromUint8Array(serialized, {\n      enableCompression: false,\n    });\n\n    // Before starting deserialization, we make sure that the version of the\n    // serialized engine is the same as the current source code. If not, we\n    // start fresh and create a new engine from the lists.\n    const serializedEngineVersion = buffer.getUint16();\n    if (ENGINE_VERSION !== serializedEngineVersion) {\n      throw new Error(\n        `serialized engine version mismatch, expected ${ENGINE_VERSION} but got ${serializedEngineVersion}`,\n      );\n    }\n\n    // Create a new engine with same options\n    const config = Config.deserialize(buffer);\n\n    // Optionally turn compression ON\n    if (config.enableCompression) {\n      buffer.enableCompression();\n    }\n\n    // Also make sure that the built-in checksum is correct. This allows to\n    // detect data corruption and start fresh if the serialized version was\n    // altered.\n    if (config.integrityCheck) {\n      const currentPos = buffer.pos;\n      buffer.pos = serialized.length - 4;\n      const checksum = buffer.checksum();\n      const expected = buffer.getUint32();\n      if (checksum !== expected) {\n        throw new Error(\n          `serialized engine checksum mismatch, expected ${expected} but got ${checksum}`,\n        );\n      }\n      buffer.pos = currentPos;\n    }\n\n    const engine = new this({ config });\n\n    // Deserialize resources\n    engine.resources = Resources.deserialize(buffer);\n\n    // Deserialize lists\n    const lists = new Map();\n    const numberOfLists = buffer.getUint16();\n    for (let i = 0; i < numberOfLists; i += 1) {\n      lists.set(buffer.getASCII(), buffer.getASCII());\n    }\n    engine.lists = lists;\n\n    // Deserialize buckets\n    engine.importants = NetworkFilterBucket.deserialize(buffer, config);\n    engine.redirects = NetworkFilterBucket.deserialize(buffer, config);\n    engine.filters = NetworkFilterBucket.deserialize(buffer, config);\n    engine.exceptions = NetworkFilterBucket.deserialize(buffer, config);\n\n    engine.csp = NetworkFilterBucket.deserialize(buffer, config);\n    engine.cosmetics = CosmeticFilterBucket.deserialize(buffer, config);\n    engine.hideExceptions = NetworkFilterBucket.deserialize(buffer, config);\n\n    return engine;\n  }\n\n  public lists: Map<string, string>;\n\n  public csp: NetworkFilterBucket;\n  public hideExceptions: NetworkFilterBucket;\n  public exceptions: NetworkFilterBucket;\n  public importants: NetworkFilterBucket;\n  public redirects: NetworkFilterBucket;\n  public filters: NetworkFilterBucket;\n  public cosmetics: CosmeticFilterBucket;\n\n  public resources: Resources;\n  public readonly config: Config;\n\n  constructor({\n    // Optionally initialize the engine with filters\n    cosmeticFilters = [],\n    networkFilters = [],\n\n    config = new Config(),\n    lists = new Map(),\n  }: {\n    cosmeticFilters?: CosmeticFilter[];\n    networkFilters?: NetworkFilter[];\n    lists?: Map<string, string>;\n    config?: Partial<Config>;\n  } = {}) {\n    super(); // init super-class EventEmitter\n\n    this.config = new Config(config);\n\n    // Subscription management: disabled by default\n    this.lists = lists;\n\n    // $csp=\n    this.csp = new NetworkFilterBucket({ config: this.config });\n    // $elemhide\n    // $generichide\n    // $specifichide\n    this.hideExceptions = new NetworkFilterBucket({ config: this.config });\n    // @@filter\n    this.exceptions = new NetworkFilterBucket({ config: this.config });\n    // $important\n    this.importants = new NetworkFilterBucket({ config: this.config });\n    // $redirect\n    this.redirects = new NetworkFilterBucket({ config: this.config });\n    // All other filters\n    this.filters = new NetworkFilterBucket({ config: this.config });\n    // Cosmetic filters\n    this.cosmetics = new CosmeticFilterBucket({ config: this.config });\n\n    // Injections\n    this.resources = new Resources();\n\n    if (networkFilters.length !== 0 || cosmeticFilters.length !== 0) {\n      this.update({\n        newCosmeticFilters: cosmeticFilters,\n        newNetworkFilters: networkFilters,\n      });\n    }\n  }\n\n  /**\n   * Estimate the number of bytes needed to serialize this instance of\n   * `FiltersEngine` using the `serialize(...)` method. It is used internally\n   * by `serialize(...)` to allocate a buffer of the right size and you should\n   * not have to call it yourself most of the time.\n   *\n   * There are cases where we cannot estimate statically the exact size of the\n   * resulting buffer (due to alignement which need to be performed); this\n   * method will return a safe estimate which will always be at least equal to\n   * the real number of bytes needed, or bigger (usually of a few bytes only:\n   * ~20 bytes is to be expected).\n   */\n  public getSerializedSize(): number {\n    let estimatedSize: number =\n      sizeOfByte() + // engine version\n      this.config.getSerializedSize() +\n      this.resources.getSerializedSize() +\n      this.filters.getSerializedSize() +\n      this.exceptions.getSerializedSize() +\n      this.importants.getSerializedSize() +\n      this.redirects.getSerializedSize() +\n      this.csp.getSerializedSize() +\n      this.cosmetics.getSerializedSize() +\n      this.hideExceptions.getSerializedSize() +\n      4; // checksum\n\n    // Estimate size of `this.lists` which stores information of checksum for each list.\n    for (const [name, checksum] of this.lists) {\n      estimatedSize += sizeOfASCII(name) + sizeOfASCII(checksum);\n    }\n\n    return estimatedSize;\n  }\n\n  /**\n   * Creates a binary representation of the full engine. It can be stored\n   * on-disk for faster loading of the adblocker. The `deserialize` static\n   * method of Engine can be used to restore the engine.\n   */\n  public serialize(array?: Uint8Array): Uint8Array {\n    const buffer = StaticDataView.fromUint8Array(\n      array || new Uint8Array(this.getSerializedSize()),\n      this.config,\n    );\n\n    buffer.pushUint16(ENGINE_VERSION);\n\n    // Config\n    this.config.serialize(buffer);\n\n    // Resources (js, resources)\n    this.resources.serialize(buffer);\n\n    // Serialize the state of lists (names and checksums)\n    buffer.pushUint16(this.lists.size);\n    for (const [name, value] of Array.from(this.lists.entries()).sort()) {\n      buffer.pushASCII(name);\n      buffer.pushASCII(value);\n    }\n\n    // Filters buckets\n    this.importants.serialize(buffer);\n    this.redirects.serialize(buffer);\n    this.filters.serialize(buffer);\n    this.exceptions.serialize(buffer);\n\n    this.csp.serialize(buffer);\n    this.cosmetics.serialize(buffer);\n    this.hideExceptions.serialize(buffer);\n\n    // Optionally append a checksum at the end\n    if (this.config.integrityCheck) {\n      buffer.pushUint32(buffer.checksum());\n    }\n\n    return buffer.subarray();\n  }\n\n  /**\n   * Update engine with new filters or resources.\n   */\n  public loadedLists(): string[] {\n    return Array.from(this.lists.keys());\n  }\n\n  public hasList(name: string, checksum: string): boolean {\n    return this.lists.has(name) && this.lists.get(name) === checksum;\n  }\n\n  /**\n   * Update engine with `resources.txt` content.\n   */\n  public updateResources(data: string, checksum: string): boolean {\n    if (this.resources.checksum === checksum) {\n      return false;\n    }\n\n    this.resources = Resources.parse(data, { checksum });\n    return true;\n  }\n\n  public getFilters(): { networkFilters: NetworkFilter[]; cosmeticFilters: CosmeticFilter[] } {\n    const cosmeticFilters: CosmeticFilter[] = [];\n    const networkFilters: NetworkFilter[] = [];\n\n    return {\n      cosmeticFilters: cosmeticFilters.concat(this.cosmetics.getFilters()),\n      networkFilters: networkFilters.concat(\n        this.filters.getFilters(),\n        this.exceptions.getFilters(),\n        this.importants.getFilters(),\n        this.redirects.getFilters(),\n        this.csp.getFilters(),\n        this.hideExceptions.getFilters(),\n      ),\n    };\n  }\n\n  /**\n   * Update engine with new filters as well as optionally removed filters.\n   */\n  public update({\n    newNetworkFilters = [],\n    newCosmeticFilters = [],\n    removedCosmeticFilters = [],\n    removedNetworkFilters = [],\n  }: Partial<IListDiff>): boolean {\n    let updated: boolean = false;\n\n    // Update cosmetic filters\n    if (\n      this.config.loadCosmeticFilters &&\n      (newCosmeticFilters.length !== 0 || removedCosmeticFilters.length !== 0)\n    ) {\n      updated = true;\n      this.cosmetics.update(\n        newCosmeticFilters,\n        removedCosmeticFilters.length === 0 ? undefined : new Set(removedCosmeticFilters),\n        this.config,\n      );\n    }\n\n    // Update network filters\n    if (\n      this.config.loadNetworkFilters &&\n      (newNetworkFilters.length !== 0 || removedNetworkFilters.length !== 0)\n    ) {\n      updated = true;\n      const filters: NetworkFilter[] = [];\n      const csp: NetworkFilter[] = [];\n      const exceptions: NetworkFilter[] = [];\n      const importants: NetworkFilter[] = [];\n      const redirects: NetworkFilter[] = [];\n      const hideExceptions: NetworkFilter[] = [];\n\n      for (const filter of newNetworkFilters) {\n        // NOTE: it's important to check for $generichide, $elemhide,\n        // $specifichide and $csp before exceptions and important as we store\n        // all of them in the same filter bucket. The check for exceptions is\n        // done at match-time directly.\n        if (filter.isCSP()) {\n          csp.push(filter);\n        } else if (filter.isGenericHide() || filter.isSpecificHide()) {\n          hideExceptions.push(filter);\n        } else if (filter.isException()) {\n          exceptions.push(filter);\n        } else if (filter.isImportant()) {\n          importants.push(filter);\n        } else if (filter.isRedirect()) {\n          redirects.push(filter);\n        } else {\n          filters.push(filter);\n        }\n      }\n\n      const removedNetworkFiltersSet: Set<number> | undefined =\n        removedNetworkFilters.length === 0 ? undefined : new Set(removedNetworkFilters);\n\n      // Update buckets in-place\n      this.importants.update(importants, removedNetworkFiltersSet);\n      this.redirects.update(redirects, removedNetworkFiltersSet);\n      this.filters.update(filters, removedNetworkFiltersSet);\n\n      if (this.config.loadExceptionFilters === true) {\n        this.exceptions.update(exceptions, removedNetworkFiltersSet);\n      }\n\n      if (this.config.loadCSPFilters === true) {\n        this.csp.update(csp, removedNetworkFiltersSet);\n      }\n\n      this.hideExceptions.update(hideExceptions, removedNetworkFiltersSet);\n    }\n\n    return updated;\n  }\n\n  public updateFromDiff({ added, removed }: Partial<IRawDiff>): boolean {\n    const newCosmeticFilters: CosmeticFilter[] = [];\n    const newNetworkFilters: NetworkFilter[] = [];\n    const removedCosmeticFilters: CosmeticFilter[] = [];\n    const removedNetworkFilters: NetworkFilter[] = [];\n\n    if (removed !== undefined && removed.length !== 0) {\n      const { networkFilters, cosmeticFilters } = parseFilters(removed.join('\\n'), this.config);\n      Array.prototype.push.apply(removedCosmeticFilters, cosmeticFilters);\n      Array.prototype.push.apply(removedNetworkFilters, networkFilters);\n    }\n\n    if (added !== undefined && added.length !== 0) {\n      const { networkFilters, cosmeticFilters } = parseFilters(added.join('\\n'), this.config);\n      Array.prototype.push.apply(newCosmeticFilters, cosmeticFilters);\n      Array.prototype.push.apply(newNetworkFilters, networkFilters);\n    }\n\n    return this.update({\n      newCosmeticFilters,\n      newNetworkFilters,\n      removedCosmeticFilters: removedCosmeticFilters.map((f) => f.getId()),\n      removedNetworkFilters: removedNetworkFilters.map((f) => f.getId()),\n    });\n  }\n\n  /**\n   * Return a list of HTML filtering rules.\n   */\n  public getHtmlFilters({\n    // Page information\n    url,\n    hostname,\n    domain,\n  }: {\n    url: string;\n    hostname: string;\n    domain: string | null | undefined;\n  }): HTMLSelector[] {\n    const htmlSelectors: HTMLSelector[] = [];\n\n    if (this.config.enableHtmlFiltering === false || this.config.loadCosmeticFilters === false) {\n      return htmlSelectors;\n    }\n\n    const rules = this.cosmetics.getHtmlRules({\n      domain: domain || '',\n      hostname,\n    });\n\n    for (const rule of rules) {\n      const extended = rule.getExtendedSelector();\n      if (extended !== undefined) {\n        htmlSelectors.push(extended);\n      }\n    }\n\n    if (htmlSelectors.length !== 0) {\n      this.emit('html-filtered', htmlSelectors, url);\n    }\n\n    return htmlSelectors;\n  }\n\n  /**\n   * Given `hostname` and `domain` of a page (or frame), return the list of\n   * styles and scripts to inject in the page.\n   */\n  public getCosmeticsFilters({\n    // Page information\n    url,\n    hostname,\n    domain,\n\n    // DOM information\n    classes,\n    hrefs,\n    ids,\n\n    // Allows to specify which rules to return\n    getBaseRules = true,\n    getInjectionRules = true,\n    getExtendedRules = true,\n    getRulesFromDOM = true,\n    getRulesFromHostname = true,\n  }: {\n    url: string;\n    hostname: string;\n    domain: string | null | undefined;\n\n    classes?: string[] | undefined;\n    hrefs?: string[] | undefined;\n    ids?: string[] | undefined;\n\n    getBaseRules?: boolean;\n    getInjectionRules?: boolean;\n    getExtendedRules?: boolean;\n    getRulesFromDOM?: boolean;\n    getRulesFromHostname?: boolean;\n  }): IMessageFromBackground {\n    if (this.config.loadCosmeticFilters === false) {\n      return {\n        active: false,\n        extended: [],\n        scripts: [],\n        styles: '',\n      };\n    }\n\n    let allowGenericHides = true;\n    let allowSpecificHides = true;\n\n    const exceptions = this.hideExceptions.matchAll(\n      Request.fromRawDetails({\n        domain: domain || '',\n        hostname,\n        url,\n\n        sourceDomain: '',\n        sourceHostname: '',\n        sourceUrl: '',\n      }),\n    );\n\n    const genericHides: NetworkFilter[] = [];\n    const specificHides: NetworkFilter[] = [];\n    for (const filter of exceptions) {\n      if (filter.isElemHide()) {\n        allowGenericHides = false;\n        allowSpecificHides = false;\n        break;\n      }\n\n      if (filter.isSpecificHide()) {\n        specificHides.push(filter);\n      } else if (filter.isGenericHide()) {\n        genericHides.push(filter);\n      }\n    }\n\n    if (allowGenericHides === true) {\n      allowGenericHides = shouldApplyHideException(genericHides) === false;\n    }\n\n    if (allowSpecificHides === true) {\n      allowSpecificHides = shouldApplyHideException(specificHides) === false;\n    }\n\n    // Lookup injections as well as stylesheets\n    const { injections, stylesheet, extended } = this.cosmetics.getCosmeticsFilters({\n      domain: domain || '',\n      hostname,\n\n      classes,\n      hrefs,\n      ids,\n\n      allowGenericHides,\n      allowSpecificHides,\n\n      getBaseRules,\n      getInjectionRules,\n      getExtendedRules,\n      getRulesFromDOM,\n      getRulesFromHostname,\n    });\n\n    // Perform interpolation for injected scripts\n    const scripts: string[] = [];\n    for (const injection of injections) {\n      const script = injection.getScript(this.resources.js);\n      if (script !== undefined) {\n        this.emit('script-injected', script, url);\n        scripts.push(script);\n      }\n    }\n\n    // Emit events\n    if (stylesheet.length !== 0) {\n      this.emit('style-injected', stylesheet, url);\n    }\n\n    return {\n      active: true,\n      extended,\n      scripts,\n      styles: stylesheet,\n    };\n  }\n\n  /**\n   * Given a `request`, return all matching network filters found in the engine.\n   */\n  public matchAll(request: Request): Set<NetworkFilter> {\n    const filters: NetworkFilter[] = [];\n    if (request.isSupported) {\n      Array.prototype.push.apply(filters, this.importants.matchAll(request));\n      Array.prototype.push.apply(filters, this.filters.matchAll(request));\n      Array.prototype.push.apply(filters, this.exceptions.matchAll(request));\n      Array.prototype.push.apply(filters, this.csp.matchAll(request));\n      Array.prototype.push.apply(filters, this.hideExceptions.matchAll(request));\n      Array.prototype.push.apply(filters, this.redirects.matchAll(request));\n    }\n\n    return new Set(filters);\n  }\n\n  /**\n   * Given a \"main_frame\" request, check if some content security policies\n   * should be injected in the page.\n   */\n  public getCSPDirectives(request: Request): string | undefined {\n    if (!this.config.loadNetworkFilters) {\n      return undefined;\n    }\n\n    if (request.isSupported !== true || request.isMainFrame() === false) {\n      return undefined;\n    }\n\n    const matches = this.csp.matchAll(request);\n\n    // No $csp filter found\n    if (matches.length === 0) {\n      return undefined;\n    }\n\n    // Collect all CSP directives and keep track of exceptions\n    const disabledCsp = new Set();\n    const enabledCsp = new Set();\n    for (const filter of matches) {\n      if (filter.isException()) {\n        if (filter.csp === undefined) {\n          // All CSP directives are disabled for this site\n          return undefined;\n        }\n        disabledCsp.add(filter.csp);\n      } else {\n        enabledCsp.add(filter.csp);\n      }\n    }\n\n    // Combine all CSPs (except the black-listed ones)\n    const csps: string | undefined =\n      Array.from(enabledCsp)\n        .filter((csp) => !disabledCsp.has(csp))\n        .join('; ') || undefined;\n\n    // Emit event\n    if (csps !== undefined) {\n      this.emit('csp-injected', csps, request);\n    }\n\n    return csps;\n  }\n\n  /**\n   * Decide if a network request (usually from WebRequest API) should be\n   * blocked, redirected or allowed.\n   */\n  public match(request: Request): BlockingResponse {\n    const result: BlockingResponse = {\n      exception: undefined,\n      filter: undefined,\n      match: false,\n      redirect: undefined,\n    };\n\n    if (!this.config.loadNetworkFilters) {\n      return result;\n    }\n\n    if (request.isSupported) {\n      // Check the filters in the following order:\n      // 1. $important (not subject to exceptions)\n      // 2. redirection ($redirect=resource)\n      // 3. normal filters\n      // 4. exceptions\n      result.filter = this.importants.match(request);\n\n      let redirectNone: NetworkFilter | undefined;\n      let redirectRule: NetworkFilter | undefined;\n\n      // If `result.filter` is `undefined`, it means there was no $important\n      // filter found so far. We look for a $redirect filter.  There is some\n      // extra logic to handle special cases like redirect-rule and\n      // redirect=none.\n      //\n      // * If redirect=none is found, then cancel all redirects.\n      // * Else if redirect-rule is found, only redirect if request would be blocked.\n      // * Else if redirect is found, redirect.\n      if (result.filter === undefined) {\n        const redirects = this.redirects.matchAll(request);\n        if (redirects.length !== 0) {\n          for (const filter of redirects) {\n            if (filter.getRedirect() === 'none') {\n              redirectNone = filter;\n            } else if (filter.isRedirectRule()) {\n              redirectRule = filter;\n            } else {\n              result.filter = filter;\n            }\n          }\n        }\n\n        // If `result.filter` is still `undefined`, it means that there was no\n        // redirection rule triggered for the request. We look for a normal\n        // match.\n        if (result.filter === undefined) {\n          result.filter = this.filters.match(request);\n\n          // If we found a match, and a `$redirect-rule` as found previously,\n          // then we transform the match into a redirect, following the\n          // semantics of redirect-rule.\n          if (redirectRule !== undefined && result.filter !== undefined) {\n            result.filter = redirectRule;\n          }\n        }\n\n        // If we found either a redirection rule or a normal match, then check\n        // for exceptions which could apply on the request and un-block it.\n        if (result.filter !== undefined) {\n          result.exception = this.exceptions.match(request);\n        }\n      }\n\n      // If there was a redirect match and no exception was found, then we\n      // proceed and process the redirect rule. This means two things:\n      //\n      // 1. Check if a redirect=none rule was found, which acts as exception.\n      // 2. If no exception was found, prepare `result.redirect` response.\n      if (\n        result.filter !== undefined &&\n        result.exception === undefined &&\n        result.filter.isRedirect()\n      ) {\n        if (redirectNone !== undefined) {\n          result.exception = redirectNone;\n        } else {\n          result.redirect = this.resources.getResource(result.filter.getRedirect());\n        }\n      }\n    }\n\n    result.match = result.exception === undefined && result.filter !== undefined;\n\n    // Emit events if we found a match\n    if (result.exception !== undefined) {\n      this.emit('request-whitelisted', request, result);\n    } else if (result.redirect !== undefined) {\n      this.emit('request-redirected', request, result);\n    } else if (result.filter !== undefined) {\n      this.emit('request-blocked', request, result);\n    } else {\n      this.emit('request-allowed', request, result);\n    }\n\n    return result;\n  }\n\n  public blockScripts() {\n    this.updateFromDiff({\n      added: [block().scripts().redirectTo('javascript').toString()],\n    });\n    return this;\n  }\n\n  public blockImages() {\n    this.updateFromDiff({\n      added: [block().images().redirectTo('png').toString()],\n    });\n    return this;\n  }\n\n  public blockMedias() {\n    this.updateFromDiff({\n      added: [block().medias().redirectTo('mp4').toString()],\n    });\n    return this;\n  }\n\n  public blockFrames() {\n    this.updateFromDiff({\n      added: [block().frames().redirectTo('html').toString()],\n    });\n    return this;\n  }\n\n  public blockFonts() {\n    this.updateFromDiff({\n      added: [block().fonts().toString()],\n    });\n    return this;\n  }\n\n  public blockStyles() {\n    this.updateFromDiff({\n      added: [block().styles().toString()],\n    });\n    return this;\n  }\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\n/*!\n * Copyright (c) 2008-2009 Bjoern Hoehrmann <bjoern@hoehrmann.de>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\n// From http://bjoern.hoehrmann.de/utf-8/decoder/dfa/\nconst utf8d = new Uint8Array([\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, // 00..1f\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, // 20..3f\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, // 40..5f\n  0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0, // 60..7f\n  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9, // 80..9f\n  7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7, // a0..bf\n  8,8,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2, // c0..df\n  0xa,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x3,0x4,0x3,0x3, // e0..ef\n  0xb,0x6,0x6,0x6,0x5,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8,0x8, // f0..ff\n  0x0,0x1,0x2,0x3,0x5,0x8,0x7,0x1,0x1,0x1,0x4,0x6,0x1,0x1,0x1,0x1, // s0..s0\n  1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,0,1,0,1,1,1,1,1,1, // s1..s2\n  1,2,1,1,1,1,1,2,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1, // s3..s4\n  1,2,1,1,1,1,1,1,1,2,1,1,1,1,1,1,1,1,1,1,1,1,1,3,1,3,1,1,1,1,1,1, // s5..s6\n  1,3,1,1,1,1,1,3,1,3,1,1,1,1,1,1,1,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1, // s7..s8\n]);\n\nfunction isAscii(bytes: Uint8Array): boolean {\n  if (bytes.length === 0) {\n    return true;\n  }\n\n  for (let i = 0; i < bytes.length; i += 1) {\n    if (bytes[i] > 127) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport function isUTF8(bytes: Uint8Array): boolean {\n  if (bytes.length === 0) {\n    return true;\n  }\n\n  if (isAscii(bytes) === true) {\n    return true;\n  }\n\n  let state: number = 0;\n  for (let i = 0; i < bytes.length; i += 1) {\n    const type = utf8d[bytes[i]];\n    state = utf8d[256 + state * 16 + type];\n    if (state === 1 || state === undefined) {\n      return false;\n    }\n  }\n\n  return true;\n}\n","/*!\n * Copyright (c) 2017-present Cliqz GmbH. All rights reserved.\n *\n * This Source Code Form is subject to the terms of the Mozilla Public\n * License, v. 2.0. If a copy of the MPL was not distributed with this\n * file, You can obtain one at https://mozilla.org/MPL/2.0/.\n */\n\nimport { Browser, Runtime, WebRequest } from 'webextension-polyfill-ts';\nimport { parse } from 'tldts-experimental';\n\nimport {\n  FiltersEngine,\n  HTMLSelector,\n  isUTF8,\n  Request,\n  StreamingHtmlFilter,\n} from '@cliqz/adblocker';\nimport { IBackgroundCallback, IMessageFromBackground } from '@cliqz/adblocker-content';\n\nexport type OnBeforeRequestDetailsType = Pick<\n  WebRequest.OnBeforeRequestDetailsType,\n  'url' | 'type' | 'requestId' | 'tabId' | 'originUrl' | 'documentUrl'\n> & {\n  initiator?: string; // Chromium only\n};\n\ntype OnHeadersReceivedDetailsType = Pick<\n  WebRequest.OnHeadersReceivedDetailsType,\n  'responseHeaders' | 'url' | 'type' | 'tabId' | 'requestId'\n>;\n\ntype StreamFilter = WebRequest.StreamFilter & {\n  onstart: (event: any) => void;\n  ondata: (event: { data: ArrayBuffer }) => void;\n  onstop: (event: any) => void;\n  onerror: (event: any) => void;\n};\n\n/**\n * Create an instance of `Request` from WebRequest details.\n */\nexport function fromWebRequestDetails(details: OnBeforeRequestDetailsType): Request {\n  const sourceUrl = details.initiator || details.originUrl || details.documentUrl;\n  return Request.fromRawDetails(\n    sourceUrl\n      ? {\n          _originalRequestDetails: details,\n          requestId: details.requestId,\n          sourceUrl,\n          tabId: details.tabId,\n          type: details.type,\n          url: details.url,\n        }\n      : {\n          _originalRequestDetails: details,\n          requestId: details.requestId,\n          tabId: details.tabId,\n          type: details.type,\n          url: details.url,\n        },\n  );\n}\n\n/**\n * Helper used when injecting custom CSP headers to update `responseHeaders`.\n */\nexport function updateResponseHeadersWithCSP(\n  details: OnHeadersReceivedDetailsType,\n  policies: string | undefined,\n): WebRequest.BlockingResponse {\n  if (policies === undefined) {\n    return {};\n  }\n\n  let responseHeaders = details.responseHeaders || [];\n  const CSP_HEADER_NAME = 'content-security-policy';\n\n  // Collect existing CSP headers from response\n  responseHeaders.forEach(({ name, value }) => {\n    if (name.toLowerCase() === CSP_HEADER_NAME) {\n      policies += `; ${value}`;\n    }\n  });\n\n  // Remove all CSP headers from response\n  responseHeaders = responseHeaders.filter(({ name }) => name.toLowerCase() !== CSP_HEADER_NAME);\n\n  // Add updated CSP header\n  responseHeaders.push({ name: CSP_HEADER_NAME, value: policies });\n\n  return { responseHeaders };\n}\n\n/**\n * Enable stream HTML filter on request `id` using `rules`.\n */\nexport function filterRequestHTML(\n  filterResponseData: Browser['webRequest']['filterResponseData'],\n  { id }: { id: string },\n  rules: HTMLSelector[],\n): void {\n  // Create filter to observe loading of resource\n  const filter = filterResponseData(id) as StreamFilter;\n  const decoder = new TextDecoder();\n  const encoder = new TextEncoder();\n  const htmlFilter = new StreamingHtmlFilter(rules);\n\n  const teardown = (event: { data?: ArrayBuffer }) => {\n    // Before disconnecting our streaming filter, we need to be extra careful\n    // and make sure that no data remains in either our streaming `TextDecoder`\n    // instance or the HTML filterer.\n    //\n    // In case any data remains, we write it to filter.\n    try {\n      const remaining = htmlFilter.write(decoder.decode()) + htmlFilter.flush();\n      if (remaining.length !== 0) {\n        filter.write(encoder.encode(remaining));\n      }\n    } catch (ex) {\n      // If we reach this point, there is probably no way we can recover...\n      console.error('Failed to flush HTML filterer', ex);\n    }\n\n    // If latest event had some data attached (i.e. 'ondata' event), we make\n    // sure to flush it through the filterer before disconnecting.\n    if (event.data !== undefined) {\n      filter.write(event.data);\n    }\n\n    // Disconnect streaming filter.\n    filter.disconnect();\n  };\n\n  filter.ondata = (event) => {\n    // On any chunk of data we implementa very fast UTF-8 validity check to make\n    // sure that we will be able to decode it. Note that in theory it should be\n    // possible that a chunk ends on the boundary of a multi-byte UTF-8 code and\n    // this check would fail?\n    if (isUTF8(new Uint8Array(event.data)) === false) {\n      return teardown(event);\n    }\n\n    try {\n      filter.write(encoder.encode(htmlFilter.write(decoder.decode(event.data, { stream: true }))));\n    } catch (ex) {\n      // If we fail to decode a chunk, we need to be extra conservative and stop\n      // listening to streaming response. Teardown takes care of flushing any\n      // data remaining in the pipeline and disconnecting the listener.\n      return teardown(event);\n    }\n  };\n\n  filter.onstop = () => {\n    teardown({});\n  };\n}\n\n/**\n * This abstraction takes care of blocking in one instance of `browser` (in\n * practice this would be `chrome` or `browser` global in the WebExtension\n * context).\n */\nexport class BlockingContext {\n  private readonly onBeforeRequest: (\n    details: OnBeforeRequestDetailsType,\n  ) => WebRequest.BlockingResponse;\n\n  private readonly onHeadersReceived: (\n    details: OnHeadersReceivedDetailsType,\n  ) => WebRequest.BlockingResponse;\n\n  private readonly onRuntimeMessage: (\n    msg: IBackgroundCallback & { action?: string },\n    sender: Runtime.MessageSender,\n  ) => Promise<IMessageFromBackground | undefined>;\n\n  constructor(private readonly browser: Browser, private readonly blocker: WebExtensionBlocker) {\n    this.onBeforeRequest = (details) => blocker.onBeforeRequest(browser, details);\n    this.onHeadersReceived = (details) => blocker.onHeadersReceived(browser, details);\n    this.onRuntimeMessage = (msg, sender) => blocker.onRuntimeMessage(browser, msg, sender);\n  }\n\n  public enable() {\n    if (this.blocker.config.loadNetworkFilters === true && this.browser.webRequest !== undefined) {\n      this.browser.webRequest.onBeforeRequest.addListener(\n        this.onBeforeRequest,\n        { urls: ['<all_urls>'] },\n        ['blocking'],\n      );\n\n      this.browser.webRequest.onHeadersReceived.addListener(\n        this.onHeadersReceived,\n        { urls: ['<all_urls>'], types: ['main_frame'] },\n        ['blocking', 'responseHeaders'],\n      );\n    }\n\n    // Start listening to messages coming from the content-script\n    if (\n      this.blocker.config.loadCosmeticFilters === true &&\n      this.browser.runtime !== undefined &&\n      this.browser.runtime.onMessage !== undefined\n    ) {\n      this.browser.runtime.onMessage.addListener(this.onRuntimeMessage);\n    }\n  }\n\n  public disable(): void {\n    if (this.browser.webRequest !== undefined) {\n      this.browser.webRequest.onBeforeRequest.removeListener(this.onBeforeRequest);\n      this.browser.webRequest.onHeadersReceived.removeListener(this.onHeadersReceived);\n    }\n\n    if (this.browser.runtime !== undefined && this.browser.runtime.onMessage !== undefined) {\n      this.browser.runtime.onMessage.removeListener(this.onRuntimeMessage);\n    }\n  }\n}\n\n/**\n * Wrap `FiltersEngine` into a WebExtension-friendly helper class. It exposes\n * methods to interface with WebExtension APIs needed to block ads.\n */\nexport class WebExtensionBlocker extends FiltersEngine {\n  private readonly contexts: WeakMap<Browser, BlockingContext> = new WeakMap();\n\n  // ----------------------------------------------------------------------- //\n  // Helpers to enable and disable blocking for 'browser'\n  // ----------------------------------------------------------------------- //\n\n  public enableBlockingInBrowser(browser: Browser): BlockingContext {\n    let context: undefined | BlockingContext = this.contexts.get(browser);\n    if (context !== undefined) {\n      return context;\n    }\n\n    // Create new blocking context for `browser`\n    context = new BlockingContext(browser, this);\n    this.contexts.set(browser, context);\n    context.enable();\n\n    return context;\n  }\n\n  public disableBlockingInBrowser(browser: Browser): void {\n    const context: undefined | BlockingContext = this.contexts.get(browser);\n    if (context === undefined) {\n      throw new Error('Trying to disable blocking which was not enabled');\n    }\n\n    this.contexts.delete(browser);\n    context.disable();\n  }\n\n  public isBlockingEnabled(browser: Browser): boolean {\n    return this.contexts.has(browser);\n  }\n\n  // ----------------------------------------------------------------------- //\n  // WebExtensionBlocker-specific additions to FiltersEngine\n  //\n  // Note: some of these methods internally require access to the 'browser'\n  // global in order to perform their function. Because WebExtensionBlocker can\n  // be registered in multiple ones (in theory), we do not want to depend either\n  // on the global object, or a single instance of 'browser' stored internally\n  // (except as part of a BlockingContext which binds one 'browser' object with\n  // a WebExtensionBlocker object to perform blocking in this context), so an\n  // extra 'browser' argument is often needed.\n  // ----------------------------------------------------------------------- //\n\n  /**\n   * This methods takes care of optionally performing HTML filtering.\n   *\n   * This can only be done if:\n   * 1. Request is 'main_frame'\n   * 2. `enableHtmlFiltering` is set to `true`.\n   * 3. `browser.webRequest.filterResponseData` (Firefox only!).\n   * 4. `TextEncoder` and `TextDecoder` are available.\n   */\n  public performHTMLFiltering(browser: Browser, request: Request): void {\n    if (\n      this.config.enableHtmlFiltering === true &&\n      browser.webRequest !== undefined &&\n      browser.webRequest.filterResponseData !== undefined &&\n      request.isMainFrame() === true &&\n      typeof TextDecoder !== 'undefined' &&\n      typeof TextEncoder !== 'undefined'\n    ) {\n      const htmlFilters = this.getHtmlFilters(request);\n      if (htmlFilters.length !== 0) {\n        filterRequestHTML(browser.webRequest.filterResponseData, request, htmlFilters);\n      }\n    }\n  }\n\n  private handleRuntimeMessage = async (\n    browser: Browser,\n    msg: IBackgroundCallback & { action?: string },\n    sender: Runtime.MessageSender,\n    sendResponse: (response?: IMessageFromBackground) => void,\n  ): Promise<void> => {\n    const promises: Promise<void>[] = [];\n\n    // Make sure we only listen to messages coming from our content-script\n    // based on the value of `action`.\n    if (msg.action !== 'getCosmeticsFilters') {\n      return;\n    }\n\n    if (sender.tab === undefined) {\n      throw new Error('required \"sender.tab\" information is not available');\n    }\n\n    if (sender.tab.id === undefined) {\n      throw new Error('required \"sender.tab.id\" information is not available');\n    }\n\n    if (sender.frameId === undefined) {\n      throw new Error('required \"sender.frameId\" information is not available');\n    }\n\n    // Extract hostname from sender's URL\n    const { url = '', frameId } = sender;\n    const parsed = parse(url);\n    const hostname = parsed.hostname || '';\n    const domain = parsed.domain || '';\n\n    // Once per tab/page load we inject base stylesheets. These are always\n    // the same for all frames of a given page because they do not depend on\n    // a particular domain and cannot be cancelled using unhide rules.\n    // Because of this, we specify `allFrames: true` when injecting them so\n    // that we do not need to perform this operation for sub-frames.\n    if (frameId === 0 && msg.lifecycle === 'start') {\n      const { active, styles } = this.getCosmeticsFilters({\n        domain,\n        hostname,\n        url,\n\n        classes: msg.classes,\n        hrefs: msg.hrefs,\n        ids: msg.ids,\n\n        // This needs to be done only once per tab\n        getBaseRules: true,\n        getInjectionRules: false,\n        getExtendedRules: false,\n        getRulesFromDOM: false,\n        getRulesFromHostname: false,\n      });\n\n      if (active === false) {\n        return;\n      }\n\n      promises.push(\n        this.injectStylesWebExtension(browser, styles, {\n          tabId: sender.tab.id,\n          allFrames: true,\n        }),\n      );\n    }\n\n    // Separately, requests cosmetics which depend on the page it self\n    // (either because of the hostname or content of the DOM). Content script\n    // logic is responsible for returning information about lists of classes,\n    // ids and hrefs observed in the DOM. MutationObserver is also used to\n    // make sure we can react to changes.\n    {\n      const { active, styles, scripts, extended } = this.getCosmeticsFilters({\n        domain,\n        hostname,\n        url,\n\n        classes: msg.classes,\n        hrefs: msg.hrefs,\n        ids: msg.ids,\n\n        // This needs to be done only once per frame\n        getBaseRules: false,\n        getInjectionRules: msg.lifecycle === 'start',\n        getExtendedRules: msg.lifecycle === 'start',\n        getRulesFromHostname: msg.lifecycle === 'start',\n\n        // This will be done every time we get information about DOM mutation\n        getRulesFromDOM: msg.lifecycle === 'dom-update',\n      });\n\n      if (active === false) {\n        return;\n      }\n\n      promises.push(\n        this.injectStylesWebExtension(browser, styles, { tabId: sender.tab.id, frameId }),\n      );\n\n      // Inject scripts from content script\n      if (scripts.length !== 0) {\n        sendResponse({\n          active,\n          extended,\n          scripts,\n          styles: '',\n        });\n      }\n    }\n\n    await Promise.all(promises);\n  };\n\n  /**\n   * Deal with request cancellation (`{ cancel: true }`) and redirection (`{ redirectUrl: '...' }`).\n   */\n  public onBeforeRequest = (\n    browser: Browser,\n    details: OnBeforeRequestDetailsType,\n  ): WebRequest.BlockingResponse => {\n    const request = fromWebRequestDetails(details);\n    if (this.config.guessRequestTypeFromUrl === true && request.type === 'other') {\n      request.guessTypeOfRequest();\n    }\n\n    if (request.isMainFrame()) {\n      this.performHTMLFiltering(browser, request);\n      return {};\n    }\n\n    const { redirect, match } = this.match(request);\n\n    if (redirect !== undefined) {\n      return { redirectUrl: redirect.dataUrl };\n    } else if (match === true) {\n      return { cancel: true };\n    }\n\n    return {};\n  };\n\n  public onHeadersReceived = (\n    _: Browser,\n    details: OnHeadersReceivedDetailsType,\n  ): WebRequest.BlockingResponse => {\n    return updateResponseHeadersWithCSP(\n      details,\n      this.getCSPDirectives(fromWebRequestDetails(details)),\n    );\n  };\n\n  public onRuntimeMessage = (\n    browser: Browser,\n    msg: IBackgroundCallback & { action?: string },\n    sender: Runtime.MessageSender,\n  ): Promise<IMessageFromBackground | undefined> => {\n    return new Promise((resolve, reject) => {\n      this.handleRuntimeMessage(browser, msg, sender, resolve).catch(reject);\n    });\n  };\n\n  private async injectStylesWebExtension(\n    browser: Browser,\n    styles: string,\n    {\n      tabId,\n      frameId,\n      allFrames = false,\n    }: {\n      tabId: number;\n      frameId?: number;\n      allFrames?: boolean;\n    },\n  ): Promise<void> {\n    // Abort if stylesheet is empty.\n    if (styles.length === 0) {\n      return;\n    }\n\n    // Abort if `this.browser.tabs` is not available.\n    if (browser.tabs === undefined) {\n      throw new Error('required \"tabs\" API is not defined');\n    }\n\n    // Abort if `this.browser.tabs.insertCSS` is not available.\n    if (browser.tabs.insertCSS === undefined) {\n      throw new Error('required \"tabs.insertCSS\" API is not defined');\n    }\n\n    // Proceed with stylesheet injection.\n    return browser.tabs.insertCSS(\n      tabId,\n      frameId\n        ? {\n            allFrames,\n            code: styles,\n            cssOrigin: 'user',\n            frameId,\n            matchAboutBlank: true,\n            runAt: 'document_start',\n          }\n        : {\n            allFrames,\n            code: styles,\n            cssOrigin: 'user',\n            matchAboutBlank: true,\n            runAt: 'document_start',\n          },\n    );\n  }\n}\n\n// Re-export symbols from @cliqz/adblocker\nexport * from '@cliqz/adblocker';\n"],"names":["extractHostname","url","urlIsValidHostname","start","end","length","hasUpper","startsWith","charCodeAt","indexOfProtocol","indexOf","protocolSize","c0","c1","c2","c3","c4","i","lowerCaseCode","indexOfIdentifier","indexOfClosingBracket","indexOfPort","code","slice","toLowerCase","hostname","isValidHostname","lastDotIndex","lastCharCode","len","isValidAscii","DEFAULT_OPTIONS","allowIcannDomains","allowPrivateDomains","detectIp","mixedInputs","validHosts","validateHostname","setDefaultsImpl","parseImpl","step","suffixLookup","partialOptions","result","options","undefined","setDefaults","isIp","hasColon","isProbablyIpv6","numberOfDots","isProbablyIpv4","publicSuffix","domain","suffix","vhost","endsWith","shareSameDomainSuffix","publicSuffixIndex","lastDotBeforeSuffixIndex","lastIndexOf","extractDomainWithSuffix","getDomain","subdomain","getSubdomain","domainWithoutSuffix","packed","Uint32Array","binSearch","arr","elt","low","high","mid","midVal","BUFFER","out","last","isIcann","isPrivate","fastPathLookup","matchIndex","matchKind","matchLabels","index","numberOfHashes","maximumNumberOfLabels","hash","hashHostnameLabelsBackward","label","labelStart","match","parse","newNode","chars","Map","EMPTY_UINT8_ARRAY","Uint8Array","SmazCompress","constructor","codebook","maxSize","this","trie","strings","node","tok","root","j","c","next","get","set","create","buffer","verbatim","getCompressedSize","str","bufferIndex","verbatimIndex","inputIndex","indexAfterMatch","compress","flushVerbatim","k","SmazDecompress","decompress","byteLength","output","String","fromCharCode","stop","Smaz","compressor","decompressor","cosmeticSelectorCodebook","networkCSPCodebook","networkFilterCodebook","networkHostnameCodebook","networkRedirectCodebook","networkRawCodebook","cosmeticRawCodebook","Compression","cosmeticSelector","networkCSP","networkRedirect","networkHostname","networkFilter","networkRaw","cosmeticRaw","T","table","Int32Array","n","maxInt","base","regexNonASCII","regexSeparators","errors","overflow","error","type","RangeError","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","Math","floor","decode","input","inputLength","bias","basic","push","oldi","w","codePoint","t","baseMinusT","splice","fromCodePoint","apply","encode","counter","value","extra","ucs2decode","currentValue","basicLength","handledCPCount","m","handledCPCountPlusOne","q","qMinusT","join","toASCII","labels","replace","split","encoded","test","EMPTY_UINT32_ARRAY","LITTLE_ENDIAN","Int8Array","Int16Array","promise","getCompressionSingleton","COMPRESSION","sizeOfLength","sizeOfBytes","array","align","sizeOfBytesWithLength","sizeOfASCII","sizeOfUTF8","encodedLength","sizeOfUint32Array","StaticDataView","enableCompression","Error","pos","static","fromUint8Array","capacity","compression","checksum","buf","C","L","crc32","dataAvailable","setPos","getPos","seekZero","checkSize","subarray","align4","pushBool","bool","pushByte","Number","getBool","Boolean","getByte","setByte","byte","octet","pushUint8","getUint8","pushBytes","bytes","pushLength","getBytes","numberOfBytes","getLength","getUint32ArrayView","desiredSize","view","byteOffset","uint8","pushUint16","uint16","getUint16","pushUint32","uint32","getUint32","pushUint32Array","getUint32Array","pushUTF8","raw","getUTF8","pushASCII","getASCII","pushNetworkRedirect","getNetworkRedirect","pushNetworkHostname","getNetworkHostname","pushNetworkCSP","getNetworkCSP","pushNetworkFilter","getNetworkFilter","pushCosmeticSelector","getCosmeticSelector","pushRawCosmetic","getRawCosmetic","pushRawNetwork","getRawNetwork","lengthShort","Config","debug","enableHtmlFiltering","enableInMemoryCache","enableMutationObserver","enableOptimizations","guessRequestTypeFromUrl","integrityCheck","loadCSPFilters","loadCosmeticFilters","loadExceptionFilters","loadExtendedSelectors","loadGenericCosmeticsFilters","loadNetworkFilters","getSerializedSize","serialize","queueMicrotask","window","cb","Promise","resolve","then","catch","err","setTimeout","registerCallback","event","callback","listeners","listenersForEvent","unregisterCallback","indexOfCallback","triggerCallback","args","size","listener","fetchWithRetry","fetch","retry","fetchWrapper","ex","reject","fetchResource","response","text","PREFIX","adsLists","adsAndTrackingLists","fullLists","fetchLists","urls","all","map","fetchResources","NetworkBuilder","Set","prefix","infix","redirect","blockRequestsWithType","has","add","images","scripts","frames","fonts","medias","styles","redirectTo","urlContains","urlStartsWith","urlEndsWith","withHostname","toString","parts","option","block","RECURSIVE_PSEUDO_CLASSES","TOKENS","attribute","id","class","comma","combinator","TOKENS_WITH_PARENS","TOKENS_WITH_STRINGS","TRIM_TOKENS","TOKENS_FOR_RESTORE","Object","assign","splitOnMatch","pattern","lastIndex","exec","from","content","before","after","groups","RegExp","source","GRAMMAR","name","operator","namespace","caseSensitive","argument","subtree","restoreNested","tokens","regex","types","token","isEscaped","backslashes","gobbleQuotes","quote","gobbleParens","stack","char","selector","replacement","opening","gobble","offset","repeat","tokenize","trim","doubleQuotes","selectorWithoutDoubleQuotes","singleQuotes","selectorWithoutQuotes","parens","selectorWithoutParens","strarr","tokenizer","filter","a","every","tokenizeBy","nestTokens","list","some","selectors","temp","sub","left","right","isAST","compound","walk","o","parent","recursive","ast","EXTENDED_PSEUDO_CLASSES","PSEUDO_CLASSES","PSEUDO_ELEMENTS","SelectorType","classifySelector","Normal","foundSupportedExtendedSelector","Invalid","argumentType","Extended","EXTENSIONS","TOKENS_BUFFER","reset","empty","full","remaining","HASH_SEED","bitCount","getBit","mask","setBit","clearBit","fastHashBetween","begin","fastHash","hashStrings","fastStartsWith","haystack","needle","ceil","fastStartsWithFrom","isDigit","ch","isAlpha","isAllowedCode","isAlphaExtended","isCyrillic","tokenizeInPlace","skipFirstToken","skipLastToken","min","inside","tokenizeNoSkipInPlace","tokenizeNoSkip","binLookup","hasUnicodeRe","hasUnicode","TLDTS_OPTIONS","NORMALIZED_TYPE_TOKEN","beacon","cspReport","csp_report","cspviolationreport","document","eventsource","font","image","imageset","mainFrame","main_frame","manifest","media","object","object_subrequest","other","ping","preflight","script","signedexchange","speculative","stylesheet","subFrame","sub_frame","texttrack","webSocket","web_manifest","websocket","xhr","xml_dtd","xmlhttprequest","xslt","hashHostnameBackward","getHashesFromLabelsBackward","startOfDomain","getEntityHashesFromLabelsBackward","hostnameWithoutPublicSuffix","indexOfDot","getHostnameWithoutPublicSuffix","getHostnameHashesFromLabelsBackward","Request","requestId","tabId","sourceDomain","sourceHostname","_originalRequestDetails","hostnameHashes","entityHashes","sourceHostnameHashes","sourceEntityHashes","isThirdParty","isFirstParty","isSupported","isHttp","isHttps","indexOfComa","sourceUrl","parsed","getHostnameHashes","getEntityHashes","getTokens","isMainFrame","isSubFrame","guessTypeOfRequest","currentType","ext","endOfPath","indexOfFragment","indexOfQuery","startOfExt","extname","IMAGE_EXTENSIONS","MEDIA_EXTENSIONS","STYLE_EXTENSIONS","SCRIPT_EXTENSIONS","DOCUMENT_EXTENSIONS","FONT_EXTENSIONS","guessUrlType","Domains","entities","hostnames","notEntities","notHostnames","negation","entity","sort","optionalParts","updateId","notHostname","notEntity","estimate","extractHTMLSelectorFromRule","rule","currentParsingDepth","startOfSelectorIndex","prev","tagShouldBeRemoved","tag","plainPatterns","regexpPatterns","StreamingHtmlFilter","patterns","_","extractSelectorsFromRules","flush","write","chunk","tags","rest","html","endOfLastTag","endOfTagIndex","indexOfClosingTag","lastClosingTagIndex","indexOfNextTag","extractTagsFromHtml","toRemove","filteredHtml","reverse","removeTagsFromHtml","selectTagsToRemove","EMPTY_TOKENS","DEFAULT_HIDDING_STYLE","isSimpleSelector","nextCode","isSimpleHrefSelector","isValidCss","div","createElement","matches","validSelectorRe","CosmeticFilter","domains","rawLine","style","line","sharpIndex","afterSharpIndex","suffixStartIndex","indexOfStyle","selectorType","isUnicode","deserialize","isCosmeticFilter","isNetworkFilter","sizeOfCosmeticSelector","sizeOfRawCosmetic","isUnhide","isScriptInject","hasHostnameConstraint","isIdSelector","isClassSelector","endOfSelector","isHrefSelector","getSelector","hrefIndex","hrefEnd","getScript","js","scriptName","scriptArguments","firstPart","s","getId","computeFilterId","hasCustomStyle","getStyle","getStyleAttributeHash","getSelectorAST","parseCssSelector","getExtendedSelector","isExtended","isRemove","isCSS","isHtmlFiltering","isGenericHide","_a","_b","HTTP_HASH","HTTPS_HASH","FROM_ANY","REQUEST_TYPE_TO_MASK","getListOfRequestTypes","fromDocument","fromImage","fromMedia","fromObject","fromOther","fromPing","fromScript","fromStylesheet","fromSubdocument","fromWebsocket","fromXmlHttpRequest","fromFont","csp","denyallow","compileRegex","isLeftAnchor","isRightAnchor","isFullRegex","MATCH_ALL","NetworkFilter","cptMaskPositive","cptMaskNegative","filterIndexStart","filterIndexEnd","optionsIndex","rawOption","optionValue","indexOfEqual","optionMask","firstSeparator","separatorCode","setNetworkMask","indexOfSeparator","indexOfWildcard","checkIsRegex","request","isCptAllowed","fromHttps","fromHttp","firstParty","thirdParty","checkOptions","getFilter","isHostnameAnchor","filterHostname","getHostname","isFollowedByWildcard","isAnchoredByHostname","isRegex","getRegex","requestHostname","hasFilter","checkPattern","sizeOfNetworkCSP","sizeOfNetworkFilter","sizeOfNetworkHostname","sizeOfRawNetwork","sizeOfNetworkRedirect","isException","hasHostname","fromAny","numberOfCptOptions","getCptMask","getListOfRequestTypesNegated","isImportant","isRedirectRule","getRedirect","isRedirect","isCSP","isElemHide","isSpecificHide","isBadFilter","getIdWithoutBadFilter","hasDomains","getMask","precedingCh","tokenizeWithWildcardsInPlace","tokenizeRegexInPlace","cpt","isPlain","detectFilterType","firstCharCode","secondCharCode","dollarIndex","afterDollarIndex","afterDollarCharCode","afterSharpCharCode","parseFilter","filterType","parseFilters","config","networkFilters","cosmeticFilters","lines","nextLine","getFilters","concat","CONTENT_TYPE","flv","contentType","aliases","body","gif","ico","jpg","json","mp3","mp4","pdf","png","svg","txt","wav","webm","webp","wmv","MIME_TO_RESOURCE","resources","fake","alias","getResourceForMime","mime","Resources","numberOfResources","forEach","data","typeToResource","chunks","resource","firstNewLine","key","entries","resourcesByName","getResource","dataUrl","btoa","Buffer","estimatedSize","escape","setWithDefault","bucket","groupBy","filters","criteria","grouped","Array","values","splitBy","condition","positive","negative","OPTIMIZATIONS","description","fusion","groupByCriteria","select","f","noopOptimizeNetwork","noopOptimizeCosmetic","optimizeNetwork","fused","toFuse","group","nextPow2","v","UID","EMPTY_BUCKET","MAX_SAFE_INTEGER","ReverseIndex","optimize","bucketsIndex","filtersIndexStart","numberOfFilters","tokensLookupIndex","cache","deserializeFilter","update","tokensLookupIndexSize","bucketsIndexSize","updateInternals","iterMatchingFilters","getNextId","iterBucket","newFilters","removedFilters","clear","totalNumberOfTokens","totalNumberOfIndexedFilters","filtersTokens","estimatedBufferSize","f1","f2","histogram","max","multiTokens","suffixes","allocate","filterIndex","bestToken","minCount","tokenCount","indexInBucketsIndex","filtersForMask","startOfBucket","endOfBucket","filtersIndices","lastRequestSeen","EMPTY_FILTERS","FiltersContainer","container","bufferSizeEstimation","selected","currentFilters","storedFiltersRemoved","numberOfExistingFilters","storedFiltersAdded","createStylesheet","rules","maximumNumberOfSelectors","styleStr","createStylesheetFromRulesWithCustomStyles","selectorsPerStyle","stylesheets","selectorsPerStyleArray","createStylesheetFromRules","createLookupTokens","hostnamesHashes","entitiesHashes","CosmeticFilterBucket","genericRules","classesIndex","hostnameIndex","hrefsIndex","htmlIndex","idsIndex","unhideIndex","baseStylesheet","extraGenericRules","classSelectors","genericHideRules","hostnameSpecificRules","hrefSelectors","htmlRules","idSelectors","unHideRules","getHtmlRules","hostnameTokens","disabledRules","getCosmeticsFilters","classes","hrefs","ids","allowGenericHides","allowSpecificHides","getBaseRules","getInjectionRules","getExtendedRules","getRulesFromDOM","getRulesFromHostname","getGenericRules","sorted","compactTokens","arrays","totalSize","concatTypedArrays","href","extended","injections","injectionsDisabled","getBaseStylesheet","extendedProcessed","extendedStyles","remove","lazyPopulateGenericRulesCache","canBeHiddenSelectors","cannotBeHiddenRules","canBeHiddenRules","NetworkFilterBucket","badFiltersIds","badFilters","matchAll","isFilterDisabled","badFilter","ENGINE_VERSION","shouldApplyHideException","genericHideFilter","currentScore","score","FilterEngine","onceListeners","onListeners","on","once","unsubscribe","emit","delete","lists","super","hideExceptions","exceptions","importants","redirects","cosmetics","newCosmeticFilters","newNetworkFilters","init","caching","path","read","engine","fromCached","listsPromises","resourcesPromise","updateResources","fetchImpl","fromLists","serialized","serializedEngineVersion","currentPos","expected","numberOfLists","loadedLists","keys","hasList","removedCosmeticFilters","removedNetworkFilters","updated","removedNetworkFiltersSet","updateFromDiff","added","removed","prototype","getHtmlFilters","htmlSelectors","active","fromRawDetails","genericHides","specificHides","injection","getCSPDirectives","disabledCsp","enabledCsp","csps","exception","redirectNone","redirectRule","blockScripts","blockImages","blockMedias","blockFrames","blockFonts","blockStyles","utf8d","isUTF8","isAscii","state","fromWebRequestDetails","details","initiator","originUrl","documentUrl","updateResponseHeadersWithCSP","policies","responseHeaders","CSP_HEADER_NAME","filterRequestHTML","filterResponseData","decoder","TextDecoder","encoder","TextEncoder","htmlFilter","teardown","console","disconnect","ondata","stream","onstop","BlockingContext","browser","blocker","onBeforeRequest","onHeadersReceived","onRuntimeMessage","msg","sender","enable","webRequest","addListener","runtime","onMessage","disable","removeListener","FiltersEngine","contexts","WeakMap","handleRuntimeMessage","async","sendResponse","promises","action","tab","frameId","lifecycle","injectStylesWebExtension","allFrames","performHTMLFiltering","redirectUrl","cancel","enableBlockingInBrowser","context","disableBlockingInBrowser","isBlockingEnabled","htmlFilters","tabs","insertCSS","cssOrigin","matchAboutBlank","runAt","prevRevision","newRevision","debugConfig","prevRevisionFilters","prevRevisionIds","newRevisionFilters","newRevisionIds","diffs","addedCumul","removedCumul"],"mappings":"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,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,SAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,SAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,KAAK,OAAO,QAAQ,QAAQ,QAAQ,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,UAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,EAAE,UAAU,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,EAAE,EAAE,GAAG,SAAS,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,KAAK,QAAQ,QAAQ,QAAQ,QAAQ,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,SAAS,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,SAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,IAAI,SAAS,SAAS,SAAS,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,UAAU,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,WAAW,EAAE,EAAE,EAAE,EAAE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KA,GAAK,EAAGA,EAAIkH,EAAMlH,GAAK,EAC1B+G,GAAUC,OAAOC,aAAa7D,EAAIpD,SAGpC+G,GAAU1B,KAAKF,SAAS/B,EAAIpD,IAC5BA,GAAK,EAGT,OAAO+G,SCvBEI,EAIXjC,YAAqBC,EAA6BC,EAAU,KAAvCC,KAAQF,SAARA,EACnBE,KAAK+B,WAAa,IAAInC,EAAaE,EAAUC,GAC7CC,KAAKgC,aAAe,IAAIT,EAAezB,GAGlCsB,SAASL,GACd,OAAOf,KAAK+B,WAAWX,SAASL,GAG3BD,kBAAkBC,GACvB,OAAOf,KAAK+B,WAAWjB,kBAAkBC,GAGpCS,WAAWZ,GAChB,OAAOZ,KAAKgC,aAAaR,WAAWZ,ICbzB,IAAAqB,EAAA,CACb,iJACA,4IACA,qDACA,4CACA,yCACA,uCACA,0CACA,qCACA,qCACA,oCACA,mCACA,kCACA,kCACA,kCACA,iCACA,+BACA,8BACA,4BACA,2BACA,yBACA,sBACA,qBACA,oBACA,mBACA,mBACA,kBACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,eACA,cACA,cACA,cACA,aACA,aACA,aACA,aACA,aACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KC9PaC,EAAA,CACb,qJACA,oFACA,wDACA,wCACA,qCACA,qCACA,+BACA,8BACA,8BACA,2BACA,0BACA,yBACA,uBACA,sBACA,qBACA,oBACA,oBACA,oBACA,kBACA,kBACA,iBACA,eACA,cACA,cACA,cACA,cACA,aACA,aACA,aACA,YACA,YACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KCxGaC,EAAA,CACb,yLACA,kJACA,0DACA,kDACA,oCACA,4BACA,+BACA,2BACA,wBACA,wBACA,uBACA,mBACA,kBACA,mBACA,iBACA,kBACA,eACA,eACA,cACA,cACA,aACA,YACA,YACA,YACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KC9PaC,EAAA,CACb,iCACA,qBACA,oBACA,oBACA,mBACA,kBACA,gBACA,aACA,YACA,YACA,YACA,WACA,UACA,UACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KC9PaC,EAAA,CACb,oCACA,mCACA,8BACA,2BACA,0BACA,uBACA,mBACA,kBACA,gBACA,gBACA,gBACA,eACA,eACA,cACA,aACA,aACA,YACA,YACA,WACA,WACA,UACA,UACA,UACA,SACA,SACA,SACA,QACA,QACA,OACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KC5EaC,EAAA,CACb,iCACA,gCACA,gCACA,gCACA,yBACA,wBACA,uBACA,oBACA,mBACA,kBACA,kBACA,iBACA,iBACA,iBACA,gBACA,kBACA,gBACA,cACA,cACA,cACA,cACA,aACA,aACA,YACA,YACA,WACA,WACA,WACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KC9PaC,EAAA,CACb,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,iCACA,mCACA,iCACA,iCACA,gCACA,8BACA,6BACA,4BACA,uBACA,mBACA,kBACA,kBACA,iBACA,eACA,eACA,eACA,cACA,cACA,cACA,aACA,aACA,aACA,aACA,aACA,aACA,aACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,QACA,QACA,QACA,QACA,QACA,QACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,KCpPY,MAAOC,EAArB3C,cACkBG,KAAAyC,iBAAyB,IAAIX,EAAKG,GAClCjC,KAAA0C,WAAmB,IAAIZ,EAAKI,GAC5BlC,KAAA2C,gBAAwB,IAAIb,EAAKO,GACjCrC,KAAA4C,gBAAwB,IAAId,EAAKM,GACjCpC,KAAA6C,cAAsB,IAAIf,EAAKK,GAC/BnC,KAAA8C,WAAmB,IAAIhB,EAAKQ,GAC5BtC,KAAA+C,YAAoB,IAAIjB,EAAKS,ICtB/C,MAAMS,EAAgB,MACpB,IAAIzC,EAAY,EAChB,MAAM0C,EAAoB,IAAIC,WAAW,KAEzC,IAAK,IAAIC,EAAY,EAAS,MAANA,EAAWA,GAAK,EACtC5C,EAAI4C,EACJ5C,EAAQ,EAAJA,GAAS,UAAaA,IAAM,EAAKA,IAAM,EAC3CA,EAAQ,EAAJA,GAAS,UAAaA,IAAM,EAAKA,IAAM,EAC3CA,EAAQ,EAAJA,GAAS,UAAaA,IAAM,EAAKA,IAAM,EAC3CA,EAAQ,EAAJA,GAAS,UAAaA,IAAM,EAAK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"}